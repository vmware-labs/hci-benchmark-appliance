# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******
from .VmomiSupport import CreateDataType, CreateManagedType
from .VmomiSupport import CreateEnumType
from .VmomiSupport import AddVersion, AddVersionParent
from .VmomiSupport import AddBreakingChangesInfo
from .VmomiSupport import F_LINK, F_LINKABLE
from .VmomiSupport import F_OPTIONAL, F_SECRET
from .VmomiSupport import newestVersions, ltsVersions
from .VmomiSupport import dottedVersions, oldestVersions

AddVersion("vmodl.query.version.version4", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version3", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version2", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.version.version0", "", "", 0, "vim25")
AddVersion("vmodl.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.version.version2", "", "", 0, "vim25")
AddVersion("rbd.version.RbdSCADeprecation", "rbd1", "fC09A5412", 0, "rbd1")
AddVersion("rbd.version.unstable", "rbd1", "uC09A5412", 0, "rbd1")
AddVersion("vmodl.reflect.version.version1", "reflect", "1.0", 0, "reflect")
AddVersion("rbd.version.v7_0", "rbd1", "7.0.0.0", 0, "rbd1")
AddVersion("rbd.version.version1", "rbd1", "1.0", 0, "rbd1")
AddVersion("rbd.version.version3", "rbd1", "3.0", 0, "rbd1")
AddVersion("rbd.version.version2", "rbd1", "2.0", 0, "rbd1")
AddVersion("rbd.version.version5", "rbd1", "5.0", 0, "rbd1")
AddVersion("rbd.version.version4", "rbd1", "4.0", 0, "rbd1")
AddVersion("rbd.version.v8_0_0_1", "rbd1", "8.0.0.1", 0, "rbd1")
AddVersion("rbd.version.disabled", "rbd1", "", 0, "rbd1")
AddVersion("vim.version.version6", "vim25", "4.1", 0, "vim25")
AddVersion("vim.version.version7", "vim25", "5.0", 0, "vim25")
AddVersion("vim.version.version1", "vim2", "2.0", 0, "vim25")
AddVersion("vim.version.version4", "vim25", "2.5u2server", 0, "vim25")
AddVersion("vim.version.version5", "vim25", "4.0", 0, "vim25")
AddVersion("vim.version.version2", "vim25", "2.5", 0, "vim25")
AddVersion("vim.version.version3", "vim25", "2.5u2", 0, "vim25")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version4")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.version.version0", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version2")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.query.version.version4")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.query.version.version3")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.query.version.version2")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.query.version.version1")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.version.version0")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.version.version1")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.version.version2")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.RbdSCADeprecation")
AddVersionParent("rbd.version.RbdSCADeprecation", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.v7_0")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.version1")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.version3")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.version2")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.version5")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.version4")
AddVersionParent("rbd.version.RbdSCADeprecation", "rbd.version.v8_0_0_1")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version6")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version7")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version1")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version4")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version5")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version2")
AddVersionParent("rbd.version.RbdSCADeprecation", "vim.version.version3")
AddVersionParent("rbd.version.unstable", "vmodl.query.version.version4")
AddVersionParent("rbd.version.unstable", "vmodl.query.version.version3")
AddVersionParent("rbd.version.unstable", "vmodl.query.version.version2")
AddVersionParent("rbd.version.unstable", "vmodl.query.version.version1")
AddVersionParent("rbd.version.unstable", "vmodl.version.version0")
AddVersionParent("rbd.version.unstable", "vmodl.version.version1")
AddVersionParent("rbd.version.unstable", "vmodl.version.version2")
AddVersionParent("rbd.version.unstable", "rbd.version.RbdSCADeprecation")
AddVersionParent("rbd.version.unstable", "rbd.version.unstable")
AddVersionParent("rbd.version.unstable", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.unstable", "rbd.version.v7_0")
AddVersionParent("rbd.version.unstable", "rbd.version.version1")
AddVersionParent("rbd.version.unstable", "rbd.version.version3")
AddVersionParent("rbd.version.unstable", "rbd.version.version2")
AddVersionParent("rbd.version.unstable", "rbd.version.version5")
AddVersionParent("rbd.version.unstable", "rbd.version.version4")
AddVersionParent("rbd.version.unstable", "rbd.version.v8_0_0_1")
AddVersionParent("rbd.version.unstable", "vim.version.version6")
AddVersionParent("rbd.version.unstable", "vim.version.version7")
AddVersionParent("rbd.version.unstable", "vim.version.version1")
AddVersionParent("rbd.version.unstable", "vim.version.version4")
AddVersionParent("rbd.version.unstable", "vim.version.version5")
AddVersionParent("rbd.version.unstable", "vim.version.version2")
AddVersionParent("rbd.version.unstable", "vim.version.version3")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.v7_0", "vmodl.query.version.version4")
AddVersionParent("rbd.version.v7_0", "vmodl.query.version.version3")
AddVersionParent("rbd.version.v7_0", "vmodl.query.version.version2")
AddVersionParent("rbd.version.v7_0", "vmodl.query.version.version1")
AddVersionParent("rbd.version.v7_0", "vmodl.version.version0")
AddVersionParent("rbd.version.v7_0", "vmodl.version.version1")
AddVersionParent("rbd.version.v7_0", "vmodl.version.version2")
AddVersionParent("rbd.version.v7_0", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.v7_0", "rbd.version.v7_0")
AddVersionParent("rbd.version.v7_0", "rbd.version.version1")
AddVersionParent("rbd.version.v7_0", "rbd.version.version3")
AddVersionParent("rbd.version.v7_0", "rbd.version.version2")
AddVersionParent("rbd.version.v7_0", "rbd.version.version5")
AddVersionParent("rbd.version.v7_0", "rbd.version.version4")
AddVersionParent("rbd.version.v7_0", "vim.version.version6")
AddVersionParent("rbd.version.v7_0", "vim.version.version7")
AddVersionParent("rbd.version.v7_0", "vim.version.version1")
AddVersionParent("rbd.version.v7_0", "vim.version.version4")
AddVersionParent("rbd.version.v7_0", "vim.version.version5")
AddVersionParent("rbd.version.v7_0", "vim.version.version2")
AddVersionParent("rbd.version.v7_0", "vim.version.version3")
AddVersionParent("rbd.version.version1", "vmodl.version.version0")
AddVersionParent("rbd.version.version1", "vmodl.version.version1")
AddVersionParent("rbd.version.version1", "vmodl.version.version2")
AddVersionParent("rbd.version.version1", "rbd.version.version1")
AddVersionParent("rbd.version.version3", "vmodl.query.version.version4")
AddVersionParent("rbd.version.version3", "vmodl.query.version.version3")
AddVersionParent("rbd.version.version3", "vmodl.query.version.version2")
AddVersionParent("rbd.version.version3", "vmodl.query.version.version1")
AddVersionParent("rbd.version.version3", "vmodl.version.version0")
AddVersionParent("rbd.version.version3", "vmodl.version.version1")
AddVersionParent("rbd.version.version3", "vmodl.version.version2")
AddVersionParent("rbd.version.version3", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.version3", "rbd.version.version1")
AddVersionParent("rbd.version.version3", "rbd.version.version3")
AddVersionParent("rbd.version.version3", "rbd.version.version2")
AddVersionParent("rbd.version.version3", "vim.version.version6")
AddVersionParent("rbd.version.version3", "vim.version.version7")
AddVersionParent("rbd.version.version3", "vim.version.version1")
AddVersionParent("rbd.version.version3", "vim.version.version4")
AddVersionParent("rbd.version.version3", "vim.version.version5")
AddVersionParent("rbd.version.version3", "vim.version.version2")
AddVersionParent("rbd.version.version3", "vim.version.version3")
AddVersionParent("rbd.version.version2", "vmodl.version.version0")
AddVersionParent("rbd.version.version2", "vmodl.version.version1")
AddVersionParent("rbd.version.version2", "vmodl.version.version2")
AddVersionParent("rbd.version.version2", "rbd.version.version1")
AddVersionParent("rbd.version.version2", "rbd.version.version2")
AddVersionParent("rbd.version.version5", "vmodl.query.version.version4")
AddVersionParent("rbd.version.version5", "vmodl.query.version.version3")
AddVersionParent("rbd.version.version5", "vmodl.query.version.version2")
AddVersionParent("rbd.version.version5", "vmodl.query.version.version1")
AddVersionParent("rbd.version.version5", "vmodl.version.version0")
AddVersionParent("rbd.version.version5", "vmodl.version.version1")
AddVersionParent("rbd.version.version5", "vmodl.version.version2")
AddVersionParent("rbd.version.version5", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.version5", "rbd.version.version1")
AddVersionParent("rbd.version.version5", "rbd.version.version3")
AddVersionParent("rbd.version.version5", "rbd.version.version2")
AddVersionParent("rbd.version.version5", "rbd.version.version5")
AddVersionParent("rbd.version.version5", "rbd.version.version4")
AddVersionParent("rbd.version.version5", "vim.version.version6")
AddVersionParent("rbd.version.version5", "vim.version.version7")
AddVersionParent("rbd.version.version5", "vim.version.version1")
AddVersionParent("rbd.version.version5", "vim.version.version4")
AddVersionParent("rbd.version.version5", "vim.version.version5")
AddVersionParent("rbd.version.version5", "vim.version.version2")
AddVersionParent("rbd.version.version5", "vim.version.version3")
AddVersionParent("rbd.version.version4", "vmodl.query.version.version4")
AddVersionParent("rbd.version.version4", "vmodl.query.version.version3")
AddVersionParent("rbd.version.version4", "vmodl.query.version.version2")
AddVersionParent("rbd.version.version4", "vmodl.query.version.version1")
AddVersionParent("rbd.version.version4", "vmodl.version.version0")
AddVersionParent("rbd.version.version4", "vmodl.version.version1")
AddVersionParent("rbd.version.version4", "vmodl.version.version2")
AddVersionParent("rbd.version.version4", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.version4", "rbd.version.version1")
AddVersionParent("rbd.version.version4", "rbd.version.version3")
AddVersionParent("rbd.version.version4", "rbd.version.version2")
AddVersionParent("rbd.version.version4", "rbd.version.version4")
AddVersionParent("rbd.version.version4", "vim.version.version6")
AddVersionParent("rbd.version.version4", "vim.version.version7")
AddVersionParent("rbd.version.version4", "vim.version.version1")
AddVersionParent("rbd.version.version4", "vim.version.version4")
AddVersionParent("rbd.version.version4", "vim.version.version5")
AddVersionParent("rbd.version.version4", "vim.version.version2")
AddVersionParent("rbd.version.version4", "vim.version.version3")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.query.version.version4")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.query.version.version3")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.query.version.version2")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.query.version.version1")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.version.version0")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.version.version1")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.version.version2")
AddVersionParent("rbd.version.v8_0_0_1", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.v7_0")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.version1")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.version3")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.version2")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.version5")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.version4")
AddVersionParent("rbd.version.v8_0_0_1", "rbd.version.v8_0_0_1")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version6")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version7")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version1")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version4")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version5")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version2")
AddVersionParent("rbd.version.v8_0_0_1", "vim.version.version3")
AddVersionParent("rbd.version.disabled", "vmodl.query.version.version4")
AddVersionParent("rbd.version.disabled", "vmodl.query.version.version3")
AddVersionParent("rbd.version.disabled", "vmodl.query.version.version2")
AddVersionParent("rbd.version.disabled", "vmodl.query.version.version1")
AddVersionParent("rbd.version.disabled", "vmodl.version.version0")
AddVersionParent("rbd.version.disabled", "vmodl.version.version1")
AddVersionParent("rbd.version.disabled", "vmodl.version.version2")
AddVersionParent("rbd.version.disabled", "rbd.version.RbdSCADeprecation")
AddVersionParent("rbd.version.disabled", "rbd.version.unstable")
AddVersionParent("rbd.version.disabled", "vmodl.reflect.version.version1")
AddVersionParent("rbd.version.disabled", "rbd.version.v7_0")
AddVersionParent("rbd.version.disabled", "rbd.version.version1")
AddVersionParent("rbd.version.disabled", "rbd.version.version3")
AddVersionParent("rbd.version.disabled", "rbd.version.version2")
AddVersionParent("rbd.version.disabled", "rbd.version.version5")
AddVersionParent("rbd.version.disabled", "rbd.version.version4")
AddVersionParent("rbd.version.disabled", "rbd.version.v8_0_0_1")
AddVersionParent("rbd.version.disabled", "rbd.version.disabled")
AddVersionParent("rbd.version.disabled", "vim.version.version6")
AddVersionParent("rbd.version.disabled", "vim.version.version7")
AddVersionParent("rbd.version.disabled", "vim.version.version1")
AddVersionParent("rbd.version.disabled", "vim.version.version4")
AddVersionParent("rbd.version.disabled", "vim.version.version5")
AddVersionParent("rbd.version.disabled", "vim.version.version2")
AddVersionParent("rbd.version.disabled", "vim.version.version3")
AddVersionParent("vim.version.version6", "vmodl.query.version.version3")
AddVersionParent("vim.version.version6", "vmodl.query.version.version2")
AddVersionParent("vim.version.version6", "vmodl.query.version.version1")
AddVersionParent("vim.version.version6", "vmodl.version.version0")
AddVersionParent("vim.version.version6", "vmodl.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version6")
AddVersionParent("vim.version.version6", "vim.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version4")
AddVersionParent("vim.version.version6", "vim.version.version5")
AddVersionParent("vim.version.version6", "vim.version.version2")
AddVersionParent("vim.version.version6", "vim.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version4")
AddVersionParent("vim.version.version7", "vmodl.query.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version2")
AddVersionParent("vim.version.version7", "vmodl.query.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version0")
AddVersionParent("vim.version.version7", "vmodl.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version2")
AddVersionParent("vim.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version6")
AddVersionParent("vim.version.version7", "vim.version.version7")
AddVersionParent("vim.version.version7", "vim.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version4")
AddVersionParent("vim.version.version7", "vim.version.version5")
AddVersionParent("vim.version.version7", "vim.version.version2")
AddVersionParent("vim.version.version7", "vim.version.version3")
AddVersionParent("vim.version.version1", "vmodl.query.version.version1")
AddVersionParent("vim.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version1", "vim.version.version1")
AddVersionParent("vim.version.version4", "vmodl.query.version.version1")
AddVersionParent("vim.version.version4", "vmodl.version.version0")
AddVersionParent("vim.version.version4", "vim.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version4")
AddVersionParent("vim.version.version4", "vim.version.version2")
AddVersionParent("vim.version.version4", "vim.version.version3")
AddVersionParent("vim.version.version5", "vmodl.query.version.version2")
AddVersionParent("vim.version.version5", "vmodl.query.version.version1")
AddVersionParent("vim.version.version5", "vmodl.version.version0")
AddVersionParent("vim.version.version5", "vmodl.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version4")
AddVersionParent("vim.version.version5", "vim.version.version5")
AddVersionParent("vim.version.version5", "vim.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version3")
AddVersionParent("vim.version.version2", "vmodl.query.version.version1")
AddVersionParent("vim.version.version2", "vmodl.version.version0")
AddVersionParent("vim.version.version2", "vim.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version2")
AddVersionParent("vim.version.version3", "vmodl.query.version.version1")
AddVersionParent("vim.version.version3", "vmodl.version.version0")
AddVersionParent("vim.version.version3", "vim.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version2")
AddVersionParent("vim.version.version3", "vim.version.version3")

newestVersions.Add("rbd.version.unstable")
ltsVersions.Add("rbd.version.v8_0_0_1")
dottedVersions.Add("rbd.version.v8_0_0_1")
oldestVersions.Add("rbd.version.version1")

CreateDataType("rbd.AboutInfo", "RbdAboutInfo", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0), ("fullName", "string", "rbd.version.version1", 0), ("vendor", "string", "rbd.version.version1", 0), ("version", "string", "rbd.version.version1", 0), ("build", "string", "rbd.version.version1", 0), ("osType", "string", "rbd.version.version1", 0), ("apiVersion", "string", "rbd.version.version1", 0), ("instanceUuid", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.Capabilities", "RbdCapabilities", "vmodl.DynamicData", "rbd.version.RbdSCADeprecation", [("configurationApi", "boolean", "rbd.version.RbdSCADeprecation", F_OPTIONAL), ("restApiHardening", "boolean", "rbd.version.RbdSCADeprecation", F_OPTIONAL)])
CreateManagedType("rbd.ConfigurationManager", "RbdConfigurationManager", "vmodl.ManagedObject", "rbd.version.version2", None, [("setOption", "SetRbdConfigurationOption", "rbd.version.version2", (("key", "string", "rbd.version.version2", 0, None),("value", "string", "rbd.version.version2", F_OPTIONAL, None),), (0, "void", "void"), "Global.Settings", None), ("getOption", "GetRbdConfigurationOption", "rbd.version.version2", (("key", "string", "rbd.version.version2", 0, None),), (F_OPTIONAL, "rbd.ConfigurationManager.Option", "rbd.ConfigurationManager.Option"), "Global.Settings", None), ("getOptionList", "GetRbdConfigurationOptionList", "rbd.version.version2", (), (F_OPTIONAL, "rbd.ConfigurationManager.Option[]", "rbd.ConfigurationManager.Option[]"), "Global.Settings", None)])
CreateDataType("rbd.ConfigurationManager.Option", "RbdConfigOption", "vmodl.DynamicData", "rbd.version.version1", [("key", "string", "rbd.version.version1", 0), ("value", "string", "rbd.version.version1", F_OPTIONAL)])
CreateManagedType("rbd.CustomCertificateStore", "RbdCustomCertificateStore", "vmodl.ManagedObject", "rbd.version.v8_0_0_1", None, [("addCertificate", "AddCertificate", "rbd.version.v8_0_0_1", (("hostId", "string", "rbd.version.v8_0_0_1", 0, None),("certificate", "string", "rbd.version.v8_0_0_1", 0, None),("key", "string", "rbd.version.v8_0_0_1", F_SECRET, None),("force", "boolean", "rbd.version.v8_0_0_1", F_OPTIONAL, None),), (0, "void", "void"), "AutoDeploy.Rule.Create", ["rbd.fault.CustomCertificateExistsFault", "vmodl.fault.InvalidArgument", "rbd.fault.InvalidCertificateFault", ]), ("getCertificates", "GetCertificates", "rbd.version.v8_0_0_1", (), (F_OPTIONAL, "rbd.CustomCertificateStore.CustomCertificateEntry[]", "rbd.CustomCertificateStore.CustomCertificateEntry[]"), None, None), ("removeCertificatesById", "RemoveCertificatesById", "rbd.version.v8_0_0_1", (("certificateIds", "int[]", "rbd.version.v8_0_0_1", F_OPTIONAL, None),), (0, "void", "void"), "AutoDeploy.Rule.Delete", None), ("removeCertificatesByHostId", "RemoveCertificatesByHostId", "rbd.version.v8_0_0_1", (("hostIds", "string[]", "rbd.version.v8_0_0_1", F_OPTIONAL, None),), (0, "void", "void"), "AutoDeploy.Rule.Delete", None)])
CreateDataType("rbd.CustomCertificateStore.CustomCertificateEntry", "RbdCustomCertificateStoreCustomCertificateEntry", "vmodl.DynamicData", "rbd.version.v8_0_0_1", [("key", "int", "rbd.version.v8_0_0_1", 0), ("hostId", "string", "rbd.version.v8_0_0_1", 0), ("expirationTime", "vmodl.DateTime", "rbd.version.v8_0_0_1", 0), ("timeCreated", "vmodl.DateTime", "rbd.version.v8_0_0_1", 0), ("lastModified", "vmodl.DateTime", "rbd.version.v8_0_0_1", 0), ("associatedHostName", "string", "rbd.version.v8_0_0_1", F_OPTIONAL)])
CreateDataType("rbd.ExtensionInfo", "ExtensionInfo", "vmodl.DynamicData", "rbd.version.version4", [("version", "string", "rbd.version.version4", 0), ("bootUrl", "string", "rbd.version.version4", 0), ("cacheSize", "string", "rbd.version.version4", 0), ("cacheInUse", "string", "rbd.version.version4", 0), ("zipUrl", "string", "rbd.version.version4", 0), ("binaries", "rbd.PXEBinary[]", "rbd.version.version4", 0)])
CreateManagedType("rbd.HostOps", "HostOps", "vmodl.ManagedObject", "rbd.version.version3", None, [("retrieveDiscoveredHosts", "RetrieveDiscoveredHosts", "rbd.version.version3", (), (F_OPTIONAL, "rbd.HostOps.DiscoveredHost[]", "rbd.HostOps.DiscoveredHost[]"), None, None), ("deleteDiscoveredHosts", "DeleteDiscoveredHosts", "rbd.version.version3", (("hostIds", "string[]", "rbd.version.version3", 0, None),), (F_OPTIONAL, "rbd.HostOps.DiscoveredHost[]", "rbd.HostOps.DiscoveredHost[]"), "AutoDeploy.Host.AssociateMachine", None), ("retrieveUnprovisionedHosts", "RetrieveUnprovisionedHosts", "rbd.version.version3", (), (F_OPTIONAL, "rbd.HostOps.UnprovisionedHost[]", "rbd.HostOps.UnprovisionedHost[]"), None, None), ("retrieveHostAssociations", "RetrieveHostAssociations", "rbd.version.version3", (("host", "vmodl.ManagedObject", "rbd.version.version3", F_OPTIONAL, None),), (F_OPTIONAL, "rbd.HostOps.HostAssociation[]", "rbd.HostOps.HostAssociation[]"), None, ["vmodl.fault.ManagedObjectNotFound", ])])
CreateDataType("rbd.HostOps.HostAttribute", "HostOpsHostAttribute", "vmodl.DynamicData", "rbd.version.version3", [("attribute", "string", "rbd.version.version3", 0), ("value", "string[]", "rbd.version.version3", 0)])
CreateDataType("rbd.HostOps.DiscoveredHost", "HostOpsDiscoveredHost", "vmodl.DynamicData", "rbd.version.version3", [("hostId", "string", "rbd.version.version3", 0), ("hostAttributes", "rbd.HostOps.HostAttribute[]", "rbd.version.version3", 0), ("uuid", "string", "rbd.version.version3", 0), ("mac", "string", "rbd.version.version3", 0)])
CreateDataType("rbd.HostOps.HostAssociation", "HostOpsHostAssociation", "vmodl.DynamicData", "rbd.version.version3", [("hostMoref", "vmodl.ManagedObject", "rbd.version.version3", 0), ("associations", "vmodl.ManagedObject[]", "rbd.version.version3", 0)])
CreateDataType("rbd.HostOps.UnprovisionedHost", "HostOpsUnprovisionedHost", "vmodl.DynamicData", "rbd.version.version3", [("hostMoref", "string", "rbd.version.version3", 0), ("vcId", "int", "rbd.version.version3", 0), ("hostId", "string", "rbd.version.version3", F_OPTIONAL)])
CreateDataType("rbd.PXEBinary", "PXEBinary", "vmodl.DynamicData", "rbd.version.version4", [("description", "string", "rbd.version.version4", 0), ("fileName", "string", "rbd.version.version4", 0)])
CreateManagedType("rbd.ProxyServer", "ProxyServer", "vmodl.ManagedObject", "rbd.version.version3", [("address", "string", "rbd.version.version3", 0, None), ("id", "int", "rbd.version.version3", 0, None)], [("retrieveAddress", "RetrieveProxyServerAddress", "rbd.version.version3", (), (0, "string", "string"), None, None), ("retrieveID", "RetrieveProxyServerID", "rbd.version.version3", (), (0, "int", "int"), None, None)])
CreateManagedType("rbd.ProxyServerList", "RbdProxyServerList", "vmodl.ManagedObject", "rbd.version.version3", [("proxyServers", "rbd.ProxyServer[]", "rbd.version.version3", F_OPTIONAL, None)], [("addProxyServer", "AddProxyServer", "rbd.version.version3", (("address", "string", "rbd.version.version3", 0, None),), (0, "rbd.ProxyServer", "rbd.ProxyServer"), "AutoDeploy.Profile.Create", ["rbd.fault.DuplicateName", "rbd.fault.InvalidProxyServerFault", ]), ("retrieveProxyServerList", "RetrieveProxyServerList", "rbd.version.version3", (), (F_OPTIONAL, "rbd.ProxyServer[]", "rbd.ProxyServer[]"), "AutoDeploy.Profile.Edit", None), ("deleteProxyServerByAddress", "DeleteProxyServerByAddress", "rbd.version.version3", (("address", "string", "rbd.version.version3", 0, None),), (0, "void", "void"), "AutoDeploy.Rule.Delete", ["rbd.fault.InvalidProxyServerFault", ]), ("deleteProxyServerByID", "DeleteProxyServerByID", "rbd.version.version3", (("id", "int", "rbd.version.version3", 0, None),), (0, "void", "void"), "AutoDeploy.Rule.Delete", ["rbd.fault.InvalidProxyServerFault", ])])
CreateManagedType("rbd.PxeProfile", "PxeProfile", "vmodl.ManagedObject", "rbd.version.version1", [("config", "rbd.PxeProfile.PxeProfileConfig", "rbd.version.version1", 0, None), ("metadata", "rbd.PxeProfile.PxeProfileMetadata", "rbd.version.version1", 0, None), ("createdTime", "vmodl.DateTime", "rbd.version.version1", 0, None), ("modifiedTime", "vmodl.DateTime", "rbd.version.version1", 0, None), ("editable", "boolean", "rbd.version.version1", F_OPTIONAL, None), ("entityList", "vmodl.ManagedObject[]", "rbd.version.version1", F_OPTIONAL, None), ("imageProfileName", "string", "rbd.version.version3", 0, None)], [("retrieveConfig", "RetrievePxeProfileConfig", "rbd.version.version1", (), (0, "rbd.PxeProfile.PxeProfileConfig", "rbd.PxeProfile.PxeProfileConfig"), None, None), ("retrieveMetadata", "RetrievePxeProfileMetadata", "rbd.version.version1", (), (0, "rbd.PxeProfile.PxeProfileMetadata", "rbd.PxeProfile.PxeProfileMetadata"), None, None), ("retrieveEntityList", "RetrievePxeProfileEntityList", "rbd.version.version1", (), (F_OPTIONAL, "vmodl.ManagedObject[]", "vmodl.ManagedObject[]"), None, None), ("retrieveImageProfileName", "RetrieveImageProfileName", "rbd.version.version3", (), (0, "string", "string"), None, None), ("setInUse", "SetInUse", "rbd.version.version1", (), (0, "void", "void"), "AutoDeploy.Profile.Edit", None), ("associateEntities", "AssociateEntities", "rbd.version.version1", (("newEntityList", "vmodl.ManagedObject[]", "rbd.version.version1", 0, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", None), ("dissociateEntities", "DissociateEntities", "rbd.version.version1", (("entityList", "vmodl.ManagedObject[]", "rbd.version.version1", F_OPTIONAL, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", None), ("updateMetadata", "UpdatePxeProfileMetadata", "rbd.version.version1", (("meta", "rbd.PxeProfile.PxeProfileMetadata", "rbd.version.version1", 0, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", ["rbd.fault.DuplicateName", ]), ("update", "Update", "rbd.version.version1", (("config", "rbd.PxeProfile.PxeProfileConfig", "rbd.version.version1", 0, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", ["rbd.fault.ObjectIsNotEditable", "rbd.fault.InvalidPxeProfileConfigFault", ]), ("checkForProblems", "CheckPxeProfileForProblems", "rbd.version.version1", (), (F_OPTIONAL, "rbd.PxeProfile.PxeProfileProblem[]", "rbd.PxeProfile.PxeProfileProblem[]"), None, None)])
CreateDataType("rbd.PxeProfile.PxeProfileMetadata", "PxeProfilePxeProfileMetadata", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.PxeProfile.PxeProfileBootloader", "PxeProfilePxeProfileBootloader", "vmodl.DynamicData", "rbd.version.version1", [("archType", "string", "rbd.version.version1", 0), ("path", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.PxeProfile.PxeProfileConfig", "PxeProfilePxeProfileConfig", "vmodl.DynamicData", "rbd.version.version1", [("repository", "string", "rbd.version.version1", F_OPTIONAL), ("kernel", "string", "rbd.version.version1", F_OPTIONAL), ("bootloaderList", "rbd.PxeProfile.PxeProfileBootloader[]", "rbd.version.version1", F_OPTIONAL), ("modules", "string[]", "rbd.version.version1", F_OPTIONAL), ("packages", "string[]", "rbd.version.version1", F_OPTIONAL), ("args", "string", "rbd.version.version1", F_OPTIONAL), ("userdata", "string", "rbd.version.version1", F_OPTIONAL)])
CreateDataType("rbd.PxeProfile.PxeProfileProblem", "PxeProfilePxeProfileProblem", "vmodl.DynamicData", "rbd.version.version1", [("key", "string", "rbd.version.version1", 0), ("severity", "string", "rbd.version.version1", 0), ("message", "string", "rbd.version.version1", F_OPTIONAL)])
CreateManagedType("rbd.PxeProfileManager", "PxeProfileManager", "vmodl.ManagedObject", "rbd.version.version1", [("pxeProfileList", "rbd.PxeProfile[]", "rbd.version.version1", F_OPTIONAL, None)], [("createPxeProfile", "CreatePxeProfile", "rbd.version.version1", (("pxeProfileMetadata", "rbd.PxeProfile.PxeProfileMetadata", "rbd.version.version1", 0, None),("pxeProfileConfig", "rbd.PxeProfile.PxeProfileConfig", "rbd.version.version1", 0, None),), (0, "rbd.PxeProfile", "rbd.PxeProfile"), "AutoDeploy.Profile.Create", ["rbd.fault.DuplicateName", "rbd.fault.InvalidPxeProfileConfigFault", ]), ("retrievePxeProfileList", "RetrievePxeProfileList", "rbd.version.version1", (), (F_OPTIONAL, "rbd.PxeProfile[]", "rbd.PxeProfile[]"), None, None), ("findPxeProfile", "FindPxeProfile", "rbd.version.version1", (("name", "string", "rbd.version.version1", 0, None),), (F_OPTIONAL, "rbd.PxeProfile", "rbd.PxeProfile"), None, None), ("findAssociatedProfile", "FindAssociatedPxeProfile", "rbd.version.version1", (("entity", "vmodl.ManagedObject", "rbd.version.version1", 0, None),), (F_OPTIONAL, "rbd.PxeProfile[]", "rbd.PxeProfile[]"), None, None)])
CreateManagedType("rbd.Rule", "Rule", "vmodl.ManagedObject", "rbd.version.version1", [("spec", "rbd.Rule.RuleSpec", "rbd.version.version1", 0, None), ("metadata", "rbd.Rule.RuleMetadata", "rbd.version.version1", 0, None), ("editable", "boolean", "rbd.version.version1", F_OPTIONAL, None), ("lcmCluster", "boolean", "rbd.version.v7_0", F_OPTIONAL, None)], [("retrieveSpec", "RetrieveRuleSpec", "rbd.version.version1", (), (0, "rbd.Rule.RuleSpec", "rbd.Rule.RuleSpec"), None, None), ("retrieveMetadata", "RetrieveRuleMetadata", "rbd.version.version1", (), (0, "rbd.Rule.RuleMetadata", "rbd.Rule.RuleMetadata"), None, None), ("retrieveEditable", "RetrieveRuleEditable", "rbd.version.version1", (), (F_OPTIONAL, "boolean", "boolean"), None, None), ("retrieveLcmCluster", "RetrieveRuleLcmCluster", "rbd.version.v7_0", (), (F_OPTIONAL, "boolean", "boolean"), None, None), ("destroy", "DestroyRule", "rbd.version.version1", (), (0, "void", "void"), "AutoDeploy.Rule.Delete", None), ("updateMetadata", "UpdateRuleMetadata", "rbd.version.version1", (("meta", "rbd.Rule.RuleMetadata", "rbd.version.version1", 0, None),), (0, "void", "void"), "AutoDeploy.Rule.Edit", ["rbd.fault.InvalidRuleName", "rbd.fault.DuplicateName", ]), ("updateSpec", "UpdateRuleSpec", "rbd.version.version1", (("ruleSpec", "rbd.Rule.RuleSpec", "rbd.version.version1", 0, None),("force", "boolean", "rbd.version.version3", F_OPTIONAL, None),), (0, "void", "void"), "AutoDeploy.Rule.Edit", ["rbd.fault.InvalidRuleSpecFault", "rbd.fault.ObjectIsNotEditable", ]), ("updateSpecWithTransform", "com.vmware.rbd.UpdateSpecWithTransform_Task", "rbd.version.version3", (("ruleSpec", "rbd.Rule.RuleSpec", "rbd.version.version3", 0, None),("itemsToBeConverted", "string[]", "rbd.version.version3", F_OPTIONAL, None),("force", "boolean", "rbd.version.version3", F_OPTIONAL, None),("noSignatureCheck", "boolean", "rbd.version.version3", F_OPTIONAL, None),), (0, "vim.Task", "void"), "AutoDeploy.Rule.Edit", None), ("updateLcmClusterRuleSpecWithTransform", "com.vmware.rbd.UpdateLcmClusterRuleSpecWithTransform_Task", "rbd.version.v7_0", (("patternList", "rbd.Rule.Pattern[]", "rbd.version.v7_0", F_OPTIONAL, None),("lcmCluster", "vim.ClusterComputeResource", "rbd.version.v7_0", 0, None),("force", "boolean", "rbd.version.v7_0", F_OPTIONAL, None),("noSignatureCheck", "boolean", "rbd.version.v7_0", F_OPTIONAL, None),), (0, "vim.Task", "void"), "AutoDeploy.Rule.Edit", None), ("recreateLcmClusterPxeProfile", "com.vmware.rbd.RecreateLcmClusterPxeProfile_Task", "rbd.version.v7_0", (("force", "boolean", "rbd.version.v7_0", F_OPTIONAL, None),("noSignatureCheck", "boolean", "rbd.version.v7_0", F_OPTIONAL, None),), (0, "vim.Task", "void"), "AutoDeploy.Rule.Edit", None)])
CreateDataType("rbd.Rule.RuleMetadata", "RuleRuleMetadata", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.Rule.Pattern", "RulePattern", "vmodl.DynamicData", "rbd.version.version1", [("attribute", "string", "rbd.version.version1", 0), ("type", "string", "rbd.version.version1", 0), ("pattern", "string", "rbd.version.version1", 0)])
CreateEnumType("rbd.Rule.Pattern.Type", "RulePatternType", "rbd.version.version1", ["none", "string", "ipv4", "ipv6"])
CreateDataType("rbd.Rule.RuleSpec", "RuleRuleSpec", "vmodl.DynamicData", "rbd.version.version1", [("patternList", "rbd.Rule.Pattern[]", "rbd.version.version1", F_OPTIONAL), ("itemList", "vmodl.ManagedObject[]", "rbd.version.version1", F_OPTIONAL)])
CreateDataType("rbd.RuleData", "RuleData", "vmodl.DynamicData", "rbd.version.version3", [("metadataObject", "rbd.Rule.RuleMetadata", "rbd.version.version3", 0), ("specObject", "rbd.Rule.RuleSpec", "rbd.version.version3", 0), ("rule", "rbd.Rule", "rbd.version.version3", 0), ("editable", "boolean", "rbd.version.version3", 0), ("lcmCluster", "boolean", "rbd.version.v7_0", F_OPTIONAL)])
CreateManagedType("rbd.RuleManager", "RuleManager", "vmodl.ManagedObject", "rbd.version.version1", [("ruleSetList", "rbd.WorkingRuleSet[]", "rbd.version.version1", 0, None), ("liveRuleSetList", "rbd.RuleSet[]", "rbd.version.version1", 0, None), ("ruleList", "rbd.Rule[]", "rbd.version.version1", F_OPTIONAL, None), ("attributeList", "rbd.RuleManager.Attribute[]", "rbd.version.version1", 0, None)], [("retrieveRuleSetList", "RetrieveRuleSetList", "rbd.version.version1", (), (0, "rbd.WorkingRuleSet[]", "rbd.WorkingRuleSet[]"), None, None), ("activate", "Activate", "rbd.version.version1", (("ruleSet", "rbd.RuleSet", "rbd.version.version1", 0, None),), (0, "rbd.RuleSet", "rbd.RuleSet"), "AutoDeploy.RuleSet.Activate", None), ("retrieveLiveRuleSetList", "RetrieveLiveRuleSetList", "rbd.version.version1", (), (0, "rbd.RuleSet[]", "rbd.RuleSet[]"), None, None), ("retrieveRuleList", "RetrieveRuleList", "rbd.version.version1", (), (F_OPTIONAL, "rbd.Rule[]", "rbd.Rule[]"), None, None), ("retrieveRuleObjects", "RetrieveRuleObjects", "rbd.version.version3", (), (F_OPTIONAL, "rbd.RuleData[]", "rbd.RuleData[]"), None, None), ("retrieveAttributeList", "RetrieveAttributeList", "rbd.version.version1", (), (0, "rbd.RuleManager.Attribute[]", "rbd.RuleManager.Attribute[]"), None, None), ("hostAttributeList", "HostAttributeList", "rbd.version.version1", (("host", "vmodl.ManagedObject", "rbd.version.version1", 0, None),), (0, "rbd.RuleManager.HostAttribute[]", "rbd.RuleManager.HostAttribute[]"), None, None), ("createRule", "CreateRule", "rbd.version.version1", (("meta", "rbd.Rule.RuleMetadata", "rbd.version.version1", 0, None),("ruleSpec", "rbd.Rule.RuleSpec", "rbd.version.version1", 0, None),), (0, "rbd.Rule", "rbd.Rule"), "AutoDeploy.Rule.Create", ["rbd.fault.DuplicateName", "rbd.fault.InvalidRuleSpecFault", "rbd.fault.InvalidRuleName", ]), ("findRule", "FindRule", "rbd.version.version1", (("name", "string", "rbd.version.version1", 0, None),), (F_OPTIONAL, "rbd.Rule", "rbd.Rule"), None, None), ("validateRule", "ValidateRule", "rbd.version.version1", (("ruleSpec", "rbd.Rule.RuleSpec", "rbd.version.version1", 0, None),), (0, "void", "void"), None, ["rbd.fault.InvalidRuleSpecFault", ]), ("createRuleWithTransform", "com.vmware.rbd.CreateRuleWithTransform_Task", "rbd.version.version3", (("meta", "rbd.Rule.RuleMetadata", "rbd.version.version3", 0, None),("ruleSpec", "rbd.Rule.RuleSpec", "rbd.version.version3", 0, None),("itemsToBeConverted", "string[]", "rbd.version.version3", F_OPTIONAL, None),("noSignatureCheck", "boolean", "rbd.version.version3", F_OPTIONAL, None),), (0, "vim.Task", "string"), "AutoDeploy.Rule.Create", None), ("createLcmClusterRuleWithTransform", "com.vmware.rbd.CreateLcmClusterRuleWithTransform_Task", "rbd.version.v7_0", (("name", "string", "rbd.version.v7_0", 0, None),("patternList", "rbd.Rule.Pattern[]", "rbd.version.v7_0", F_OPTIONAL, None),("lcmCluster", "vim.ClusterComputeResource", "rbd.version.v7_0", 0, None),("noSignatureCheck", "boolean", "rbd.version.v7_0", F_OPTIONAL, None),), (0, "vim.Task", "string"), "AutoDeploy.Rule.Create", None), ("applyImageProfile", "com.vmware.rbd.ApplyImageProfile_Task", "rbd.version.version3", (("entities", "vmodl.ManagedObject[]", "rbd.version.version3", 0, None),("profileName", "string", "rbd.version.version3", 0, None),("depotUrl", "string", "rbd.version.version3", F_OPTIONAL, None),("noSignatureCheck", "boolean", "rbd.version.version3", F_OPTIONAL, None),), (0, "vim.Task", "void"), "AutoDeploy.Rule.Edit", None), ("repairDeployCache", "com.vmware.rbd.RepairDeployCache_Task", "rbd.version.version3", (), (0, "vim.Task", "void"), "AutoDeploy.Rule.Edit", None)])
CreateDataType("rbd.RuleManager.Attribute", "RuleManagerAttribute", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0), ("type", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.RuleManager.HostAttribute", "RuleManagerHostAttribute", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0), ("value", "string", "rbd.version.version1", F_OPTIONAL)])
CreateManagedType("rbd.RuleSet", "RuleSet", "vmodl.ManagedObject", "rbd.version.version1", [("spec", "rbd.RuleSet.RuleSetSpec", "rbd.version.version1", 0, None), ("createdTime", "vmodl.DateTime", "rbd.version.version1", 0, None), ("modifiedTime", "vmodl.DateTime", "rbd.version.version1", 0, None)], [("retrieveSpec", "RetrieveRuleSetSpec", "rbd.version.version1", (), (0, "rbd.RuleSet.RuleSetSpec", "rbd.RuleSet.RuleSetSpec"), None, None), ("mappingComplianceCheck", "MappingComplianceCheck", "rbd.version.version1", (("host", "vmodl.ManagedObject", "rbd.version.version1", 0, None),), (F_OPTIONAL, "rbd.RuleSet.CheckResult[]", "rbd.RuleSet.CheckResult[]"), None, None), ("remediateMapping", "RemediateMapping", "rbd.version.version1", (("host", "vmodl.ManagedObject", "rbd.version.version1", 0, None),("mappingList", "rbd.RuleSet.CheckResult[]", "rbd.version.version1", 0, None),), (0, "void", "void"), "AutoDeploy.Rule.Edit", None), ("matchingRulesForEntity", "MatchingRulesForEntity", "rbd.version.version1", (("entity", "vmodl.ManagedObject", "rbd.version.version1", 0, None),), (F_OPTIONAL, "rbd.Rule[]", "rbd.Rule[]"), None, None), ("bulkRemediateMapping", "BulkRemediateMapping_Task", "rbd.version.version3", (("mappingLists", "rbd.RuleSet.BulkCheckResult[]", "rbd.version.version3", 0, None),), (0, "vim.Task", "void"), "AutoDeploy.Rule.Edit", None), ("bulkMappingComplianceCheck", "BulkMappingComplianceCheck_Task", "rbd.version.version3", (("hosts", "vmodl.ManagedObject[]", "rbd.version.version3", 0, None),), (0, "vim.Task", "string"), None, None), ("getComplianceCheckResult", "GetComplianceCheckResult", "rbd.version.version3", (("complianceResultID", "string", "rbd.version.version3", 0, None),), (0, "rbd.RuleSet.BulkCheckResult[]", "rbd.RuleSet.BulkCheckResult[]"), None, None)])
CreateDataType("rbd.RuleSet.RuleSetSpec", "RuleSetRuleSetSpec", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0), ("parent", "rbd.RuleSet", "rbd.version.version1", 0), ("ruleList", "rbd.Rule[]", "rbd.version.version1", F_OPTIONAL), ("revision", "int", "rbd.version.version1", 0)])
CreateDataType("rbd.RuleSet.CheckResult", "RuleSetCheckResult", "vmodl.DynamicData", "rbd.version.version1", [("currentItem", "vmodl.ManagedObject", "rbd.version.version1", F_OPTIONAL), ("expectedItem", "vmodl.ManagedObject", "rbd.version.version1", F_OPTIONAL)])
CreateDataType("rbd.RuleSet.BulkCheckResult", "BulkCheckResult", "vmodl.DynamicData", "rbd.version.version3", [("checkResult", "rbd.RuleSet.CheckResult[]", "rbd.version.version3", F_OPTIONAL), ("host", "vmodl.ManagedObject", "rbd.version.version3", 0)])
CreateManagedType("rbd.ScriptBundle", "ScriptBundle", "vmodl.ManagedObject", "rbd.version.version3", [("config", "rbd.ScriptBundle.ScriptBundleConfig", "rbd.version.version3", 0, None), ("metadata", "rbd.ScriptBundle.ScriptBundleMetadata", "rbd.version.version3", 0, None), ("createdTime", "vmodl.DateTime", "rbd.version.version3", 0, None), ("modifiedTime", "vmodl.DateTime", "rbd.version.version3", 0, None), ("editable", "boolean", "rbd.version.version3", F_OPTIONAL, None), ("entityList", "vmodl.ManagedObject[]", "rbd.version.version3", F_OPTIONAL, None)], [("retrieveConfig", "RetrieveScriptBundleConfig", "rbd.version.version3", (), (0, "rbd.ScriptBundle.ScriptBundleConfig", "rbd.ScriptBundle.ScriptBundleConfig"), None, None), ("retrieveMetadata", "RetrieveScriptBundleMetadata", "rbd.version.version3", (), (0, "rbd.ScriptBundle.ScriptBundleMetadata", "rbd.ScriptBundle.ScriptBundleMetadata"), None, None), ("retrieveEntityList", "RetrieveScriptBundleEntityList", "rbd.version.version3", (), (F_OPTIONAL, "vmodl.ManagedObject[]", "vmodl.ManagedObject[]"), None, None), ("associateEntities", "AssociateScriptBundleEntities", "rbd.version.version3", (("newEntityList", "vmodl.ManagedObject[]", "rbd.version.version3", 0, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", None), ("dissociateEntities", "DissociateScriptBundleEntities", "rbd.version.version3", (("entityList", "vmodl.ManagedObject[]", "rbd.version.version3", F_OPTIONAL, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", None), ("updateMetadata", "UpdateScriptBundleMetadata", "rbd.version.version3", (("meta", "rbd.ScriptBundle.ScriptBundleMetadata", "rbd.version.version3", 0, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", ["rbd.fault.DuplicateName", ]), ("update", "UpdateScriptBundleConfig", "rbd.version.version3", (("config", "rbd.ScriptBundle.ScriptBundleConfig", "rbd.version.version3", 0, None),), (0, "void", "void"), "AutoDeploy.Profile.Edit", ["rbd.fault.ObjectIsNotEditable", "rbd.fault.InvalidScriptBundleConfigFault", ])])
CreateDataType("rbd.ScriptBundle.ScriptBundleMetadata", "ScriptBundleScriptBundleMetadata", "vmodl.DynamicData", "rbd.version.version1", [("name", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.ScriptBundle.ScriptBundleConfig", "ScriptBundleScriptBundleConfig", "vmodl.DynamicData", "rbd.version.version1", [("scripts", "string[]", "rbd.version.version1", F_OPTIONAL)])
CreateManagedType("rbd.ScriptManager", "RbdScriptManager", "vmodl.ManagedObject", "rbd.version.version3", [("scriptBundleList", "rbd.ScriptBundle[]", "rbd.version.version3", F_OPTIONAL, None)], [("createScriptBundle", "CreateScriptBundle", "rbd.version.version3", (("scriptBundleMetadata", "rbd.ScriptBundle.ScriptBundleMetadata", "rbd.version.version3", 0, None),("scriptBundleConfig", "rbd.ScriptBundle.ScriptBundleConfig", "rbd.version.version3", 0, None),), (0, "rbd.ScriptBundle", "rbd.ScriptBundle"), "AutoDeploy.Profile.Create", ["rbd.fault.DuplicateName", "rbd.fault.InvalidScriptBundleConfigFault", ]), ("retrieveScriptBundleList", "RetrieveScriptBundleList", "rbd.version.version3", (), (F_OPTIONAL, "rbd.ScriptBundle[]", "rbd.ScriptBundle[]"), None, None), ("removeScriptBundle", "RemoveScriptBundle", "rbd.version.version4", (("name", "string", "rbd.version.version4", 0, None),), (0, "void", "void"), "AutoDeploy.Rule.Delete", ["rbd.fault.ObjectIsNotEditable", ]), ("findScriptBundle", "FindScriptBundle", "rbd.version.version3", (("name", "string", "rbd.version.version3", 0, None),), (F_OPTIONAL, "rbd.ScriptBundle", "rbd.ScriptBundle"), None, None), ("findAssociatedScriptBundle", "FindAssociatedScriptBundle", "rbd.version.version3", (("entity", "vmodl.ManagedObject", "rbd.version.version3", 0, None),), (F_OPTIONAL, "rbd.ScriptBundle[]", "rbd.ScriptBundle[]"), None, None), ("validateScriptBundle", "ValidateScriptBundle", "rbd.version.version3", (("archiveData", "string", "rbd.version.version3", 0, None),), (F_OPTIONAL, "string[]", "string[]"), None, ["rbd.fault.InvalidScriptBundleConfigFault", ])])
CreateDataType("rbd.ServiceContent", "RbdServiceContent", "vmodl.DynamicData", "rbd.version.version1", [("about", "rbd.AboutInfo", "rbd.version.version1", 0), ("customCertificateStore", "rbd.CustomCertificateStore", "rbd.version.v8_0_0_1", F_OPTIONAL), ("ruleManager", "rbd.RuleManager", "rbd.version.version1", 0), ("pxeManager", "rbd.PxeProfileManager", "rbd.version.version1", 0), ("proxyServerList", "rbd.ProxyServerList", "rbd.version.version3", 0), ("scriptManager", "rbd.ScriptManager", "rbd.version.version3", 0), ("hostOps", "rbd.HostOps", "rbd.version.version3", 0), ("sessionManager", "rbd.SessionManager", "rbd.version.version1", 0), ("configManager", "rbd.ConfigurationManager", "rbd.version.version2", 0)])
CreateManagedType("rbd.ServiceInstance", "RbdServiceInstance", "vmodl.ManagedObject", "rbd.version.version1", [("content", "rbd.ServiceContent", "rbd.version.version1", 0, None), ("capabilities", "rbd.Capabilities", "rbd.version.RbdSCADeprecation", 0, None)], [("retrieveContent", "RetrieveContent", "rbd.version.version1", (), (0, "rbd.ServiceContent", "rbd.ServiceContent"), None, None), ("retrieveExtensionInfo", "RetrieveExtensionInfo", "rbd.version.version4", (), (0, "rbd.ExtensionInfo", "rbd.ExtensionInfo"), None, None)])
CreateManagedType("rbd.SessionManager", "RbdSessionManager", "vmodl.ManagedObject", "rbd.version.version1", None, [("sessionIsActive", "RbdSessionIsActive", "rbd.version.version1", (("sessionId", "string", "rbd.version.version1", 0, None),), (0, "void", "void"), None, None), ("Login", "RbdUserLogin", "rbd.version.version3", (("username", "string", "rbd.version.version3", 0, None),("password", "string", "rbd.version.version3", 0, None),), (0, "string", "string"), None, None), ("Logout", "RbdUserLogout", "rbd.version.version3", (("sessionId", "string", "rbd.version.version3", 0, None),), (0, "void", "void"), None, None)])
CreateManagedType("rbd.WorkingRuleSet", "rbd1WorkingRuleSet", "rbd.RuleSet", "rbd.version.version1", None, [("update", "UpdateWorkingRuleSet", "rbd.version.version1", (("rss", "rbd.RuleSet.RuleSetSpec", "rbd.version.version1", 0, None),), (0, "void", "void"), "AutoDeploy.RuleSet.Edit", ["rbd.fault.InvalidRuleSetSpecFault", "rbd.fault.DuplicateRule", ]), ("revertToLive", "RevertToLive", "rbd.version.version1", (), (0, "void", "void"), "AutoDeploy.RuleSet.Edit", None)])
CreateDataType("rbd.fault.ApplyImageProfileFault", "rbd1FaultApplyImageProfileFault", "vim.fault.ExtendedFault", "rbd.version.version3", [("name", "string", "rbd.version.version3", F_OPTIONAL)])
CreateDataType("rbd.fault.BulkComplianceFault", "rbd1FaultBulkComplianceFault", "vim.fault.ExtendedFault", "rbd.version.version3", [("name", "string", "rbd.version.version3", F_OPTIONAL)])
CreateDataType("rbd.fault.BulkRemediateFault", "rbd1FaultBulkRemediateFault", "vim.fault.ExtendedFault", "rbd.version.version3", [("name", "string", "rbd.version.version3", F_OPTIONAL)])
CreateDataType("rbd.fault.CustomCertificateExistsFault", "rbd1FaultCustomCertificateExistsFault", "vim.fault.ExtendedFault", "rbd.version.v8_0_0_1", None)
CreateDataType("rbd.fault.DuplicateName", "rbd1FaultDuplicateName", "vmodl.MethodFault", "rbd.version.version1", [("name", "string", "rbd.version.version1", F_OPTIONAL)])
CreateDataType("rbd.fault.DuplicateRule", "rbd1FaultDuplicateRule", "vmodl.MethodFault", "rbd.version.version1", [("rule", "rbd.Rule", "rbd.version.version1", F_OPTIONAL)])
CreateDataType("rbd.fault.InvalidCertificateFault", "rbd1FaultInvalidCertificateFault", "vim.fault.ExtendedFault", "rbd.version.v8_0_0_1", None)
CreateDataType("rbd.fault.InvalidProxyServerFault", "rbd1FaultInvalidProxyServerFault", "vmodl.MethodFault", "rbd.version.version3", [("name", "string", "rbd.version.version3", F_OPTIONAL)])
CreateDataType("rbd.fault.InvalidPxeProfileConfigFault", "rbd1FaultInvalidPxeProfileConfigFault", "vmodl.MethodFault", "rbd.version.version1", None)
CreateDataType("rbd.fault.InvalidRuleName", "rbd1FaultInvalidRuleName", "vmodl.MethodFault", "rbd.version.version1", [("name", "string", "rbd.version.version1", F_OPTIONAL)])
CreateDataType("rbd.fault.InvalidRuleSetSpecFault", "rbd1FaultInvalidRuleSetSpecFault", "vmodl.MethodFault", "rbd.version.version1", None)
CreateDataType("rbd.fault.InvalidRuleSpecFault", "rbd1FaultInvalidRuleSpecFault", "vmodl.MethodFault", "rbd.version.version1", None)
CreateDataType("rbd.fault.InvalidScriptBundleConfigFault", "rbd1FaultInvalidScriptBundleConfigFault", "vmodl.MethodFault", "rbd.version.version3", None)
CreateDataType("rbd.fault.NoPermission", "rbd1FaultNoPermission", "vmodl.fault.SecurityError", "rbd.version.version1", [("object", "vmodl.ManagedObject", "rbd.version.version1", F_OPTIONAL), ("privilegeId", "string", "rbd.version.version1", 0)])
CreateDataType("rbd.fault.NotAuthenticated", "rbd1FaultNotAuthenticated", "rbd.fault.NoPermission", "rbd.version.version1", None)
CreateDataType("rbd.fault.ObjectIsNotEditable", "rbd1FaultObjectIsNotEditable", "vmodl.MethodFault", "rbd.version.version1", None)
CreateDataType("rbd.fault.RepairDeployCacheFault", "rbd1FaultRepairDeployCacheFault", "vim.fault.ExtendedFault", "rbd.version.version3", [("name", "string", "rbd.version.version3", F_OPTIONAL)])
CreateDataType("rbd.fault.TransformFault", "rbd1FaultTransformFault", "vim.fault.ExtendedFault", "rbd.version.version3", [("name", "string", "rbd.version.version3", F_OPTIONAL)])
