# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******
from .VmomiSupport import CreateDataType, CreateManagedType
from .VmomiSupport import CreateEnumType
from .VmomiSupport import AddVersion, AddVersionParent
from .VmomiSupport import AddBreakingChangesInfo
from .VmomiSupport import F_LINK, F_LINKABLE
from .VmomiSupport import F_OPTIONAL, F_SECRET
from .VmomiSupport import newestVersions, ltsVersions
from .VmomiSupport import dottedVersions, oldestVersions

AddVersion("vmodl.version.version0", "", "", 0, "vim25")
AddVersion("vmodl.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.version.version2", "", "", 0, "vim25")
AddVersion("cis.license.version.version1", "cis.license", "1.0", 0, "")
AddVersion("cis.license.version.version2", "cis.license", "2.0", 0, "")
AddVersion("cis.license.version.version3", "cis.license", "3.0", 0, "")
AddVersion("cis.license.version.version4", "cis.license", "4.0", 0, "")
AddVersion("cis.license.version.version5", "cis.license", "5.0", 0, "")
AddVersion("cis.license.version.dev", "cis.license", "dev", 0, "")
AddVersionParent("vmodl.version.version0", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version2")
AddVersionParent("cis.license.version.version1", "vmodl.version.version0")
AddVersionParent("cis.license.version.version1", "vmodl.version.version1")
AddVersionParent("cis.license.version.version1", "vmodl.version.version2")
AddVersionParent("cis.license.version.version1", "cis.license.version.version1")
AddVersionParent("cis.license.version.version2", "vmodl.version.version0")
AddVersionParent("cis.license.version.version2", "vmodl.version.version1")
AddVersionParent("cis.license.version.version2", "vmodl.version.version2")
AddVersionParent("cis.license.version.version2", "cis.license.version.version1")
AddVersionParent("cis.license.version.version2", "cis.license.version.version2")
AddVersionParent("cis.license.version.version3", "vmodl.version.version0")
AddVersionParent("cis.license.version.version3", "vmodl.version.version1")
AddVersionParent("cis.license.version.version3", "vmodl.version.version2")
AddVersionParent("cis.license.version.version3", "cis.license.version.version1")
AddVersionParent("cis.license.version.version3", "cis.license.version.version2")
AddVersionParent("cis.license.version.version3", "cis.license.version.version3")
AddVersionParent("cis.license.version.version4", "vmodl.version.version0")
AddVersionParent("cis.license.version.version4", "vmodl.version.version1")
AddVersionParent("cis.license.version.version4", "vmodl.version.version2")
AddVersionParent("cis.license.version.version4", "cis.license.version.version1")
AddVersionParent("cis.license.version.version4", "cis.license.version.version2")
AddVersionParent("cis.license.version.version4", "cis.license.version.version3")
AddVersionParent("cis.license.version.version4", "cis.license.version.version4")
AddVersionParent("cis.license.version.version5", "vmodl.version.version0")
AddVersionParent("cis.license.version.version5", "vmodl.version.version1")
AddVersionParent("cis.license.version.version5", "vmodl.version.version2")
AddVersionParent("cis.license.version.version5", "cis.license.version.version1")
AddVersionParent("cis.license.version.version5", "cis.license.version.version2")
AddVersionParent("cis.license.version.version5", "cis.license.version.version3")
AddVersionParent("cis.license.version.version5", "cis.license.version.version4")
AddVersionParent("cis.license.version.version5", "cis.license.version.version5")
AddVersionParent("cis.license.version.dev", "vmodl.version.version0")
AddVersionParent("cis.license.version.dev", "vmodl.version.version1")
AddVersionParent("cis.license.version.dev", "vmodl.version.version2")
AddVersionParent("cis.license.version.dev", "cis.license.version.version1")
AddVersionParent("cis.license.version.dev", "cis.license.version.version2")
AddVersionParent("cis.license.version.dev", "cis.license.version.version3")
AddVersionParent("cis.license.version.dev", "cis.license.version.version4")
AddVersionParent("cis.license.version.dev", "cis.license.version.version5")
AddVersionParent("cis.license.version.dev", "cis.license.version.dev")

newestVersions.Add("cis.license.version.dev")
ltsVersions.Add("cis.license.version.dev")
dottedVersions.Add("cis.license.version.version5")
oldestVersions.Add("cis.license.version.version1")

CreateDataType("cis.license.Asset", "CisLicenseAsset", "vmodl.DynamicData", "cis.license.version.version1", [("id", "vmodl.URI", "cis.license.version.version1", 0), ("info", "cis.license.AssetInfo", "cis.license.version.version1", 0)])
CreateDataType("cis.license.AssetIdentifier", "CisLicenseAssetIdentifier", "vmodl.DynamicData", "cis.license.version.version1", [("instanceId", "string", "cis.license.version.version1", 0), ("scopeId", "string", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.AssetInfo", "CisLicenseAssetInfo", "vmodl.DynamicData", "cis.license.version.version1", [("instanceId", "string", "cis.license.version.version1", 0), ("scopeId", "string", "cis.license.version.version1", F_OPTIONAL), ("ownerServiceId", "string", "cis.license.version.version1", F_OPTIONAL), ("name", "string", "cis.license.version.version1", 0), ("version", "string", "cis.license.version.version1", F_OPTIONAL), ("product", "cis.license.Product", "cis.license.version.version1", 0), ("evalInfo", "cis.license.License", "cis.license.version.version1", F_OPTIONAL), ("costUnitUsage", "cis.license.CostUnitUsage[]", "cis.license.version.version1", F_OPTIONAL), ("featuresInUse", "cis.license.Feature[]", "cis.license.version.version1", F_OPTIONAL), ("license", "cis.license.License", "cis.license.version.version1", F_OPTIONAL), ("inEvaluation", "boolean", "cis.license.version.version1", 0), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.CostUnit", "CisLicenseCostUnit", "vmodl.DynamicData", "cis.license.version.version1", [("id", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.CostUnitLimit", "CisLicenseCostUnitLimit", "vmodl.DynamicData", "cis.license.version.version1", [("unit", "cis.license.CostUnit", "cis.license.version.version1", 0), ("value", "long", "cis.license.version.version1", 0), ("enforcementType", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.CostUnitUsage", "CisLicenseCostUnitUsage", "vmodl.DynamicData", "cis.license.version.version1", [("unit", "cis.license.CostUnit", "cis.license.version.version1", 0), ("value", "long", "cis.license.version.version1", 0)])
CreateDataType("cis.license.Feature", "CisLicenseFeature", "vmodl.DynamicData", "cis.license.version.version1", [("id", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.License", "CisLicenseLicense", "vmodl.DynamicData", "cis.license.version.version1", [("id", "vmodl.URI", "cis.license.version.version1", 0), ("info", "cis.license.LicenseInfo", "cis.license.version.version1", 0)])
CreateDataType("cis.license.LicenseDescription", "CisLicenseLicenseDescription", "vmodl.DynamicData", "cis.license.version.version1", [("id", "vmodl.URI", "cis.license.version.version1", 0), ("info", "cis.license.LicenseDescriptionInfo", "cis.license.version.version1", 0)])
CreateDataType("cis.license.LicenseDescriptionInfo", "CisLicenseLicenseDescriptionInfo", "vmodl.DynamicData", "cis.license.version.version1", None)
CreateDataType("cis.license.LicenseInfo", "CisLicenseLicenseInfo", "vmodl.DynamicData", "cis.license.version.version1", [("name", "string", "cis.license.version.version1", 0), ("expiration", "vmodl.DateTime", "cis.license.version.version1", F_OPTIONAL), ("restrictions", "cis.license.LicenseProductRestriction[]", "cis.license.version.version1", 0), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version3", F_OPTIONAL)])
CreateDataType("cis.license.LicenseProductCapability", "CisLicenseLicenseProductCapability", "vmodl.DynamicData", "cis.license.version.version1", [("version", "string", "cis.license.version.version1", 0), ("features", "cis.license.Feature[]", "cis.license.version.version1", F_OPTIONAL), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.LicenseProductRestriction", "CisLicenseLicenseProductRestriction", "vmodl.DynamicData", "cis.license.version.version1", [("product", "cis.license.Product", "cis.license.version.version1", 0), ("costUnitsLimit", "cis.license.CostUnitLimit[]", "cis.license.version.version1", F_OPTIONAL), ("capability", "cis.license.LicenseProductCapability[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.LicenseUtilization", "CisLicenseLicenseUtilization", "vmodl.DynamicData", "cis.license.version.version1", [("license", "cis.license.License", "cis.license.version.version1", 0), ("isLicenseAssigned", "boolean", "cis.license.version.version1", 0), ("usage", "cis.license.ProductUsage[]", "cis.license.version.version1", 0)])
CreateEnumType("cis.license.LimitEnforcementType", "CisLicenseLimitEnforcementType", "cis.license.version.version1", ["notEnforced", "softEnforced", "hardEnforced"])
CreateDataType("cis.license.MyVMwareLicenseDetails", "CisLicenseMyVMwareLicenseDetails", "vmodl.DynamicData", "cis.license.version.version2", [("data", "vmodl.Binary", "cis.license.version.version2", 0), ("version", "string", "cis.license.version.version2", 0), ("lastUpdateTimestamp", "vmodl.DateTime", "cis.license.version.version2", F_OPTIONAL)])
CreateDataType("cis.license.Product", "CisLicenseProduct", "vmodl.DynamicData", "cis.license.version.version1", [("id", "string", "cis.license.version.version1", 0), ("name", "string", "cis.license.version.version1", 0), ("suiteName", "string", "cis.license.version.version1", F_OPTIONAL), ("editionKey", "string", "cis.license.version.version1", 0), ("family", "cis.license.ProductFamily", "cis.license.version.version1", 0)])
CreateDataType("cis.license.ProductFamily", "CisLicenseProductFamily", "vmodl.DynamicData", "cis.license.version.version1", [("name", "string", "cis.license.version.version1", 0), ("version", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.ProductUsage", "CisLicenseProductUsage", "vmodl.DynamicData", "cis.license.version.version1", [("productId", "string", "cis.license.version.version1", 0), ("costUnitsUsage", "cis.license.CostUnitUsage[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.ProductUtilization", "CisLicenseProductUtilization", "vmodl.DynamicData", "cis.license.version.version1", [("product", "cis.license.Product", "cis.license.version.version1", 0), ("costUnitsLimit", "cis.license.CostUnitLimit[]", "cis.license.version.version1", F_OPTIONAL), ("costUnitsUsage", "cis.license.CostUnitUsage[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.SerialKeyLicenseDescriptionInfo", "CisLicenseSerialKeyLicenseDescriptionInfo", "cis.license.LicenseDescriptionInfo", "cis.license.version.version1", [("name", "string", "cis.license.version.version1", 0), ("content", "string", "cis.license.version.version1", 0), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.SerialKeyLicenseInfo", "CisLicenseSerialKeyLicenseInfo", "cis.license.LicenseInfo", "cis.license.version.version1", [("serialKeys", "string[]", "cis.license.version.version1", 0)])
CreateManagedType("cis.license.SessionManagementService", "CisLicenseSessionManagementService", "vmodl.ManagedObject", "cis.license.version.version1", None, [("loginByToken", "LoginByToken", "cis.license.version.version1", (), (0, "void", "void"), "System.Anonymous", None), ("login", "Login", "cis.license.version.version1", (("username", "string", "cis.license.version.version1", 0, None),("password", "string", "cis.license.version.version1", 0, None),), (0, "void", "void"), "System.Anonymous", None), ("logout", "Logout", "cis.license.version.version1", (), (0, "void", "void"), "System.Anonymous", None)])
CreateDataType("cis.license.fault.AlreadyExistsFault", "CisLicenseFaultAlreadyExistsFault", "vmodl.MethodFault", "cis.license.version.version1", [("ids", "string[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.fault.AssignmentFault", "CisLicenseFaultAssignmentFault", "vmodl.MethodFault", "cis.license.version.version1", [("reason", "string", "cis.license.version.version1", 0)])
CreateEnumType("cis.license.fault.AssignmentFault.ReasonType", "CisLicenseFaultAssignmentFaultReasonType", "cis.license.version.version1", ["invalidLicenseDowngradeError", "licenseExpiredError", "licenseIncompatibleError", "licenseLimitExceededError", "other"])
CreateDataType("cis.license.fault.DataExportFault", "CisLicenseFaultDataExportFault", "vmodl.MethodFault", "cis.license.version.version1", None)
CreateDataType("cis.license.fault.DataImportFault", "CisLicenseFaultDataImportFault", "vmodl.MethodFault", "cis.license.version.version1", [("reason", "string", "cis.license.version.version1", 0)])
CreateEnumType("cis.license.fault.DataImportFault.ReasonType", "CisLicenseFaultDataImportFaultReasonType", "cis.license.version.version1", ["dataTamperedError", "dataCorruptedError", "other"])
CreateDataType("cis.license.fault.ManagementFault", "CisLicenseFaultManagementFault", "vmodl.RuntimeFault", "cis.license.version.version1", [("reason", "string", "cis.license.version.version1", 0)])
CreateEnumType("cis.license.fault.ManagementFault.ReasonType", "CisLicenseFaultManagementFaultReasonType", "cis.license.version.version1", ["storageError", "decoderError", "other"])
CreateDataType("cis.license.fault.MyVMwareSyncFault", "CisLicenseFaultMyVMwareSyncFault", "vmodl.MethodFault", "cis.license.version.version3", None)
CreateDataType("cis.license.fault.MyVMwareSyncPreviewFault", "CisLicenseFaultMyVMwareSyncPreviewFault", "vmodl.MethodFault", "cis.license.version.version2", [("reason", "string", "cis.license.version.version2", 0)])
CreateEnumType("cis.license.fault.MyVMwareSyncPreviewFault.ReasonType", "CisLicenseFaultMyVMwareSyncPreviewFaultReasonType", "cis.license.version.version1", ["invalidReport", "other"])
CreateDataType("cis.license.fault.NotAuthenticatedFault", "CisLicenseFaultNotAuthenticatedFault", "vmodl.fault.SecurityError", "cis.license.version.version1", None)
CreateDataType("cis.license.fault.NotAuthorizedFault", "CisLicenseFaultNotAuthorizedFault", "vmodl.fault.SecurityError", "cis.license.version.version1", None)
CreateDataType("cis.license.fault.NotFoundFault", "CisLicenseFaultNotFoundFault", "vmodl.MethodFault", "cis.license.version.version1", [("ids", "string[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.fault.ReportFault", "CisLicenseFaultReportFault", "vmodl.MethodFault", "cis.license.version.version1", [("reason", "string", "cis.license.version.version1", 0)])
CreateEnumType("cis.license.fault.ReportFault.ReasonType", "CisLicenseFaultReportFaultReasonType", "cis.license.version.version1", ["usageDataError", "assetPropertyDataError", "dataTampered", "other"])
CreateManagedType("cis.license.management.AssetManagementService", "CisLicenseManagementAssetManagementService", "vmodl.ManagedObject", "cis.license.version.version1", None, [("registerAsset", "RegisterAsset", "cis.license.version.version1", (("assetRegisterSpec", "cis.license.management.AssetRegisterSpec", "cis.license.version.version1", 0, None),), (0, "vmodl.URI", "vmodl.URI"), "LicenseService.Read", ["cis.license.fault.AlreadyExistsFault", ]), ("searchAsset", "SearchAsset", "cis.license.version.version1", (("assetId", "vmodl.URI", "cis.license.version.version1", 0, None),), (0, "cis.license.Asset", "cis.license.Asset"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("searchAssetByIdentifier", "SearchAssetByIdentifier", "cis.license.version.version1", (("assetIdentifier", "cis.license.AssetIdentifier", "cis.license.version.version1", 0, None),), (0, "cis.license.Asset", "cis.license.Asset"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("searchAssets", "searchAssetsBySpec", "cis.license.version.version1", (("assetSearchSpec", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "cis.license.Asset[]", "cis.license.Asset[]"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("queryAssetLicenseUtilization", "QueryAssetLicenseUtilization", "cis.license.version.version1", (("assetId", "vmodl.URI", "cis.license.version.version1", 0, None),), (F_OPTIONAL, "cis.license.LicenseUtilization", "cis.license.LicenseUtilization"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("updateAsset", "UpdateAsset", "cis.license.version.version1", (("assetId", "vmodl.URI", "cis.license.version.version1", 0, None),("assetUpdateSpec", "cis.license.management.AssetUpdateSpec", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Owner", ["cis.license.fault.NotFoundFault", ]), ("updateAssetLicense", "UpdateAssetLicense", "cis.license.version.version1", (("assetId", "vmodl.URI", "cis.license.version.version1", 0, None),("assetUpdateLicenseSpec", "cis.license.management.AssetUpdateLicenseSpec", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Owner", ["cis.license.fault.NotFoundFault", "cis.license.fault.AlreadyExistsFault", "cis.license.fault.AssignmentFault", ]), ("unregisterAsset", "UnregisterAsset", "cis.license.version.version1", (("assetId", "vmodl.URI", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Owner", ["cis.license.fault.NotFoundFault", ])])
CreateDataType("cis.license.management.AssetRegisterSpec", "CisLicenseManagementAssetRegisterSpec", "vmodl.DynamicData", "cis.license.version.version1", [("instanceId", "string", "cis.license.version.version1", 0), ("scopeId", "string", "cis.license.version.version1", F_OPTIONAL), ("assetIdentifier", "cis.license.AssetIdentifier", "cis.license.version.version1", F_OPTIONAL), ("ownerServiceId", "string", "cis.license.version.version1", F_OPTIONAL), ("name", "string", "cis.license.version.version1", 0), ("productFamily", "cis.license.ProductFamily", "cis.license.version.version1", 0), ("version", "string", "cis.license.version.version1", F_OPTIONAL), ("eval", "cis.license.management.EvalSpec", "cis.license.version.version1", F_OPTIONAL), ("licenseDescriptions", "cis.license.management.LicenseDescriptionAddSpec[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.AssetSearchSpec", "CisLicenseManagementAssetSearchSpec", "vmodl.DynamicData", "cis.license.version.version1", [("scopeId", "string", "cis.license.version.version1", F_OPTIONAL), ("maxResults", "int", "cis.license.version.version1", F_OPTIONAL), ("offset", "int", "cis.license.version.version4", F_OPTIONAL), ("excludeSubscribed", "boolean", "cis.license.version.version5", F_OPTIONAL)])
CreateDataType("cis.license.management.AssetSearchSpecByIdentifiers", "CisLicenseManagementAssetSearchSpecByIdentifiers", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", [("assetIdentifiers", "cis.license.AssetIdentifier[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.AssetSearchSpecByIds", "CisLicenseManagementAssetSearchSpecByIds", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", [("assetIds", "vmodl.URI[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.AssetSearchSpecByLicenseId", "CisLicenseManagementAssetSearchSpecByLicenseId", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", [("licenseId", "vmodl.URI", "cis.license.version.version1", 0), ("productFamilyName", "string", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.AssetSearchSpecByLicenseState", "CisLicenseManagementAssetSearchSpecByLicenseState", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", [("licenseState", "string", "cis.license.version.version1", 0)])
CreateEnumType("cis.license.management.AssetSearchSpecByLicenseState.LicenseState", "CisLicenseManagementAssetSearchSpecByLicenseStateLicenseState", "cis.license.version.version1", ["licensed", "unlicensed", "evaluation"])
CreateDataType("cis.license.management.AssetSearchSpecByProductFamilyNames", "CisLicenseManagementAssetSearchSpecByProductFamilyNames", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", [("productFamilyNames", "string[]", "cis.license.version.version1", 0), ("inverseSearch", "boolean", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.AssetSearchSpecByProductId", "CisLicenseManagementAssetSearchSpecByProductId", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", [("productId", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.AssetUpdateLicenseSpec", "CisLicenseManagementAssetUpdateLicenseSpec", "vmodl.DynamicData", "cis.license.version.version1", [("assetId", "vmodl.URI", "cis.license.version.version1", 0), ("licenseId", "vmodl.URI", "cis.license.version.version1", F_OPTIONAL), ("licenseAddSpec", "cis.license.management.LicenseAddSpec", "cis.license.version.version1", F_OPTIONAL), ("placeInEval", "boolean", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.AssetUpdateSpec", "CisLicenseManagementAssetUpdateSpec", "vmodl.DynamicData", "cis.license.version.version1", [("name", "string", "cis.license.version.version1", F_OPTIONAL), ("version", "string", "cis.license.version.version1", F_OPTIONAL), ("costUnitsUsage", "cis.license.CostUnitUsage[]", "cis.license.version.version1", F_OPTIONAL), ("featuresUsage", "cis.license.management.FeatureUsage[]", "cis.license.version.version1", F_OPTIONAL), ("clearFeaturesInUse", "boolean", "cis.license.version.version1", F_OPTIONAL), ("evalUpdateSpec", "cis.license.management.EvalUpdateSpec", "cis.license.version.version1", F_OPTIONAL), ("licenseDescriptions", "cis.license.management.LicenseDescriptionAddSpec[]", "cis.license.version.version1", F_OPTIONAL), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.EvalSpec", "CisLicenseManagementEvalSpec", "vmodl.DynamicData", "cis.license.version.version1", [("expiry", "vmodl.DateTime", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.EvalUpdateSpec", "CisLicenseManagementEvalUpdateSpec", "vmodl.DynamicData", "cis.license.version.version1", [("expiry", "vmodl.DateTime", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.FeatureUsage", "CisLicenseManagementFeatureUsage", "vmodl.DynamicData", "cis.license.version.version1", [("feature", "cis.license.Feature", "cis.license.version.version1", 0), ("inUse", "boolean", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.InactiveLicensesReport", "CisLicenseManagementInactiveLicensesReport", "vmodl.DynamicData", "cis.license.version.version2", [("data", "vmodl.Binary", "cis.license.version.version2", 0), ("version", "string", "cis.license.version.version2", 0), ("inactiveLicensesTotal", "int", "cis.license.version.version2", 0)])
CreateDataType("cis.license.management.LicenseAddSpec", "CisLicenseManagementLicenseAddSpec", "vmodl.DynamicData", "cis.license.version.version1", [("name", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.LicenseDescriptionAddSpec", "CisLicenseManagementLicenseDescriptionAddSpec", "vmodl.DynamicData", "cis.license.version.version1", None)
CreateDataType("cis.license.management.LicenseSearchSpec", "CisLicenseManagementLicenseSearchSpec", "vmodl.DynamicData", "cis.license.version.version1", None)
CreateDataType("cis.license.management.LicenseSearchSpecByIds", "CisLicenseManagementLicenseSearchSpecByIds", "cis.license.management.LicenseSearchSpec", "cis.license.version.version1", [("licenseIds", "vmodl.URI[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.LicenseSearchSpecByProductId", "CisLicenseManagementLicenseSearchSpecByProductId", "cis.license.management.LicenseSearchSpec", "cis.license.version.version1", [("productId", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.LicenseUpdateSpec", "CisLicenseManagementLicenseUpdateSpec", "vmodl.DynamicData", "cis.license.version.version1", [("licenseId", "vmodl.URI", "cis.license.version.version1", 0), ("name", "string", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.ManagementData", "CisLicenseManagementManagementData", "vmodl.DynamicData", "cis.license.version.version1", [("binaryData", "vmodl.Binary", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.ManagementDataExportSpec", "CisLicenseManagementManagementDataExportSpec", "vmodl.DynamicData", "cis.license.version.version1", None)
CreateDataType("cis.license.management.ManagementDataImportSpec", "CisLicenseManagementManagementDataImportSpec", "vmodl.DynamicData", "cis.license.version.version1", [("data", "cis.license.management.ManagementData", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.MyVMwareEntitlementAccountFolders", "CisLicenseManagementMyVMwareEntitlementAccountFolders", "vmodl.DynamicData", "cis.license.version.dev", [("eaNumber", "string", "cis.license.version.dev", 0), ("eaName", "string", "cis.license.version.dev", 0), ("folderIds", "string[]", "cis.license.version.dev", F_OPTIONAL)])
CreateDataType("cis.license.management.MyVMwareLicenseReport", "CisLicenseManagementMyVMwareLicenseReport", "vmodl.DynamicData", "cis.license.version.version2", [("data", "vmodl.Binary", "cis.license.version.version2", 0)])
CreateDataType("cis.license.management.MyVMwareSyncContext", "CisLicenseManagementMyVMwareSyncContext", "vmodl.DynamicData", "cis.license.version.dev", [("username", "string", "cis.license.version.dev", 0), ("entitlementAccountFolders", "cis.license.management.MyVMwareEntitlementAccountFolders[]", "cis.license.version.dev", F_OPTIONAL), ("syncFromDate", "vmodl.DateTime", "cis.license.version.dev", F_OPTIONAL), ("syncToDate", "vmodl.DateTime", "cis.license.version.dev", F_OPTIONAL)])
CreateDataType("cis.license.management.MyVMwareSyncInfo", "CisLicenseManagementMyVMwareSyncInfo", "vmodl.DynamicData", "cis.license.version.version3", [("licensesAddedTotal", "int", "cis.license.version.version3", 0), ("licensesUpdatedTotal", "int", "cis.license.version.version3", 0), ("licensesRemovedTotal", "int", "cis.license.version.version3", 0), ("inventorySyncTimestamp", "vmodl.DateTime", "cis.license.version.version3", 0), ("myVMwareSyncContext", "cis.license.management.MyVMwareSyncContext", "cis.license.version.dev", F_OPTIONAL)])
CreateDataType("cis.license.management.MyVMwareSyncPreviewResult", "CisLicenseManagementMyVMwareSyncPreviewResult", "vmodl.DynamicData", "cis.license.version.version2", [("inventoryLicensesTotal", "int", "cis.license.version.version2", 0), ("matchedLicenses", "cis.license.License[]", "cis.license.version.version2", F_OPTIONAL), ("newLicenses", "cis.license.LicenseInfo[]", "cis.license.version.version2", F_OPTIONAL), ("inactiveLicensesReport", "cis.license.management.InactiveLicensesReport", "cis.license.version.version2", F_OPTIONAL), ("upgradedLicensesReport", "cis.license.management.InactiveLicensesReport", "cis.license.version.version2", F_OPTIONAL), ("myVMwareReportErrors", "string[]", "cis.license.version.version2", F_OPTIONAL), ("inactiveUnassignedLicenses", "cis.license.License[]", "cis.license.version.version3", F_OPTIONAL)])
CreateEnumType("cis.license.management.MyVMwareSyncPreviewResult.MyVMwareReportErrorTypes", "CisLicenseManagementMyVMwareSyncPreviewResultMyVMwareReportErrorTypes", "cis.license.version.version1", ["invalidDateError", "invalidNumberError", "other"])
CreateDataType("cis.license.management.MyVMwareSyncSpec", "CisLicenseManagementMyVMwareSyncSpec", "vmodl.DynamicData", "cis.license.version.version3", [("licensesToAdd", "cis.license.management.LicenseAddSpec[]", "cis.license.version.version3", F_OPTIONAL), ("licensesToUpdate", "cis.license.management.LicenseUpdateSpec[]", "cis.license.version.version3", F_OPTIONAL), ("licensesToRemove", "vmodl.URI[]", "cis.license.version.version3", F_OPTIONAL), ("myVMwareSyncContext", "cis.license.management.MyVMwareSyncContext", "cis.license.version.dev", F_OPTIONAL)])
CreateDataType("cis.license.management.ProductSearchSpec", "CisLicenseManagementProductSearchSpec", "vmodl.DynamicData", "cis.license.version.version1", None)
CreateDataType("cis.license.management.ProductSearchSpecByIds", "CisLicenseManagementProductSearchSpecByIds", "cis.license.management.ProductSearchSpec", "cis.license.version.version1", [("productIds", "string[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.ProductSearchSpecByLicenseId", "CisLicenseManagementProductSearchSpecByLicenseId", "cis.license.management.ProductSearchSpec", "cis.license.version.version1", [("licenseId", "vmodl.URI", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.ScopedManagementDataExportSpec", "CisLicenseManagementScopedManagementDataExportSpec", "cis.license.management.ManagementDataExportSpec", "cis.license.version.version1", [("scopeId", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.ScopedManagementDataImportSpec", "CisLicenseManagementScopedManagementDataImportSpec", "cis.license.management.ManagementDataImportSpec", "cis.license.version.version1", [("scopeId", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.SerialKeyEvalSpec", "CisLicenseManagementSerialKeyEvalSpec", "cis.license.management.EvalSpec", "cis.license.version.version1", [("evalSerialKey", "string", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.SerialKeyLicenseAddSpec", "CisLicenseManagementSerialKeyLicenseAddSpec", "cis.license.management.LicenseAddSpec", "cis.license.version.version1", [("serialKeys", "string[]", "cis.license.version.version1", 0)])
CreateDataType("cis.license.management.SerialKeyLicenseDescriptionAddSpec", "CisLicenseManagementSerialKeyLicenseDescriptionAddSpec", "cis.license.management.LicenseDescriptionAddSpec", "cis.license.version.version1", [("name", "string", "cis.license.version.version1", 0), ("content", "string", "cis.license.version.version1", 0), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.SerialKeyLicenseUpdateSpec", "CisLicenseManagementSerialKeyLicenseUpdateSpec", "cis.license.management.LicenseUpdateSpec", "cis.license.version.version1", [("serialKeys", "string[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.management.SubscriptionLicenseAddSpec", "CisLicenseManagementSubscriptionLicenseAddSpec", "cis.license.management.LicenseAddSpec", "cis.license.version.dev", [("expiration", "vmodl.DateTime", "cis.license.version.dev", F_OPTIONAL), ("restrictions", "cis.license.LicenseProductRestriction[]", "cis.license.version.dev", 0)])
CreateDataType("cis.license.management.SubscriptionLicenseUpdateSpec", "CisLicenseManagementSubscriptionLicenseUpdateSpec", "cis.license.management.LicenseUpdateSpec", "cis.license.version.dev", [("expiration", "vmodl.DateTime", "cis.license.version.dev", F_OPTIONAL), ("restrictions", "cis.license.LicenseProductRestriction[]", "cis.license.version.dev", F_OPTIONAL)])
CreateManagedType("cis.license.management.SystemManagementService", "CisLicenseManagementSystemManagementService", "vmodl.ManagedObject", "cis.license.version.version1", None, [("querySystemTime", "QuerySystemTime", "cis.license.version.version1", (), (0, "vmodl.DateTime", "vmodl.DateTime"), "LicenseService.Read", None), ("previewLicenses", "PreviewLicenses", "cis.license.version.version1", (("licenseAddSpecs", "cis.license.management.LicenseAddSpec[]", "cis.license.version.version1", 0, None),), (0, "cis.license.LicenseInfo[]", "cis.license.LicenseInfo[]"), "LicenseService.Read", None), ("addLicenses", "AddLicenses", "cis.license.version.version1", (("licenseAddSpecs", "cis.license.management.LicenseAddSpec[]", "cis.license.version.version1", 0, None),), (0, "cis.license.License[]", "cis.license.License[]"), "LicenseService.Administrator", ["cis.license.fault.AlreadyExistsFault", ]), ("searchLicenses", "SearchLicenses", "cis.license.version.version1", (("licenseSearchSpec", "cis.license.management.LicenseSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "cis.license.License[]", "cis.license.License[]"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("searchLicenseUtilizations", "SearchLicenseUtilizations", "cis.license.version.version1", (("licenseSearchSpec", "cis.license.management.LicenseSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "cis.license.LicenseUtilization[]", "cis.license.LicenseUtilization[]"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("searchProducts", "SearchProducts", "cis.license.version.version1", (("productSearchSpec", "cis.license.management.ProductSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "cis.license.Product[]", "cis.license.Product[]"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("searchProductUtilizations", "SearchProductUtilizations", "cis.license.version.version1", (("productSearchSpec", "cis.license.management.ProductSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "cis.license.ProductUtilization[]", "cis.license.ProductUtilization[]"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("updateLicenses", "UpdateLicenses", "cis.license.version.version1", (("licenseUpdateSpecs", "cis.license.management.LicenseUpdateSpec[]", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Administrator", ["cis.license.fault.NotFoundFault", "cis.license.fault.AlreadyExistsFault", ]), ("removeLicenses", "RemoveLicenses", "cis.license.version.version1", (("licenseIds", "vmodl.URI[]", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Administrator", ["cis.license.fault.NotFoundFault", ]), ("searchAssets", "SearchAssets", "cis.license.version.version1", (("assetSearchSpec", "cis.license.management.AssetSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "cis.license.Asset[]", "cis.license.Asset[]"), "LicenseService.Read", ["cis.license.fault.NotFoundFault", ]), ("updateAssetsLicense", "UpdateAssetsLicense", "cis.license.version.version1", (("assetUpdateLicenseSpecs", "cis.license.management.AssetUpdateLicenseSpec[]", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Administrator", ["cis.license.fault.NotFoundFault", "cis.license.fault.AlreadyExistsFault", "cis.license.fault.AssignmentFault", ]), ("unregisterAssets", "UnregisterAssets", "cis.license.version.version1", (("assetIds", "vmodl.URI[]", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Administrator", ["cis.license.fault.NotFoundFault", ]), ("queryLicenseDescriptions", "QueryLicenseDescriptions", "cis.license.version.version1", (), (F_OPTIONAL, "cis.license.LicenseDescription[]", "cis.license.LicenseDescription[]"), "LicenseService.Administrator", None), ("addLicenseDescriptions", "AddLicenseDescriptions", "cis.license.version.version1", (("licenseDescriptions", "cis.license.management.LicenseDescriptionAddSpec[]", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Administrator", None), ("removeLicenseDescriptions", "RemoveLicenseDescriptions", "cis.license.version.version1", (("descriptionIds", "vmodl.URI[]", "cis.license.version.version1", F_OPTIONAL, None),), (0, "void", "void"), "LicenseService.Administrator", ["cis.license.fault.NotFoundFault", ]), ("importManagementData", "ImportManagementData", "cis.license.version.version1", (("importSpec", "cis.license.management.ManagementDataImportSpec", "cis.license.version.version1", 0, None),), (0, "void", "void"), "LicenseService.Administrator", ["cis.license.fault.DataImportFault", ]), ("exportManagementData", "ExportManagementData", "cis.license.version.version1", (("exportSpec", "cis.license.management.ManagementDataExportSpec", "cis.license.version.version1", F_OPTIONAL, None),), (0, "cis.license.management.ManagementData", "cis.license.management.ManagementData"), "LicenseService.Administrator", ["cis.license.fault.DataExportFault", ]), ("previewMyVMwareSync", "PreviewMyVMwareSync", "cis.license.version.version2", (("myVMwareLicenseReport", "cis.license.management.MyVMwareLicenseReport", "cis.license.version.version2", 0, None),), (0, "cis.license.management.MyVMwareSyncPreviewResult", "cis.license.management.MyVMwareSyncPreviewResult"), "LicenseService.Administrator", ["cis.license.fault.MyVMwareSyncPreviewFault", ]), ("performMyVMwareSync", "PerformMyVMwareSync", "cis.license.version.version3", (("myVMwareSyncSpec", "cis.license.management.MyVMwareSyncSpec", "cis.license.version.version3", 0, None),), (0, "cis.license.management.MyVMwareSyncInfo", "cis.license.management.MyVMwareSyncInfo"), "LicenseService.Administrator", ["cis.license.fault.MyVMwareSyncFault", ]), ("queryLastMyVMwareSyncInfo", "QueryLastMyVMwareSyncInfo", "cis.license.version.dev", (), (F_OPTIONAL, "cis.license.management.MyVMwareSyncInfo", "cis.license.management.MyVMwareSyncInfo"), "LicenseService.Administrator", None)])
CreateDataType("cis.license.notification.Notification", "CisLicenseNotificationNotification", "vmodl.DynamicData", "cis.license.version.version1", [("sequenceId", "long", "cis.license.version.version1", 0), ("type", "string", "cis.license.version.version1", 0), ("creationTime", "vmodl.DateTime", "cis.license.version.version1", 0), ("properties", "vmodl.KeyAnyValue[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.notification.NotificationSearchResult", "CisLicenseNotificationNotificationSearchResult", "vmodl.DynamicData", "cis.license.version.version1", [("latestSequenceId", "long", "cis.license.version.version1", 0), ("notifications", "cis.license.notification.Notification[]", "cis.license.version.version1", F_OPTIONAL)])
CreateDataType("cis.license.notification.NotificationSearchSpec", "CisLicenseNotificationNotificationSearchSpec", "vmodl.DynamicData", "cis.license.version.version1", [("startSequenceId", "long", "cis.license.version.version1", 0)])
CreateManagedType("cis.license.notification.NotificationService", "CisLicenseNotificationNotificationService", "vmodl.ManagedObject", "cis.license.version.version1", None, [("searchNotifications", "SearchNotifications", "cis.license.version.version1", (("notificationSearchSpec", "cis.license.notification.NotificationSearchSpec", "cis.license.version.version1", F_OPTIONAL, None),), (0, "cis.license.notification.NotificationSearchResult", "cis.license.notification.NotificationSearchResult"), "LicenseService.Read", None)])
CreateDataType("cis.license.management.LegacyManagementDataImportSpec", "CisLicenseManagementLegacyManagementDataImportSpec", "cis.license.management.ScopedManagementDataImportSpec", "cis.license.version.version1", None)
CreateDataType("cis.license.management.MyVMwareSerialKeyLicenseAddSpec", "CisLicenseManagementMyVMwareSerialKeyLicenseAddSpec", "cis.license.management.SerialKeyLicenseAddSpec", "cis.license.version.version2", [("licenseDetails", "cis.license.MyVMwareLicenseDetails[]", "cis.license.version.version2", 0)])
CreateDataType("cis.license.management.MyVMwareSerialKeyLicenseUpdateSpec", "CisLicenseManagementMyVMwareSerialKeyLicenseUpdateSpec", "cis.license.management.SerialKeyLicenseUpdateSpec", "cis.license.version.version2", [("licenseDetails", "cis.license.MyVMwareLicenseDetails[]", "cis.license.version.version2", F_OPTIONAL)])
