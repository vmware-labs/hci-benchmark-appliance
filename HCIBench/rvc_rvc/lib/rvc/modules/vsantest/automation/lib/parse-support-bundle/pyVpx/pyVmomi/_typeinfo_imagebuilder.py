# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******
from .VmomiSupport import CreateDataType, CreateManagedType
from .VmomiSupport import CreateEnumType
from .VmomiSupport import AddVersion, AddVersionParent
from .VmomiSupport import AddBreakingChangesInfo
from .VmomiSupport import F_LINK, F_LINKABLE
from .VmomiSupport import F_OPTIONAL, F_SECRET
from .VmomiSupport import newestVersions, ltsVersions
from .VmomiSupport import dottedVersions, oldestVersions

AddVersion("vmodl.query.version.version4", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version3", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version2", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version1", "", "", 0, "vim25")
AddVersion("imagebuilder.version.PersonalityManagerESXio", "imagebuilder", "f2BD27CFB", 0, "imagebuilder")
AddVersion("imagebuilder.version.disabled", "imagebuilder", "", 0, "imagebuilder")
AddVersion("vmodl.version.version0", "", "", 0, "vim25")
AddVersion("vmodl.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.version.version2", "", "", 0, "vim25")
AddVersion("imagebuilder.version.version1", "imagebuilder", "1.0", 0, "imagebuilder")
AddVersion("vmodl.reflect.version.version1", "reflect", "1.0", 0, "reflect")
AddVersion("imagebuilder.version.RbdSCADeprecation", "imagebuilder", "fFEC849FB", 0, "imagebuilder")
AddVersion("vim.version.version6", "vim25", "4.1", 0, "vim25")
AddVersion("vim.version.version7", "vim25", "5.0", 0, "vim25")
AddVersion("vim.version.version1", "vim2", "2.0", 0, "vim25")
AddVersion("vim.version.version4", "vim25", "2.5u2server", 0, "vim25")
AddVersion("vim.version.version5", "vim25", "4.0", 0, "vim25")
AddVersion("vim.version.version2", "vim25", "2.5", 0, "vim25")
AddVersion("vim.version.version3", "vim25", "2.5u2", 0, "vim25")
AddVersion("imagebuilder.version.v7_0", "imagebuilder", "7.0.0.0", 0, "imagebuilder")
AddVersion("imagebuilder.version.unstable", "imagebuilder", "u5AB65135", 0, "imagebuilder")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version4")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.query.version.version4")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.query.version.version3")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.query.version.version2")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.query.version.version1")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "imagebuilder.version.PersonalityManagerESXio")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.version.version1")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "imagebuilder.version.version1")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version6")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version7")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version1")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version4")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version5")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version2")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "vim.version.version3")
AddVersionParent("imagebuilder.version.PersonalityManagerESXio", "imagebuilder.version.v7_0")
AddVersionParent("imagebuilder.version.disabled", "vmodl.query.version.version4")
AddVersionParent("imagebuilder.version.disabled", "vmodl.query.version.version3")
AddVersionParent("imagebuilder.version.disabled", "vmodl.query.version.version2")
AddVersionParent("imagebuilder.version.disabled", "vmodl.query.version.version1")
AddVersionParent("imagebuilder.version.disabled", "imagebuilder.version.PersonalityManagerESXio")
AddVersionParent("imagebuilder.version.disabled", "imagebuilder.version.disabled")
AddVersionParent("imagebuilder.version.disabled", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.disabled", "vmodl.version.version1")
AddVersionParent("imagebuilder.version.disabled", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.disabled", "imagebuilder.version.version1")
AddVersionParent("imagebuilder.version.disabled", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.disabled", "imagebuilder.version.RbdSCADeprecation")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version6")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version7")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version1")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version4")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version5")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version2")
AddVersionParent("imagebuilder.version.disabled", "vim.version.version3")
AddVersionParent("imagebuilder.version.disabled", "imagebuilder.version.v7_0")
AddVersionParent("imagebuilder.version.disabled", "imagebuilder.version.unstable")
AddVersionParent("vmodl.version.version0", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.version1", "vmodl.query.version.version4")
AddVersionParent("imagebuilder.version.version1", "vmodl.query.version.version3")
AddVersionParent("imagebuilder.version.version1", "vmodl.query.version.version2")
AddVersionParent("imagebuilder.version.version1", "vmodl.query.version.version1")
AddVersionParent("imagebuilder.version.version1", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.version1", "vmodl.version.version1")
AddVersionParent("imagebuilder.version.version1", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.version1", "imagebuilder.version.version1")
AddVersionParent("imagebuilder.version.version1", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.version1", "vim.version.version6")
AddVersionParent("imagebuilder.version.version1", "vim.version.version7")
AddVersionParent("imagebuilder.version.version1", "vim.version.version1")
AddVersionParent("imagebuilder.version.version1", "vim.version.version4")
AddVersionParent("imagebuilder.version.version1", "vim.version.version5")
AddVersionParent("imagebuilder.version.version1", "vim.version.version2")
AddVersionParent("imagebuilder.version.version1", "vim.version.version3")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.query.version.version4")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.query.version.version3")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.query.version.version2")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.query.version.version1")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.version.version1")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "imagebuilder.version.version1")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "imagebuilder.version.RbdSCADeprecation")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version6")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version7")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version1")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version4")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version5")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version2")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "vim.version.version3")
AddVersionParent("imagebuilder.version.RbdSCADeprecation", "imagebuilder.version.v7_0")
AddVersionParent("vim.version.version6", "vmodl.query.version.version3")
AddVersionParent("vim.version.version6", "vmodl.query.version.version2")
AddVersionParent("vim.version.version6", "vmodl.query.version.version1")
AddVersionParent("vim.version.version6", "vmodl.version.version0")
AddVersionParent("vim.version.version6", "vmodl.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version6")
AddVersionParent("vim.version.version6", "vim.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version4")
AddVersionParent("vim.version.version6", "vim.version.version5")
AddVersionParent("vim.version.version6", "vim.version.version2")
AddVersionParent("vim.version.version6", "vim.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version4")
AddVersionParent("vim.version.version7", "vmodl.query.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version2")
AddVersionParent("vim.version.version7", "vmodl.query.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version0")
AddVersionParent("vim.version.version7", "vmodl.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version2")
AddVersionParent("vim.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version6")
AddVersionParent("vim.version.version7", "vim.version.version7")
AddVersionParent("vim.version.version7", "vim.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version4")
AddVersionParent("vim.version.version7", "vim.version.version5")
AddVersionParent("vim.version.version7", "vim.version.version2")
AddVersionParent("vim.version.version7", "vim.version.version3")
AddVersionParent("vim.version.version1", "vmodl.query.version.version1")
AddVersionParent("vim.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version1", "vim.version.version1")
AddVersionParent("vim.version.version4", "vmodl.query.version.version1")
AddVersionParent("vim.version.version4", "vmodl.version.version0")
AddVersionParent("vim.version.version4", "vim.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version4")
AddVersionParent("vim.version.version4", "vim.version.version2")
AddVersionParent("vim.version.version4", "vim.version.version3")
AddVersionParent("vim.version.version5", "vmodl.query.version.version2")
AddVersionParent("vim.version.version5", "vmodl.query.version.version1")
AddVersionParent("vim.version.version5", "vmodl.version.version0")
AddVersionParent("vim.version.version5", "vmodl.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version4")
AddVersionParent("vim.version.version5", "vim.version.version5")
AddVersionParent("vim.version.version5", "vim.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version3")
AddVersionParent("vim.version.version2", "vmodl.query.version.version1")
AddVersionParent("vim.version.version2", "vmodl.version.version0")
AddVersionParent("vim.version.version2", "vim.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version2")
AddVersionParent("vim.version.version3", "vmodl.query.version.version1")
AddVersionParent("vim.version.version3", "vmodl.version.version0")
AddVersionParent("vim.version.version3", "vim.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version2")
AddVersionParent("vim.version.version3", "vim.version.version3")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.query.version.version4")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.query.version.version3")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.query.version.version2")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.query.version.version1")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.version.version1")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.v7_0", "imagebuilder.version.version1")
AddVersionParent("imagebuilder.version.v7_0", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version6")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version7")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version1")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version4")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version5")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version2")
AddVersionParent("imagebuilder.version.v7_0", "vim.version.version3")
AddVersionParent("imagebuilder.version.v7_0", "imagebuilder.version.v7_0")
AddVersionParent("imagebuilder.version.unstable", "vmodl.query.version.version4")
AddVersionParent("imagebuilder.version.unstable", "vmodl.query.version.version3")
AddVersionParent("imagebuilder.version.unstable", "vmodl.query.version.version2")
AddVersionParent("imagebuilder.version.unstable", "vmodl.query.version.version1")
AddVersionParent("imagebuilder.version.unstable", "imagebuilder.version.PersonalityManagerESXio")
AddVersionParent("imagebuilder.version.unstable", "vmodl.version.version0")
AddVersionParent("imagebuilder.version.unstable", "vmodl.version.version1")
AddVersionParent("imagebuilder.version.unstable", "vmodl.version.version2")
AddVersionParent("imagebuilder.version.unstable", "imagebuilder.version.version1")
AddVersionParent("imagebuilder.version.unstable", "vmodl.reflect.version.version1")
AddVersionParent("imagebuilder.version.unstable", "imagebuilder.version.RbdSCADeprecation")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version6")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version7")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version1")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version4")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version5")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version2")
AddVersionParent("imagebuilder.version.unstable", "vim.version.version3")
AddVersionParent("imagebuilder.version.unstable", "imagebuilder.version.v7_0")
AddVersionParent("imagebuilder.version.unstable", "imagebuilder.version.unstable")

newestVersions.Add("imagebuilder.version.unstable")
ltsVersions.Add("imagebuilder.version.v7_0")
dottedVersions.Add("imagebuilder.version.v7_0")
oldestVersions.Add("imagebuilder.version.version1")

CreateDataType("imagebuilder.Capabilities", "ImageBuilderCapabilities", "vmodl.DynamicData", "imagebuilder.version.RbdSCADeprecation", [("configurationApi", "boolean", "imagebuilder.version.RbdSCADeprecation", F_OPTIONAL), ("restApiHardening", "boolean", "imagebuilder.version.RbdSCADeprecation", F_OPTIONAL)])
CreateDataType("imagebuilder.ChannelSpec", "DepotManagerChannelSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("channelName", "string", "imagebuilder.version.version1", 0), ("Guid", "string", "imagebuilder.version.version1", 0), ("metadataUrl", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("metadata", "imagebuilder.MetadataSpec[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateManagedType("imagebuilder.ConfigManager", "ImageBuilderConfigManager", "vmodl.ManagedObject", "imagebuilder.version.version1", None, [("setProxy", "SetProxy", "imagebuilder.version.version1", (("proxyUrl", "string", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "void", "void"), None, None), ("getProxy", "GetProxy", "imagebuilder.version.version1", (), (F_OPTIONAL, "string", "string"), None, None), ("setTimeout", "SetTimeout", "imagebuilder.version.version1", (("timeout", "int", "imagebuilder.version.version1", 0, None),), (0, "void", "void"), None, None), ("getTimeout", "GetTimeout", "imagebuilder.version.version1", (), (0, "int", "int"), None, None), ("setRetries", "SetRetries", "imagebuilder.version.version1", (("retries", "int", "imagebuilder.version.version1", 0, None),), (0, "void", "void"), None, None), ("getRetries", "GetRetries", "imagebuilder.version.version1", (), (0, "int", "int"), None, None)])
CreateManagedType("imagebuilder.DepotManager", "DepotManager", "vmodl.ManagedObject", "imagebuilder.version.version1", [("configuredDepot", "imagebuilder.DepotSpec[]", "imagebuilder.version.version1", F_OPTIONAL, None), ("defaultDepot", "imagebuilder.DepotSpec[]", "imagebuilder.version.version1", F_OPTIONAL, None), ("configuredChannel", "imagebuilder.ChannelSpec[]", "imagebuilder.version.version1", F_OPTIONAL, None)], [("GetDepots", "GetConfiguredDepots", "imagebuilder.version.version1", (("depotFilter", "imagebuilder.DepotManager.DepotFilterSpec", "imagebuilder.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "imagebuilder.DepotSpec[]", "imagebuilder.DepotSpec[]"), None, ["imagebuilder.fault.DatabaseError", ]), ("GetDefaultDepots", "GetDefaultDepots", "imagebuilder.version.version1", (), (F_OPTIONAL, "imagebuilder.DepotSpec[]", "imagebuilder.DepotSpec[]"), None, None), ("GetChannels", "GetConfiguredChannels", "imagebuilder.version.version1", (), (F_OPTIONAL, "imagebuilder.ChannelSpec[]", "imagebuilder.ChannelSpec[]"), None, None), ("connect", "com.vmware.imagebuilder.ConnectDepot_Task", "imagebuilder.version.version1", (("depotSpec", "imagebuilder.DepotSpec", "imagebuilder.version.version1", 0, None),("timeout", "int", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "imagebuilder.DepotManager.ConnectResult"), "ImageBuilder.Depot.Create", ["imagebuilder.fault.DuplicateDepot", "imagebuilder.fault.DatabaseError", ]), ("updateDepot", "UpdateDepot_Task", "imagebuilder.version.version1", (("depot", "imagebuilder.DepotSpec", "imagebuilder.version.version1", 0, None),), (0, "vim.Task", "imagebuilder.DepotManager.ConnectResult"), None, ["imagebuilder.fault.NotFound", ]), ("createDepot", "CreateNewDepot", "imagebuilder.version.version1", (("name", "string", "imagebuilder.version.version1", 0, None),), (0, "imagebuilder.DepotSpec", "imagebuilder.DepotSpec"), "ImageBuilder.Depot.Create", ["imagebuilder.fault.DuplicateDepot", "imagebuilder.fault.DatabaseError", ]), ("disconnect", "DisconnectExistingDepot", "imagebuilder.version.version1", (("depot", "imagebuilder.DepotSpec", "imagebuilder.version.version1", 0, None),), (0, "void", "void"), "ImageBuilder.Depot.Delete", ["imagebuilder.fault.NotFound", "imagebuilder.fault.DatabaseError", ]), ("parseDepotIndex", "ParseDepotIndex", "imagebuilder.version.version1", (("depotIndexUrl", "string", "imagebuilder.version.version1", 0, None),("depotIndexFile", "string", "imagebuilder.version.version1", 0, None),), (0, "imagebuilder.DepotSpec", "imagebuilder.DepotSpec"), None, ["imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ]), ("parseVendorIndex", "ParseVendorIndex", "imagebuilder.version.version1", (("vendorIndexUrl", "string", "imagebuilder.version.version1", 0, None),("vendorIndexFile", "string", "imagebuilder.version.version1", 0, None),), (0, "imagebuilder.VendorIndexSpec", "imagebuilder.VendorIndexSpec"), None, ["imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ]), ("parseMetadataZip", "ParseMetadataZip", "imagebuilder.version.version1", (("metadataZipUrl", "string", "imagebuilder.version.version1", 0, None),("metadataZipFile", "string", "imagebuilder.version.version1", 0, None),), (0, "imagebuilder.MetadataSpec", "imagebuilder.MetadataSpec"), None, ["imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ]), ("analyzeDependencies", "AnalyzeDepotDeps", "imagebuilder.version.version1", (), (0, "void", "void"), None, ["imagebuilder.fault.InvalidState", ]), ("addProfile", "AddDepotManagerProfile", "imagebuilder.version.version1", (("profile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("depot", "imagebuilder.DepotSpec", "imagebuilder.version.version1", 0, None),("overwrite", "boolean", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "imagebuilder.pkg.ImageProfile", "imagebuilder.pkg.ImageProfile"), "ImageBuilder.Profile.Create", ["imagebuilder.fault.ProfileAlreadyExists", "imagebuilder.fault.InvalidDepot", "imagebuilder.fault.DatabaseError", ]), ("removeProfile", "RemoveDepotManagerProfile", "imagebuilder.version.version1", (("profileId", "string", "imagebuilder.version.version1", 0, None),), (0, "void", "void"), "ImageBuilder.Profile.Delete", ["imagebuilder.fault.NotFound", "imagebuilder.fault.ProfileReadOnly", ]), ("moveImageProfile", "MoveDepotManagerImageProfile", "imagebuilder.version.version1", (("profileId", "string", "imagebuilder.version.version1", 0, None),("depot", "imagebuilder.DepotSpec", "imagebuilder.version.version1", 0, None),), (0, "void", "void"), "ImageBuilder.Profile.Create", ["imagebuilder.fault.NotFound", "imagebuilder.fault.ProfileReadOnly", "imagebuilder.fault.InvalidDepot", ]), ("addVibFromUrl", "AddDepotManagerVibFromUrl", "imagebuilder.version.version1", (("url", "string", "imagebuilder.version.version1", 0, None),("channelName", "string", "imagebuilder.version.version1", 0, None),("overwrite", "boolean", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "imagebuilder.pkg.VibPackageSpec", "imagebuilder.pkg.VibPackageSpec"), None, ["imagebuilder.fault.VibAlreadyExists", "imagebuilder.fault.CannotAccessNetwork", "imagebuilder.fault.InvalidFormat", ]), ("removeVib", "RemoveDepotManagerVib", "imagebuilder.version.version1", (("vibId", "string", "imagebuilder.version.version1", 0, None),), (0, "void", "void"), None, ["imagebuilder.fault.NotFound", ]), ("queryChannels", "QueryDepotManagerChannels", "imagebuilder.version.version1", (("channelFilter", "imagebuilder.DepotManager.ChannelFilterSpec", "imagebuilder.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "imagebuilder.ChannelSpec[]", "imagebuilder.ChannelSpec[]"), None, None), ("queryPackages", "QueryDepotManagerPackages", "imagebuilder.version.version1", (("pkgFilter", "imagebuilder.DepotManager.VibPackageFilterSpec", "imagebuilder.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "imagebuilder.pkg.VibPackageSpec[]", "imagebuilder.pkg.VibPackageSpec[]"), None, ["imagebuilder.fault.NotFound", ]), ("DownloadVib", "DepotManagerDownloadVib", "imagebuilder.version.version1", (("vibid", "string", "imagebuilder.version.version1", 0, None),("noacceptancecheck", "boolean", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "string", "string"), None, ["imagebuilder.fault.NotFound", "imagebuilder.fault.CannotAccessNetwork", "imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ]), ("DownloadVibs", "DepotManagerDownloadVibs", "imagebuilder.version.version1", (("vibList", "string[]", "imagebuilder.version.version1", 0, None),("noacceptancecheck", "boolean", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "imagebuilder.DepotManager.VibInfo[]", "imagebuilder.DepotManager.VibInfo[]"), None, ["imagebuilder.fault.NotFound", "imagebuilder.fault.CannotAccessNetwork", "imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ]), ("queryProfiles", "QueryDepotManagerProfiles", "imagebuilder.version.version1", (("profileFilter", "imagebuilder.DepotManager.ImageProfileFilterSpec", "imagebuilder.version.version1", F_OPTIONAL, None),("omitVibList", "boolean", "imagebuilder.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "imagebuilder.pkg.ImageProfile[]", "imagebuilder.pkg.ImageProfile[]"), None, None)])
CreateDataType("imagebuilder.DepotManager.DepotFilterSpec", "DepotManagerDepotFilterSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("matchUrl", "string", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.DepotManager.ConnectResult", "ConnectResult", "vmodl.DynamicData", "imagebuilder.version.version1", [("connectedDepot", "imagebuilder.DepotSpec[]", "imagebuilder.version.version1", F_OPTIONAL), ("fault", "vmodl.MethodFault[]", "imagebuilder.version.version1", F_OPTIONAL), ("errMsg", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.DepotManager.ChannelFilterSpec", "ChannelFilterSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("matchDepotUrl", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchChannelName", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.DepotManager.VibPackageFilterSpec", "VibPackageFilterSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("matchChannel", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchGuid", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchName", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchTag", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchVersion", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchVendor", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchDepotUrl", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchAcceptanceLevel", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchCreatedAfter", "vmodl.DateTime", "imagebuilder.version.version1", F_OPTIONAL), ("matchCreatedBefore", "vmodl.DateTime", "imagebuilder.version.version1", F_OPTIONAL), ("matchNewest", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("updatesForVibId", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchImageProfile", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.DepotManager.VibInfo", "VibInfo", "vmodl.DynamicData", "imagebuilder.version.version1", [("vibUrl", "string", "imagebuilder.version.version1", 0), ("vibId", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.DepotManager.ImageProfileFilterSpec", "ImageFactoryProfileFilterSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("matchChannel", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchGuid", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchName", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchVendor", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchAcceptanceLevel", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("matchDepotUrl", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.DepotSpec", "DepotManagerDepotSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("depotIndexUrl", "string", "imagebuilder.version.version1", 0), ("name", "string", "imagebuilder.version.version1", 0), ("readOnly", "boolean", "imagebuilder.version.version1", 0), ("status", "imagebuilder.DepotSpec.State", "imagebuilder.version.version1", F_OPTIONAL), ("type", "imagebuilder.DepotSpec.Type", "imagebuilder.version.version1", 0), ("vendorIndexUrl", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("vendorIndex", "imagebuilder.VendorIndexSpec[]", "imagebuilder.version.version1", F_OPTIONAL), ("lastConnected", "vmodl.DateTime", "imagebuilder.version.version1", F_OPTIONAL)])
CreateEnumType("imagebuilder.DepotSpec.State", "DepotManagerDepotSpecState", "imagebuilder.version.version1", ["Ready", "Connecting", "Error"])
CreateEnumType("imagebuilder.DepotSpec.Type", "DepotManagerDepotSpecType", "imagebuilder.version.version1", ["Online", "Offline", "User"])
CreateManagedType("imagebuilder.ImageBuilder", "ImageBuilderImageBuilder", "vmodl.ManagedObject", "imagebuilder.version.version1", None, [("createIso", "ImageBuilderExportIso_Task", "imagebuilder.version.version1", (("profile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("options", "imagebuilder.ImageBuilder.IsoCustomisationSpec", "imagebuilder.version.version1", 0, None),), (0, "vim.Task", "void"), "ImageBuilder.Profile.Export", ["imagebuilder.fault.InvalidState", "imagebuilder.fault.FileAlreadyExists", "imagebuilder.fault.CannotAccessNetwork", "imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ])])
CreateDataType("imagebuilder.ImageBuilder.IsoCustomisationSpec", "ImageBuilderIsoCustomisationSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("force", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("noinstaller", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("noacceptancecheck", "boolean", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.ImageProfileCompareResult", "IPCompareResult", "vmodl.DynamicData", "imagebuilder.version.version1", [("refProfile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0), ("compProfile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0), ("identical", "boolean", "imagebuilder.version.version1", 0), ("packagesIdentical", "boolean", "imagebuilder.version.version1", 0), ("compareResult", "imagebuilder.ImageProfileCompareResult.CompareResultElement[]", "imagebuilder.version.version1", 0), ("refProfileAcceptanceLevel", "string", "imagebuilder.version.version1", 0), ("compProfileAcceptanceLevel", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileCompareResult.CompareResultElement", "IPCompareResultElement", "vmodl.DynamicData", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.ImageProfileCompareResult.OnePackageElement", "IPOnePackageElement", "imagebuilder.ImageProfileCompareResult.CompareResultElement", "imagebuilder.version.version1", [("packageId", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileCompareResult.OnlyInRef", "IPOnlyInRef", "imagebuilder.ImageProfileCompareResult.OnePackageElement", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.ImageProfileCompareResult.OnlyInComp", "IPOnlyInComp", "imagebuilder.ImageProfileCompareResult.OnePackageElement", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.ImageProfileCompareResult.Identical", "IPIdentical", "imagebuilder.ImageProfileCompareResult.OnePackageElement", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.ImageProfileCompareResult.UpgradeFromRef", "IPUpgradeFromRef", "imagebuilder.ImageProfileCompareResult.CompareResultElement", "imagebuilder.version.version1", [("compPackageId", "string", "imagebuilder.version.version1", 0), ("refPackageIds", "string[]", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileCompareResult.DowngradeFromRef", "IPDowngradeFromRef", "imagebuilder.ImageProfileCompareResult.CompareResultElement", "imagebuilder.version.version1", [("compPackageId", "string", "imagebuilder.version.version1", 0), ("refPackageIds", "string[]", "imagebuilder.version.version1", 0)])
CreateManagedType("imagebuilder.ImageProfileEngine", "ImageBuilderProfileEngine", "vmodl.ManagedObject", "imagebuilder.version.version1", None, [("addVib", "AddImageFactoryVib", "imagebuilder.version.version1", (("profile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("vib", "string[]", "imagebuilder.version.version1", 0, None),("replace", "boolean", "imagebuilder.version.version1", F_OPTIONAL, None),), (0, "imagebuilder.pkg.ImageProfile", "imagebuilder.pkg.ImageProfile"), None, ["imagebuilder.fault.NotFound", "imagebuilder.fault.CompositionFault", ]), ("removeVib", "RemoveImageFactoryVib", "imagebuilder.version.version1", (("profile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("vib", "string[]", "imagebuilder.version.version1", 0, None),), (0, "imagebuilder.pkg.ImageProfile", "imagebuilder.pkg.ImageProfile"), None, ["imagebuilder.fault.NotFound", "imagebuilder.fault.CompositionFault", ]), ("diffProfile", "DiffImageBuilderProfile", "imagebuilder.version.version1", (("refProfile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("compProfile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),), (0, "imagebuilder.ImageProfileCompareResult", "imagebuilder.ImageProfileCompareResult"), None, ["imagebuilder.fault.NotFound", ]), ("validate", "ValidateImageBuilderProfile", "imagebuilder.version.version1", (("profile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("options", "imagebuilder.ImageProfileEngine.ValidationOptionsSpec", "imagebuilder.version.version1", 0, None),), (F_OPTIONAL, "imagebuilder.ImageProfileEngine.Problem[]", "imagebuilder.ImageProfileEngine.Problem[]"), None, ["imagebuilder.fault.NotFound", ]), ("exportProfile", "com.vmware.imagebuilder.ExportProfile_Task", "imagebuilder.version.version1", (("profile", "imagebuilder.pkg.ImageProfile", "imagebuilder.version.version1", 0, None),("options", "imagebuilder.ImageProfileEngine.BundleExportCustomisationSpec", "imagebuilder.version.version1", 0, None),), (0, "vim.Task", "string"), "ImageBuilder.Profile.Export", ["imagebuilder.fault.NotFound", "imagebuilder.fault.FileAlreadyExists", "imagebuilder.fault.CannotAccessNetwork", "imagebuilder.fault.InvalidFormat", "imagebuilder.fault.CannotAccessFile", ])])
CreateDataType("imagebuilder.ImageProfileEngine.BundleExportCustomisationSpec", "ImageBuilderBundleExportCustomisationSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("force", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("noacceptancecheck", "boolean", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.ImageProfileEngine.Problem", "ImageBuilderProfileEngineProblem", "vmodl.DynamicData", "imagebuilder.version.version1", [("message", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileEngine.MissingDependency", "ImageBuilderProfileEngineMissingDependency", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", [("badPackageId", "string", "imagebuilder.version.version1", 0), ("packageRelation", "imagebuilder.pkg.ComponentRelation", "imagebuilder.version.version1", 0), ("suggestedPackageId", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.ImageProfileEngine.PackageConflicts", "ImageBuilderProfileEnginePackageConflicts", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", [("conflictingPackageId", "string[]", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileEngine.PackageObsoleted", "ImageBuilderProfileEnginePackageObsoleted", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", [("newPackageId", "string[]", "imagebuilder.version.version1", 0), ("oldPackageId", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileEngine.BadAcceptanceLevel", "ImageBuilderProfileEngineBadAcceptanceLevel", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", [("badPackageId", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileEngine.FileConflicts", "ImageBuilderProfileEngineFileConflicts", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", [("conflictingPackageId", "string[]", "imagebuilder.version.version1", 0), ("filesInConflict", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.ImageProfileEngine.ExtensibilityRuleViolation", "ImageBuilderProfileEngineExtensibilityRuleViolation", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", [("badPackageId", "string", "imagebuilder.version.version1", 0), ("errors", "string[]", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.ImageProfileEngine.ProfileNotBootable", "ImageBuilderProfileEngineProfileNotBootable", "imagebuilder.ImageProfileEngine.Problem", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.ImageProfileEngine.ValidationOptionsSpec", "ImageBuilderValidationOptions", "vmodl.DynamicData", "imagebuilder.version.version1", [("allowMissingDeps", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("allowPackageConflicts", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("allowObsolescence", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("allowUnacceptedPackages", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("allowExtensibilityRuleBreakage", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("allowFileConflicts", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("suggestMissingDeps", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("suggestChannelGuid", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.MetadataSpec", "DepotManagerMetadataSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("Guid", "string", "imagebuilder.version.version1", 0), ("metadataUrl", "string", "imagebuilder.version.version1", 0), ("softwarePlatform", "imagebuilder.PlatformSpec[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.PlatformSpec", "DepotManagerPlatformSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("product", "string", "imagebuilder.version.version1", 0), ("version", "string", "imagebuilder.version.version1", F_OPTIONAL), ("locale", "string", "imagebuilder.version.version1", F_OPTIONAL)])
CreateManagedType("imagebuilder.ServiceInstance", "ImageBuilderServiceInstance", "vmodl.ManagedObject", "imagebuilder.version.version1", [("depotManager", "imagebuilder.DepotManager", "imagebuilder.version.version1", 0, None), ("imageProfileEngine", "imagebuilder.ImageProfileEngine", "imagebuilder.version.version1", 0, None), ("imageBuilder", "imagebuilder.ImageBuilder", "imagebuilder.version.version1", 0, None), ("configManager", "imagebuilder.ConfigManager", "imagebuilder.version.version1", 0, None), ("capabilities", "imagebuilder.Capabilities", "imagebuilder.version.RbdSCADeprecation", 0, None)], [("queryDepotManager", "GetDepotManager", "imagebuilder.version.version1", (), (0, "imagebuilder.DepotManager", "imagebuilder.DepotManager"), None, None), ("queryImageProfileEngine", "GetImageProfileEngine", "imagebuilder.version.version1", (), (0, "imagebuilder.ImageProfileEngine", "imagebuilder.ImageProfileEngine"), None, None), ("queryImageBuilder", "GetImageBuilder", "imagebuilder.version.version1", (), (0, "imagebuilder.ImageBuilder", "imagebuilder.ImageBuilder"), None, None), ("queryConfigManager", "GetConfigManager", "imagebuilder.version.version1", (), (0, "imagebuilder.ConfigManager", "imagebuilder.ConfigManager"), None, None)])
CreateDataType("imagebuilder.VendorIndexSpec", "DepotManagerVendorIndexSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("vendor", "string", "imagebuilder.version.version1", 0), ("vendorIndexUrl", "string", "imagebuilder.version.version1", 0), ("channel", "imagebuilder.ChannelSpec[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.fault.IbFault", "ImagebuilderFaultIbFault", "vmodl.MethodFault", "imagebuilder.version.version1", [("errorCode", "int", "imagebuilder.version.version1", 0), ("errorMessage", "vmodl.LocalizableMessage", "imagebuilder.version.version1", 0), ("additionalData", "vmodl.KeyAnyValue[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.fault.IbTaskFault", "ImagebuilderFaultIbTaskFault", "vim.fault.ExtendedFault", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.fault.InvalidDepot", "ImagebuilderFaultInvalidDepot", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.InvalidFormat", "ImagebuilderFaultInvalidFormat", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.InvalidState", "ImagebuilderFaultInvalidState", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.NoPermission", "ImagebuilderFaultNoPermission", "vmodl.fault.SecurityError", "imagebuilder.version.version1", [("object", "vmodl.ManagedObject", "imagebuilder.version.version1", F_OPTIONAL), ("privilegeId", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.fault.NotAuthenticated", "ImagebuilderFaultNotAuthenticated", "imagebuilder.fault.NoPermission", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.NotFound", "ImagebuilderFaultNotFound", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.ProfileAlreadyExists", "ImagebuilderFaultProfileAlreadyExists", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.ProfileReadOnly", "ImagebuilderFaultProfileReadOnly", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.VibAlreadyExists", "ImagebuilderFaultVibAlreadyExists", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.pkg.ComponentRelation", "ImagebuilderPkgComponentRelation", "vmodl.DynamicData", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", 0), ("op", "imagebuilder.pkg.ComponentRelation.Operator", "imagebuilder.version.version1", F_OPTIONAL), ("version", "string", "imagebuilder.version.version1", F_OPTIONAL), ("Guid", "string", "imagebuilder.version.version1", 0)])
CreateEnumType("imagebuilder.pkg.ComponentRelation.Operator", "ImagebuilderPkgComponentRelationOperator", "imagebuilder.version.version1", ["LT", "LTE", "EQ", "GTE", "GT"])
CreateDataType("imagebuilder.pkg.ComponentRelationship", "ImagebuilderPkgComponentRelationship", "vmodl.DynamicData", "imagebuilder.version.version1", [("depends", "imagebuilder.pkg.ComponentRelation[]", "imagebuilder.version.version1", F_OPTIONAL), ("conflicts", "imagebuilder.pkg.ComponentRelation[]", "imagebuilder.version.version1", F_OPTIONAL), ("replaces", "imagebuilder.pkg.ComponentRelation[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.pkg.ComponentSpec", "ImagebuilderPkgComponentSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", 0), ("versionStr", "string", "imagebuilder.version.version1", 0), ("summary", "string", "imagebuilder.version.version1", F_OPTIONAL), ("vendor", "string", "imagebuilder.version.version1", F_OPTIONAL), ("releaseDateTime", "vmodl.DateTime", "imagebuilder.version.version1", F_OPTIONAL), ("sourceUrl", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("Guid", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile", "ImagebuilderPkgImageProfile", "vmodl.DynamicData", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", 0), ("vendor", "string", "imagebuilder.version.version1", 0), ("author", "string", "imagebuilder.version.version1", 0), ("whenCreated", "vmodl.DateTime", "imagebuilder.version.version1", 0), ("whenLastModified", "vmodl.DateTime", "imagebuilder.version.version1", 0), ("description", "string", "imagebuilder.version.version1", F_OPTIONAL), ("read_only", "boolean", "imagebuilder.version.version1", 0), ("viblist", "imagebuilder.pkg.ComponentSpec[]", "imagebuilder.version.version1", F_OPTIONAL), ("acceptanceLevel", "string", "imagebuilder.version.version1", 0), ("serialno", "int", "imagebuilder.version.version1", 0), ("profileId", "string", "imagebuilder.version.version1", 0), ("rules", "imagebuilder.pkg.ImageProfile.ProfileRule[]", "imagebuilder.version.version1", F_OPTIONAL), ("statelessReady", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("bulletinIDs", "string[]", "imagebuilder.version.v7_0", F_OPTIONAL), ("bulletins", "imagebuilder.pkg.ImageProfile.Bulletin[]", "imagebuilder.version.v7_0", F_OPTIONAL), ("baseimageID", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("baseimageJson", "string", "imagebuilder.version.PersonalityManagerESXio", F_OPTIONAL), ("componentsXml", "string[]", "imagebuilder.version.PersonalityManagerESXio", F_OPTIONAL), ("baseimage", "imagebuilder.pkg.ImageProfile.BaseImage", "imagebuilder.version.v7_0", F_OPTIONAL), ("addonId", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("addon", "imagebuilder.pkg.ImageProfile.Addon", "imagebuilder.version.v7_0", F_OPTIONAL), ("reservedComponents", "imagebuilder.pkg.ImageProfile.Bulletin[]", "imagebuilder.version.v7_0", F_OPTIONAL)])
CreateDataType("imagebuilder.pkg.ImageProfile.ProfileRule", "ImagebuilderPkgImageProfileProfileRule", "vmodl.DynamicData", "imagebuilder.version.version1", [("key", "string", "imagebuilder.version.version1", 0), ("values", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateDataType("imagebuilder.pkg.ImageProfile.Bulletin", "ImagebuilderPkgImageProfileBulletin", "vmodl.DynamicData", "imagebuilder.version.v7_0", [("key", "string", "imagebuilder.version.v7_0", 0), ("vendor", "string", "imagebuilder.version.v7_0", 0), ("summary", "string", "imagebuilder.version.v7_0", 0), ("severity", "string", "imagebuilder.version.v7_0", 0), ("urgency", "string", "imagebuilder.version.v7_0", 0), ("category", "string", "imagebuilder.version.v7_0", 0), ("releasetype", "string", "imagebuilder.version.v7_0", 0), ("componentnamespec", "imagebuilder.pkg.ImageProfile.Bulletin.ComponentNameSpec", "imagebuilder.version.v7_0", F_OPTIONAL), ("componentversionspec", "imagebuilder.pkg.ImageProfile.Bulletin.ComponentVersionSpec", "imagebuilder.version.v7_0", F_OPTIONAL), ("description", "string", "imagebuilder.version.v7_0", 0), ("kburl", "string", "imagebuilder.version.v7_0", 0), ("contact", "string", "imagebuilder.version.v7_0", 0), ("releasedate", "vmodl.DateTime", "imagebuilder.version.v7_0", F_OPTIONAL), ("platform", "imagebuilder.pkg.ImageProfile.Bulletin.Platform[]", "imagebuilder.version.v7_0", F_OPTIONAL), ("vibids", "string[]", "imagebuilder.version.v7_0", F_OPTIONAL)])
CreateDataType("imagebuilder.pkg.ImageProfile.Bulletin.ComponentNameSpec", "ImagebuilderPkgImageProfileBulletinComponentNameSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", 0), ("uistring", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile.Bulletin.ComponentVersionSpec", "ImagebuilderPkgImageProfileBulletinComponentVersionSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("version", "string", "imagebuilder.version.version1", 0), ("uistring", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile.Bulletin.Platform", "ImagebuilderPkgImageProfileBulletinPlatform", "vmodl.DynamicData", "imagebuilder.version.version1", [("version", "string", "imagebuilder.version.version1", 0), ("locale", "string", "imagebuilder.version.version1", 0), ("productLineID", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile.ReleaseUnit", "ImagebuilderPkgImageProfileReleaseUnit", "vmodl.DynamicData", "imagebuilder.version.v7_0", [("releaseID", "string", "imagebuilder.version.v7_0", 0), ("releaseType", "string", "imagebuilder.version.v7_0", 0), ("category", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("vendor", "string", "imagebuilder.version.v7_0", 0), ("description", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("summary", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("docURL", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("acceptanceLevel", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("releaseDate", "vmodl.DateTime", "imagebuilder.version.v7_0", F_OPTIONAL), ("schemaVersion", "string", "imagebuilder.version.v7_0", F_OPTIONAL), ("versionSpec", "imagebuilder.pkg.ImageProfile.ReleaseUnit.VersionSpec", "imagebuilder.version.v7_0", 0), ("components", "imagebuilder.pkg.ImageProfile.ReleaseUnit.ComponentSpec[]", "imagebuilder.version.v7_0", F_OPTIONAL)])
CreateDataType("imagebuilder.pkg.ImageProfile.ReleaseUnit.VersionSpec", "ImagebuilderPkgImageProfileReleaseUnitVersionSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("version", "string", "imagebuilder.version.version1", 0), ("uistring", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile.ReleaseUnit.ComponentSpec", "ImagebuilderPkgImageProfileReleaseUnitComponentSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", 0), ("version", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile.ReleaseUnit.NameSpec", "ImagebuilderPkgImageProfileReleaseUnitNameSpec", "vmodl.DynamicData", "imagebuilder.version.version1", [("name", "string", "imagebuilder.version.version1", 0), ("uistring", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.pkg.ImageProfile.BaseImage", "ImagebuilderPkgImageProfileBaseImage", "imagebuilder.pkg.ImageProfile.ReleaseUnit", "imagebuilder.version.v7_0", None)
CreateDataType("imagebuilder.pkg.ImageProfile.Addon", "ImagebuilderPkgImageProfileAddon", "imagebuilder.pkg.ImageProfile.ReleaseUnit", "imagebuilder.version.v7_0", [("nameSpec", "imagebuilder.pkg.ImageProfile.ReleaseUnit.NameSpec", "imagebuilder.version.v7_0", 0), ("removedComponents", "string[]", "imagebuilder.version.v7_0", F_OPTIONAL)])
CreateDataType("imagebuilder.pkg.VibPackageSpec", "ImagebuilderPkgVibPackageSpec", "imagebuilder.pkg.ComponentSpec", "imagebuilder.version.version1", [("acceptanceLevel", "string", "imagebuilder.version.version1", F_OPTIONAL), ("description", "string", "imagebuilder.version.version1", F_OPTIONAL), ("linkedInfo", "imagebuilder.pkg.VibPackageSpec.TaggedUrl[]", "imagebuilder.version.version1", F_OPTIONAL), ("relation", "imagebuilder.pkg.ComponentRelationship", "imagebuilder.version.version1", 0), ("provides", "imagebuilder.pkg.ComponentSpec[]", "imagebuilder.version.version1", F_OPTIONAL), ("minRamdiskMemory", "int", "imagebuilder.version.version1", 0), ("maxRamdiskMemory", "int", "imagebuilder.version.version1", 0), ("liveInstallAllowed", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("liveRemovalAllowed", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("maintenanceModeRequired", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("maintenanceModeNotOnInstall", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("hwplatform", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("channelGuid", "string[]", "imagebuilder.version.version1", F_OPTIONAL), ("statelessReady", "boolean", "imagebuilder.version.version1", F_OPTIONAL), ("swTags", "string[]", "imagebuilder.version.version1", F_OPTIONAL)])
CreateEnumType("imagebuilder.pkg.VibPackageSpec.AcceptanceLevel", "ImagebuilderPkgVibPackageSpecAcceptanceLevel", "imagebuilder.version.version1", ["VMwareCertified", "VMwareAccepted", "PartnerSupported", "CommunitySupported"])
CreateDataType("imagebuilder.pkg.VibPackageSpec.TaggedUrl", "ImagebuilderPkgVibPackageSpecTaggedUrl", "vmodl.DynamicData", "imagebuilder.version.version1", [("tag", "string", "imagebuilder.version.version1", 0), ("url", "string", "imagebuilder.version.version1", 0)])
CreateDataType("imagebuilder.fault.CannotAccessFile", "ImagebuilderFaultCannotAccessFile", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.CannotAccessNetwork", "ImagebuilderFaultCannotAccessNetwork", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.CompositionFault", "ImagebuilderFaultCompositionFault", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.DatabaseError", "ImagebuilderFaultDatabaseError", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.DatabaseTaskError", "ImagebuilderFaultDatabaseTaskError", "imagebuilder.fault.IbTaskFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.DuplicateDepot", "ImagebuilderFaultDuplicateDepot", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.DuplicateDepotTask", "ImagebuilderFaultDuplicateDepotTask", "imagebuilder.fault.IbTaskFault", "imagebuilder.version.version1", None)
CreateDataType("imagebuilder.fault.FileAlreadyExists", "ImagebuilderFaultFileAlreadyExists", "imagebuilder.fault.IbFault", "imagebuilder.version.version1", None)
