from pyVmomi.VmomiSupport import CreateDataType, CreateManagedType, CreateEnumType, AddVersion, AddVersionParent, F_LINK, F_LINKABLE, F_OPTIONAL, F_SECRET, newestVersions, publicVersions

VSAN_INIT_VERSION = "vsan.version.version3"
AddVersion("vsan.version.version3", "vsan", "6.6", ("vsan.version.version3" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version3", "vim.version.version9")
AddVersionParent("vsan.version.version3", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version3", "vim.version.version2")
AddVersionParent("vsan.version.version3", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version3", "vim.version.version5")
AddVersionParent("vsan.version.version3", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version3", "vim.version.version11")
AddVersionParent("vsan.version.version3", "vmodl.version.version0")
AddVersionParent("vsan.version.version3", "vmodl.version.version2")
AddVersionParent("vsan.version.version3", "vim.version.version8")
AddVersionParent("vsan.version.version3", "vsan.version.version3")
AddVersionParent("vsan.version.version3", "vim.version.version1")
AddVersionParent("vsan.version.version3", "vim.version.version4")
AddVersionParent("vsan.version.version3", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version3", "vim.version.version3")
AddVersionParent("vsan.version.version3", "vim.version.version7")
AddVersionParent("vsan.version.version3", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version3", "vim.version.version6")
AddVersionParent("vsan.version.version3", "vim.version.version10")
AddVersionParent("vsan.version.version3", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version3", "vmodl.version.version1")
AddVersion("vsan.version.version4", "vsan", "6.6.1", ("vsan.version.version4" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version4", "vim.version.version9")
AddVersionParent("vsan.version.version4", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version4", "vim.version.version2")
AddVersionParent("vsan.version.version4", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version4", "vim.version.version5")
AddVersionParent("vsan.version.version4", "vsan.version.version4")
AddVersionParent("vsan.version.version4", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version4", "vim.version.version11")
AddVersionParent("vsan.version.version4", "vmodl.version.version0")
AddVersionParent("vsan.version.version4", "vmodl.version.version2")
AddVersionParent("vsan.version.version4", "vim.version.version8")
AddVersionParent("vsan.version.version4", "vsan.version.version3")
AddVersionParent("vsan.version.version4", "vim.version.version1")
AddVersionParent("vsan.version.version4", "vim.version.version4")
AddVersionParent("vsan.version.version4", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version4", "vim.version.version3")
AddVersionParent("vsan.version.version4", "vim.version.version7")
AddVersionParent("vsan.version.version4", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version4", "vim.version.version6")
AddVersionParent("vsan.version.version4", "vim.version.version10")
AddVersionParent("vsan.version.version4", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version4", "vmodl.version.version1")
AddVersion("vsan.version.version5", "vsan", "6.6.2", ("vsan.version.version5" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version5", "vim.version.version9")
AddVersionParent("vsan.version.version5", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version5", "vim.version.version2")
AddVersionParent("vsan.version.version5", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version5", "vim.version.version5")
AddVersionParent("vsan.version.version5", "vsan.version.version4")
AddVersionParent("vsan.version.version5", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version5", "vim.version.version11")
AddVersionParent("vsan.version.version5", "vmodl.version.version0")
AddVersionParent("vsan.version.version5", "vmodl.version.version2")
AddVersionParent("vsan.version.version5", "vim.version.version8")
AddVersionParent("vsan.version.version5", "vsan.version.version3")
AddVersionParent("vsan.version.version5", "vim.version.version1")
AddVersionParent("vsan.version.version5", "vim.version.version4")
AddVersionParent("vsan.version.version5", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version5", "vim.version.version3")
AddVersionParent("vsan.version.version5", "vim.version.version7")
AddVersionParent("vsan.version.version5", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version5", "vsan.version.version5")
AddVersionParent("vsan.version.version5", "vim.version.version6")
AddVersionParent("vsan.version.version5", "vim.version.version10")
AddVersionParent("vsan.version.version5", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version5", "vmodl.version.version1")
AddVersion("vsan.version.version6", "vsan", "6.7.0", ("vsan.version.version6" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version6", "vim.version.version9")
AddVersionParent("vsan.version.version6", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version6", "vim.version.version2")
AddVersionParent("vsan.version.version6", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version6", "vim.version.version5")
AddVersionParent("vsan.version.version6", "vsan.version.version4")
AddVersionParent("vsan.version.version6", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version6", "vim.version.version11")
AddVersionParent("vsan.version.version6", "vmodl.version.version0")
AddVersionParent("vsan.version.version6", "vmodl.version.version2")
AddVersionParent("vsan.version.version6", "vim.version.version8")
AddVersionParent("vsan.version.version6", "vsan.version.version3")
AddVersionParent("vsan.version.version6", "vim.version.version1")
AddVersionParent("vsan.version.version6", "vim.version.version4")
AddVersionParent("vsan.version.version6", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version6", "vim.version.version3")
AddVersionParent("vsan.version.version6", "vim.version.version7")
AddVersionParent("vsan.version.version6", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version6", "vsan.version.version5")
AddVersionParent("vsan.version.version6", "vsan.version.version6")
AddVersionParent("vsan.version.version6", "vim.version.version6")
AddVersionParent("vsan.version.version6", "vim.version.version10")
AddVersionParent("vsan.version.version6", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version6", "vmodl.version.version1")
AddVersion("vsan.version.version7", "vsan", "6.7", ("vsan.version.version7" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version7", "vim.version.version9")
AddVersionParent("vsan.version.version7", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version7", "vsan.version.version7")
AddVersionParent("vsan.version.version7", "vim.version.version2")
AddVersionParent("vsan.version.version7", "vim.version.version12")
AddVersionParent("vsan.version.version7", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version7", "vim.version.version5")
AddVersionParent("vsan.version.version7", "vsan.version.version4")
AddVersionParent("vsan.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version7", "vim.version.version11")
AddVersionParent("vsan.version.version7", "vmodl.version.version0")
AddVersionParent("vsan.version.version7", "vmodl.version.version2")
AddVersionParent("vsan.version.version7", "vim.version.version8")
AddVersionParent("vsan.version.version7", "vsan.version.version3")
AddVersionParent("vsan.version.version7", "vim.version.version1")
AddVersionParent("vsan.version.version7", "vim.version.version4")
AddVersionParent("vsan.version.version7", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version7", "vim.version.version3")
AddVersionParent("vsan.version.version7", "vim.version.version7")
AddVersionParent("vsan.version.version7", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version7", "vsan.version.version5")
AddVersionParent("vsan.version.version7", "vsan.version.version6")
AddVersionParent("vsan.version.version7", "vim.version.version6")
AddVersionParent("vsan.version.version7", "vim.version.version10")
AddVersionParent("vsan.version.version7", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version7", "vmodl.version.version1")
AddVersion("vsan.version.version8", "vsan", "VMC M5", ("vsan.version.version8" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version8", "vim.version.version9")
AddVersionParent("vsan.version.version8", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version8", "vsan.version.version7")
AddVersionParent("vsan.version.version8", "vim.version.version2")
AddVersionParent("vsan.version.version8", "vim.version.version12")
AddVersionParent("vsan.version.version8", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version8", "vim.version.version5")
AddVersionParent("vsan.version.version8", "vsan.version.version4")
AddVersionParent("vsan.version.version8", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version8", "vim.version.version11")
AddVersionParent("vsan.version.version8", "vmodl.version.version0")
AddVersionParent("vsan.version.version8", "vmodl.version.version2")
AddVersionParent("vsan.version.version8", "vsan.version.version8")
AddVersionParent("vsan.version.version8", "vim.version.version8")
AddVersionParent("vsan.version.version8", "vsan.version.version3")
AddVersionParent("vsan.version.version8", "vim.version.version1")
AddVersionParent("vsan.version.version8", "vim.version.version4")
AddVersionParent("vsan.version.version8", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version8", "vim.version.version3")
AddVersionParent("vsan.version.version8", "vim.version.version7")
AddVersionParent("vsan.version.version8", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version8", "vsan.version.version5")
AddVersionParent("vsan.version.version8", "vsan.version.version6")
AddVersionParent("vsan.version.version8", "vim.version.version6")
AddVersionParent("vsan.version.version8", "vim.version.version10")
AddVersionParent("vsan.version.version8", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version8", "vmodl.version.version1")
AddVersion("vsan.version.version9", "vsan", "vSAN 6.7U1", ("vsan.version.version9" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version9", "vim.version.version9")
AddVersionParent("vsan.version.version9", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version9", "vsan.version.version7")
AddVersionParent("vsan.version.version9", "vim.version.version2")
AddVersionParent("vsan.version.version9", "vim.version.version12")
AddVersionParent("vsan.version.version9", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version9", "vim.version.version5")
AddVersionParent("vsan.version.version9", "vsan.version.version4")
AddVersionParent("vsan.version.version9", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version9", "vim.version.version11")
AddVersionParent("vsan.version.version9", "vmodl.version.version0")
AddVersionParent("vsan.version.version9", "vmodl.version.version2")
AddVersionParent("vsan.version.version9", "vsan.version.version8")
AddVersionParent("vsan.version.version9", "vim.version.version8")
AddVersionParent("vsan.version.version9", "vsan.version.version3")
AddVersionParent("vsan.version.version9", "vim.version.version1")
AddVersionParent("vsan.version.version9", "vim.version.version4")
AddVersionParent("vsan.version.version9", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version9", "vim.version.version13")
AddVersionParent("vsan.version.version9", "vim.version.version3")
AddVersionParent("vsan.version.version9", "vim.version.version7")
AddVersionParent("vsan.version.version9", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version9", "vsan.version.version9")
AddVersionParent("vsan.version.version9", "vsan.version.version5")
AddVersionParent("vsan.version.version9", "vsan.version.version6")
AddVersionParent("vsan.version.version9", "vim.version.version6")
AddVersionParent("vsan.version.version9", "vim.version.version10")
AddVersionParent("vsan.version.version9", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version9", "vmodl.version.version1")
AddVersion("vsan.version.version10", "vsan", "6.8.7", ("vsan.version.version10" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version10", "vim.version.version9")
AddVersionParent("vsan.version.version10", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version10", "vsan.version.version7")
AddVersionParent("vsan.version.version10", "vim.version.version2")
AddVersionParent("vsan.version.version10", "vim.version.version12")
AddVersionParent("vsan.version.version10", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version10", "vim.version.version5")
AddVersionParent("vsan.version.version10", "vsan.version.version4")
AddVersionParent("vsan.version.version10", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version10", "vim.version.version11")
AddVersionParent("vsan.version.version10", "vmodl.version.version0")
AddVersionParent("vsan.version.version10", "vmodl.version.version2")
AddVersionParent("vsan.version.version10", "vsan.version.version8")
AddVersionParent("vsan.version.version10", "vim.version.version8")
AddVersionParent("vsan.version.version10", "vsan.version.version3")
AddVersionParent("vsan.version.version10", "vim.version.version1")
AddVersionParent("vsan.version.version10", "vim.version.version4")
AddVersionParent("vsan.version.version10", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version10", "vim.version.version13")
AddVersionParent("vsan.version.version10", "vim.version.version3")
AddVersionParent("vsan.version.version10", "vsan.version.version10")
AddVersionParent("vsan.version.version10", "vim.version.version7")
AddVersionParent("vsan.version.version10", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version10", "vsan.version.version9")
AddVersionParent("vsan.version.version10", "vsan.version.version5")
AddVersionParent("vsan.version.version10", "vsan.version.version6")
AddVersionParent("vsan.version.version10", "vim.version.version6")
AddVersionParent("vsan.version.version10", "vim.version.version10")
AddVersionParent("vsan.version.version10", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version10", "vmodl.version.version1")
AddVersion("vsan.version.version11", "vsan", "vSAN 6.7U3", ("vsan.version.version11" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version11", "vim.version.version9")
AddVersionParent("vsan.version.version11", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version11", "vsan.version.version7")
AddVersionParent("vsan.version.version11", "vim.version.version2")
AddVersionParent("vsan.version.version11", "vim.version.version12")
AddVersionParent("vsan.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version11", "vim.version.version5")
AddVersionParent("vsan.version.version11", "vsan.version.version4")
AddVersionParent("vsan.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version11", "vim.version.version11")
AddVersionParent("vsan.version.version11", "vmodl.version.version0")
AddVersionParent("vsan.version.version11", "vmodl.version.version2")
AddVersionParent("vsan.version.version11", "vsan.version.version8")
AddVersionParent("vsan.version.version11", "vim.version.version8")
AddVersionParent("vsan.version.version11", "vsan.version.version3")
AddVersionParent("vsan.version.version11", "vim.version.version1")
AddVersionParent("vsan.version.version11", "vim.version.version4")
AddVersionParent("vsan.version.version11", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version11", "vim.version.version13")
AddVersionParent("vsan.version.version11", "vim.version.version3")
AddVersionParent("vsan.version.version11", "vsan.version.version10")
AddVersionParent("vsan.version.version11", "vim.version.version7")
AddVersionParent("vsan.version.version11", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version11", "vsan.version.version9")
AddVersionParent("vsan.version.version11", "vsan.version.version5")
AddVersionParent("vsan.version.version11", "vsan.version.version6")
AddVersionParent("vsan.version.version11", "vim.version.version6")
AddVersionParent("vsan.version.version11", "vim.version.version10")
AddVersionParent("vsan.version.version11", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version11", "vmodl.version.version1")
AddVersionParent("vsan.version.version11", "vsan.version.version11")
AddVersion("vsan.version.version12", "vsan", "7.0", ("vsan.version.version12" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version12", "vim.version.version9")
AddVersionParent("vsan.version.version12", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version12", "vsan.version.version7")
AddVersionParent("vsan.version.version12", "vim.version.version2")
AddVersionParent("vsan.version.version12", "vim.version.version12")
AddVersionParent("vsan.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version12", "vim.version.version5")
AddVersionParent("vsan.version.version12", "vsan.version.version4")
AddVersionParent("vsan.version.version12", "vsan.version.version12")
AddVersionParent("vsan.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version12", "vim.version.version11")
AddVersionParent("vsan.version.version12", "vmodl.version.version0")
AddVersionParent("vsan.version.version12", "vmodl.version.version2")
AddVersionParent("vsan.version.version12", "vsan.version.version8")
AddVersionParent("vsan.version.version12", "vim.version.version8")
AddVersionParent("vsan.version.version12", "vsan.version.version3")
AddVersionParent("vsan.version.version12", "vim.version.version1")
AddVersionParent("vsan.version.version12", "vim.version.version4")
AddVersionParent("vsan.version.version12", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version12", "vim.version.version13")
AddVersionParent("vsan.version.version12", "vim.version.version3")
AddVersionParent("vsan.version.version12", "vsan.version.version10")
AddVersionParent("vsan.version.version12", "vim.version.version7")
AddVersionParent("vsan.version.version12", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version12", "vsan.version.version9")
AddVersionParent("vsan.version.version12", "vsan.version.version5")
AddVersionParent("vsan.version.version12", "vsan.version.version6")
AddVersionParent("vsan.version.version12", "vim.version.version6")
AddVersionParent("vsan.version.version12", "vim.version.version10")
AddVersionParent("vsan.version.version12", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version12", "vmodl.version.version1")
AddVersionParent("vsan.version.version12", "vsan.version.version11")
AddVersion("vsan.version.version13", "vsan", "7.1", ("vsan.version.version13" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version13", "vim.version.version9")
AddVersionParent("vsan.version.version13", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version13", "vsan.version.version7")
AddVersionParent("vsan.version.version13", "vim.version.version2")
AddVersionParent("vsan.version.version13", "vim.version.version12")
AddVersionParent("vsan.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version13", "vim.version.version5")
AddVersionParent("vsan.version.version13", "vsan.version.version4")
AddVersionParent("vsan.version.version13", "vsan.version.version12")
AddVersionParent("vsan.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version13", "vmodl.version.version0")
AddVersionParent("vsan.version.version13", "vim.version.version11")
AddVersionParent("vsan.version.version13", "vmodl.version.version2")
AddVersionParent("vsan.version.version13", "vsan.version.version8")
AddVersionParent("vsan.version.version13", "vim.version.version8")
AddVersionParent("vsan.version.version13", "vsan.version.version3")
AddVersionParent("vsan.version.version13", "vsan.version.version13")
AddVersionParent("vsan.version.version13", "vim.version.version1")
AddVersionParent("vsan.version.version13", "vim.version.version4")
AddVersionParent("vsan.version.version13", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version13", "vim.version.version13")
AddVersionParent("vsan.version.version13", "vim.version.version3")
AddVersionParent("vsan.version.version13", "vsan.version.version10")
AddVersionParent("vsan.version.version13", "vim.version.version7")
AddVersionParent("vsan.version.version13", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version13", "vsan.version.version9")
AddVersionParent("vsan.version.version13", "vsan.version.version5")
AddVersionParent("vsan.version.version13", "vsan.version.version6")
AddVersionParent("vsan.version.version13", "vim.version.version6")
AddVersionParent("vsan.version.version13", "vim.version.version10")
AddVersionParent("vsan.version.version13", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version13", "vmodl.version.version1")
AddVersionParent("vsan.version.version13", "vsan.version.version11")
AddVersion("vsan.version.version14", "vsan", "7.2", ("vsan.version.version14" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version14", "vim.version.version9")
AddVersionParent("vsan.version.version14", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version14", "vsan.version.version7")
AddVersionParent("vsan.version.version14", "vim.version.version2")
AddVersionParent("vsan.version.version14", "vim.version.version12")
AddVersionParent("vsan.version.version14", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version14", "vim.version.version5")
AddVersionParent("vsan.version.version14", "vsan.version.version4")
AddVersionParent("vsan.version.version14", "vsan.version.version12")
AddVersionParent("vsan.version.version14", "vsan.version.version14")
AddVersionParent("vsan.version.version14", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version14", "vmodl.version.version0")
AddVersionParent("vsan.version.version14", "vim.version.version11")
AddVersionParent("vsan.version.version14", "vmodl.version.version2")
AddVersionParent("vsan.version.version14", "vsan.version.version8")
AddVersionParent("vsan.version.version14", "vim.version.version8")
AddVersionParent("vsan.version.version14", "vsan.version.version3")
AddVersionParent("vsan.version.version14", "vsan.version.version13")
AddVersionParent("vsan.version.version14", "vim.version.version1")
AddVersionParent("vsan.version.version14", "vim.version.version4")
AddVersionParent("vsan.version.version14", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version14", "vim.version.version13")
AddVersionParent("vsan.version.version14", "vim.version.version3")
AddVersionParent("vsan.version.version14", "vsan.version.version10")
AddVersionParent("vsan.version.version14", "vim.version.version7")
AddVersionParent("vsan.version.version14", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version14", "vsan.version.version9")
AddVersionParent("vsan.version.version14", "vsan.version.version5")
AddVersionParent("vsan.version.version14", "vsan.version.version6")
AddVersionParent("vsan.version.version14", "vim.version.version6")
AddVersionParent("vsan.version.version14", "vim.version.version10")
AddVersionParent("vsan.version.version14", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version14", "vmodl.version.version1")
AddVersionParent("vsan.version.version14", "vsan.version.version11")
AddVersion("vsan.version.version15", "vsan", "vSAN 7.0U1", ("vsan.version.version15" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version15", "vim.version.version9")
AddVersionParent("vsan.version.version15", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version15", "vsan.version.version7")
AddVersionParent("vsan.version.version15", "vim.version.version2")
AddVersionParent("vsan.version.version15", "vim.version.version12")
AddVersionParent("vsan.version.version15", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version15", "vim.version.version5")
AddVersionParent("vsan.version.version15", "vsan.version.version4")
AddVersionParent("vsan.version.version15", "vsan.version.version12")
AddVersionParent("vsan.version.version15", "vsan.version.version14")
AddVersionParent("vsan.version.version15", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version15", "vmodl.version.version0")
AddVersionParent("vsan.version.version15", "vim.version.version11")
AddVersionParent("vsan.version.version15", "vmodl.version.version2")
AddVersionParent("vsan.version.version15", "vsan.version.version8")
AddVersionParent("vsan.version.version15", "vim.version.version8")
AddVersionParent("vsan.version.version15", "vsan.version.version3")
AddVersionParent("vsan.version.version15", "vsan.version.version15")
AddVersionParent("vsan.version.version15", "vsan.version.version13")
AddVersionParent("vsan.version.version15", "vim.version.version1")
AddVersionParent("vsan.version.version15", "vim.version.version4")
AddVersionParent("vsan.version.version15", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version15", "vim.version.version13")
AddVersionParent("vsan.version.version15", "vim.version.version3")
AddVersionParent("vsan.version.version15", "vsan.version.version10")
AddVersionParent("vsan.version.version15", "vim.version.version7")
AddVersionParent("vsan.version.version15", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version15", "vsan.version.version9")
AddVersionParent("vsan.version.version15", "vsan.version.version5")
AddVersionParent("vsan.version.version15", "vsan.version.version6")
AddVersionParent("vsan.version.version15", "vim.version.version6")
AddVersionParent("vsan.version.version15", "vim.version.version10")
AddVersionParent("vsan.version.version15", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version15", "vmodl.version.version1")
AddVersionParent("vsan.version.version15", "vsan.version.version11")
AddVersion("vsan.version.version16", "vsan", "vSAN 7.0U2", ("vsan.version.version16" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version16", "vim.version.version9")
AddVersionParent("vsan.version.version16", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version16", "vsan.version.version7")
AddVersionParent("vsan.version.version16", "vim.version.version2")
AddVersionParent("vsan.version.version16", "vim.version.version12")
AddVersionParent("vsan.version.version16", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version16", "vim.version.version5")
AddVersionParent("vsan.version.version16", "vsan.version.version4")
AddVersionParent("vsan.version.version16", "vsan.version.version12")
AddVersionParent("vsan.version.version16", "vsan.version.version14")
AddVersionParent("vsan.version.version16", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version16", "vmodl.version.version0")
AddVersionParent("vsan.version.version16", "vim.version.version11")
AddVersionParent("vsan.version.version16", "vmodl.version.version2")
AddVersionParent("vsan.version.version16", "vsan.version.version8")
AddVersionParent("vsan.version.version16", "vim.version.version8")
AddVersionParent("vsan.version.version16", "vsan.version.version3")
AddVersionParent("vsan.version.version16", "vsan.version.version15")
AddVersionParent("vsan.version.version16", "vsan.version.version13")
AddVersionParent("vsan.version.version16", "vim.version.version1")
AddVersionParent("vsan.version.version16", "vim.version.version4")
AddVersionParent("vsan.version.version16", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version16", "vim.version.version13")
AddVersionParent("vsan.version.version16", "vim.version.version3")
AddVersionParent("vsan.version.version16", "vsan.version.version10")
AddVersionParent("vsan.version.version16", "vim.version.version7")
AddVersionParent("vsan.version.version16", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version16", "vsan.version.version9")
AddVersionParent("vsan.version.version16", "vsan.version.version5")
AddVersionParent("vsan.version.version16", "vsan.version.version6")
AddVersionParent("vsan.version.version16", "vsan.version.version16")
AddVersionParent("vsan.version.version16", "vim.version.version6")
AddVersionParent("vsan.version.version16", "vim.version.version10")
AddVersionParent("vsan.version.version16", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version16", "vmodl.version.version1")
AddVersionParent("vsan.version.version16", "vsan.version.version11")
AddVersion("vsan.version.version17", "vsan", "7.3", ("vsan.version.version17" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version17", "vim.version.version9")
AddVersionParent("vsan.version.version17", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version17", "vsan.version.version7")
AddVersionParent("vsan.version.version17", "vim.version.version2")
AddVersionParent("vsan.version.version17", "vim.version.version12")
AddVersionParent("vsan.version.version17", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version17", "vim.version.version5")
AddVersionParent("vsan.version.version17", "vsan.version.version4")
AddVersionParent("vsan.version.version17", "vsan.version.version12")
AddVersionParent("vsan.version.version17", "vsan.version.version14")
AddVersionParent("vsan.version.version17", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version17", "vmodl.version.version0")
AddVersionParent("vsan.version.version17", "vim.version.version11")
AddVersionParent("vsan.version.version17", "vmodl.version.version2")
AddVersionParent("vsan.version.version17", "vsan.version.version8")
AddVersionParent("vsan.version.version17", "vim.version.version8")
AddVersionParent("vsan.version.version17", "vsan.version.version3")
AddVersionParent("vsan.version.version17", "vsan.version.version15")
AddVersionParent("vsan.version.version17", "vsan.version.version13")
AddVersionParent("vsan.version.version17", "vim.version.version1")
AddVersionParent("vsan.version.version17", "vim.version.version4")
AddVersionParent("vsan.version.version17", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version17", "vim.version.version13")
AddVersionParent("vsan.version.version17", "vim.version.version3")
AddVersionParent("vsan.version.version17", "vsan.version.version10")
AddVersionParent("vsan.version.version17", "vim.version.version7")
AddVersionParent("vsan.version.version17", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version17", "vsan.version.version9")
AddVersionParent("vsan.version.version17", "vsan.version.version5")
AddVersionParent("vsan.version.version17", "vsan.version.version17")
AddVersionParent("vsan.version.version17", "vsan.version.version6")
AddVersionParent("vsan.version.version17", "vsan.version.version16")
AddVersionParent("vsan.version.version17", "vim.version.version6")
AddVersionParent("vsan.version.version17", "vim.version.version10")
AddVersionParent("vsan.version.version17", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version17", "vmodl.version.version1")
AddVersionParent("vsan.version.version17", "vsan.version.version11")
AddVersion("vsan.version.version18", "vsan", "vSAN 7.0U3", ("vsan.version.version18" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version18", "vim.version.version9")
AddVersionParent("vsan.version.version18", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version18", "vsan.version.version7")
AddVersionParent("vsan.version.version18", "vim.version.version2")
AddVersionParent("vsan.version.version18", "vim.version.version12")
AddVersionParent("vsan.version.version18", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version18", "vim.version.version5")
AddVersionParent("vsan.version.version18", "vsan.version.version4")
AddVersionParent("vsan.version.version18", "vsan.version.version12")
AddVersionParent("vsan.version.version18", "vsan.version.version14")
AddVersionParent("vsan.version.version18", "vsan.version.version18")
AddVersionParent("vsan.version.version18", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version18", "vmodl.version.version0")
AddVersionParent("vsan.version.version18", "vim.version.version11")
AddVersionParent("vsan.version.version18", "vmodl.version.version2")
AddVersionParent("vsan.version.version18", "vsan.version.version8")
AddVersionParent("vsan.version.version18", "vim.version.version8")
AddVersionParent("vsan.version.version18", "vsan.version.version3")
AddVersionParent("vsan.version.version18", "vsan.version.version15")
AddVersionParent("vsan.version.version18", "vsan.version.version13")
AddVersionParent("vsan.version.version18", "vim.version.version1")
AddVersionParent("vsan.version.version18", "vim.version.version4")
AddVersionParent("vsan.version.version18", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version18", "vim.version.version13")
AddVersionParent("vsan.version.version18", "vim.version.version3")
AddVersionParent("vsan.version.version18", "vsan.version.version10")
AddVersionParent("vsan.version.version18", "vim.version.version7")
AddVersionParent("vsan.version.version18", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version18", "vsan.version.version9")
AddVersionParent("vsan.version.version18", "vsan.version.version5")
AddVersionParent("vsan.version.version18", "vsan.version.version17")
AddVersionParent("vsan.version.version18", "vsan.version.version6")
AddVersionParent("vsan.version.version18", "vsan.version.version16")
AddVersionParent("vsan.version.version18", "vim.version.version6")
AddVersionParent("vsan.version.version18", "vim.version.version10")
AddVersionParent("vsan.version.version18", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version18", "vmodl.version.version1")
AddVersionParent("vsan.version.version18", "vsan.version.version11")
AddVersion("vsan.version.version19", "vsan", "7.4", ("vsan.version.version19" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version19", "vim.version.version9")
AddVersionParent("vsan.version.version19", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version19", "vsan.version.version7")
AddVersionParent("vsan.version.version19", "vim.version.version2")
AddVersionParent("vsan.version.version19", "vim.version.version12")
AddVersionParent("vsan.version.version19", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version19", "vim.version.version5")
AddVersionParent("vsan.version.version19", "vsan.version.version4")
AddVersionParent("vsan.version.version19", "vsan.version.version12")
AddVersionParent("vsan.version.version19", "vsan.version.version14")
AddVersionParent("vsan.version.version19", "vsan.version.version18")
AddVersionParent("vsan.version.version19", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version19", "vmodl.version.version0")
AddVersionParent("vsan.version.version19", "vim.version.version11")
AddVersionParent("vsan.version.version19", "vmodl.version.version2")
AddVersionParent("vsan.version.version19", "vsan.version.version8")
AddVersionParent("vsan.version.version19", "vim.version.version8")
AddVersionParent("vsan.version.version19", "vsan.version.version3")
AddVersionParent("vsan.version.version19", "vsan.version.version15")
AddVersionParent("vsan.version.version19", "vsan.version.version13")
AddVersionParent("vsan.version.version19", "vim.version.version1")
AddVersionParent("vsan.version.version19", "vim.version.version4")
AddVersionParent("vsan.version.version19", "vsan.version.version19")
AddVersionParent("vsan.version.version19", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version19", "vim.version.version13")
AddVersionParent("vsan.version.version19", "vim.version.version3")
AddVersionParent("vsan.version.version19", "vsan.version.version10")
AddVersionParent("vsan.version.version19", "vim.version.version7")
AddVersionParent("vsan.version.version19", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version19", "vsan.version.version9")
AddVersionParent("vsan.version.version19", "vsan.version.version5")
AddVersionParent("vsan.version.version19", "vsan.version.version17")
AddVersionParent("vsan.version.version19", "vsan.version.version6")
AddVersionParent("vsan.version.version19", "vsan.version.version16")
AddVersionParent("vsan.version.version19", "vim.version.version6")
AddVersionParent("vsan.version.version19", "vim.version.version10")
AddVersionParent("vsan.version.version19", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version19", "vmodl.version.version1")
AddVersionParent("vsan.version.version19", "vsan.version.version11")
AddVersion("vsan.version.version20", "vsan", "8.0", ("vsan.version.version20" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version20", "vim.version.version9")
AddVersionParent("vsan.version.version20", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version20", "vsan.version.version7")
AddVersionParent("vsan.version.version20", "vim.version.version2")
AddVersionParent("vsan.version.version20", "vim.version.version14")
AddVersionParent("vsan.version.version20", "vim.version.version12")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_3_1")
AddVersionParent("vsan.version.version20", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version20", "vim.version.version5")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_1_0")
AddVersionParent("vsan.version.version20", "vsan.version.version4")
AddVersionParent("vsan.version.version20", "vsan.version.version12")
AddVersionParent("vsan.version.version20", "vsan.version.version14")
AddVersionParent("vsan.version.version20", "vsan.version.version18")
AddVersionParent("vsan.version.version20", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version20", "vmodl.version.version0")
AddVersionParent("vsan.version.version20", "vim.version.version11")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_0_2")
AddVersionParent("vsan.version.version20", "vmodl.version.version2")
AddVersionParent("vsan.version.version20", "vsan.version.version8")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_2_0")
AddVersionParent("vsan.version.version20", "vim.version.version8")
AddVersionParent("vsan.version.version20", "vim.version.v7_0")
AddVersionParent("vsan.version.version20", "vsan.version.version3")
AddVersionParent("vsan.version.version20", "vsan.version.version15")
AddVersionParent("vsan.version.version20", "vim.version.v6_8_7")
AddVersionParent("vsan.version.version20", "vsan.version.version13")
AddVersionParent("vsan.version.version20", "vim.version.version1")
AddVersionParent("vsan.version.version20", "vim.version.version4")
AddVersionParent("vsan.version.version20", "vsan.version.version19")
AddVersionParent("vsan.version.version20", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_3_0")
AddVersionParent("vsan.version.version20", "vim.version.version13")
AddVersionParent("vsan.version.version20", "vsan.version.version20")
AddVersionParent("vsan.version.version20", "vim.version.version3")
AddVersionParent("vsan.version.version20", "vsan.version.version10")
AddVersionParent("vsan.version.version20", "vim.version.version7")
AddVersionParent("vsan.version.version20", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version20", "vsan.version.version9")
AddVersionParent("vsan.version.version20", "vsan.version.version5")
AddVersionParent("vsan.version.version20", "vim.version.v6_9_1")
AddVersionParent("vsan.version.version20", "vsan.version.version17")
AddVersionParent("vsan.version.version20", "vsan.version.version6")
AddVersionParent("vsan.version.version20", "vim.version.version15")
AddVersionParent("vsan.version.version20", "vsan.version.version16")
AddVersionParent("vsan.version.version20", "vim.version.version6")
AddVersionParent("vsan.version.version20", "vim.version.version10")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_3_2")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_1_1")
AddVersionParent("vsan.version.version20", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version20", "vmodl.version.version1")
AddVersionParent("vsan.version.version20", "vsan.version.version11")
AddVersionParent("vsan.version.version20", "vim.version.v7_0_2_1")
AddVersion("vsan.version.version21", "vsan", "dev.version", ("vsan.version.version21" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version21", "vim.version.version9")
AddVersionParent("vsan.version.version21", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version21", "vsan.version.version7")
AddVersionParent("vsan.version.version21", "vim.version.version2")
AddVersionParent("vsan.version.version21", "vim.version.version14")
AddVersionParent("vsan.version.version21", "vsan.version.version21")
AddVersionParent("vsan.version.version21", "vim.version.version12")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_3_1")
AddVersionParent("vsan.version.version21", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version21", "vim.version.version5")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_1_0")
AddVersionParent("vsan.version.version21", "vsan.version.version4")
AddVersionParent("vsan.version.version21", "vsan.version.version12")
AddVersionParent("vsan.version.version21", "vsan.version.version14")
AddVersionParent("vsan.version.version21", "vsan.version.version18")
AddVersionParent("vsan.version.version21", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version21", "vmodl.version.version0")
AddVersionParent("vsan.version.version21", "vim.version.version11")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_0_2")
AddVersionParent("vsan.version.version21", "vmodl.version.version2")
AddVersionParent("vsan.version.version21", "vsan.version.version8")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_2_0")
AddVersionParent("vsan.version.version21", "vim.version.version8")
AddVersionParent("vsan.version.version21", "vim.version.v7_0")
AddVersionParent("vsan.version.version21", "vsan.version.version3")
AddVersionParent("vsan.version.version21", "vsan.version.version15")
AddVersionParent("vsan.version.version21", "vim.version.v6_8_7")
AddVersionParent("vsan.version.version21", "vsan.version.version13")
AddVersionParent("vsan.version.version21", "vim.version.version1")
AddVersionParent("vsan.version.version21", "vim.version.version4")
AddVersionParent("vsan.version.version21", "vsan.version.version19")
AddVersionParent("vsan.version.version21", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_3_0")
AddVersionParent("vsan.version.version21", "vim.version.version13")
AddVersionParent("vsan.version.version21", "vsan.version.version20")
AddVersionParent("vsan.version.version21", "vim.version.version3")
AddVersionParent("vsan.version.version21", "vsan.version.version10")
AddVersionParent("vsan.version.version21", "vim.version.version7")
AddVersionParent("vsan.version.version21", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version21", "vsan.version.version9")
AddVersionParent("vsan.version.version21", "vsan.version.version5")
AddVersionParent("vsan.version.version21", "vim.version.v6_9_1")
AddVersionParent("vsan.version.version21", "vsan.version.version17")
AddVersionParent("vsan.version.version21", "vsan.version.version6")
AddVersionParent("vsan.version.version21", "vim.version.version15")
AddVersionParent("vsan.version.version21", "vsan.version.version16")
AddVersionParent("vsan.version.version21", "vim.version.version6")
AddVersionParent("vsan.version.version21", "vim.version.version10")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_3_2")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_1_1")
AddVersionParent("vsan.version.version21", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version21", "vmodl.version.version1")
AddVersionParent("vsan.version.version21", "vsan.version.version11")
AddVersionParent("vsan.version.version21", "vim.version.v7_0_2_1")
AddVersion("vsan.version.version22", "vsan", "reserved", ("vsan.version.version22" == VSAN_INIT_VERSION), "vsan")
AddVersionParent("vsan.version.version22", "vim.version.version9")
AddVersionParent("vsan.version.version22", "vmodl.query.version.version2")
AddVersionParent("vsan.version.version22", "vsan.version.version7")
AddVersionParent("vsan.version.version22", "vim.version.version2")
AddVersionParent("vsan.version.version22", "vim.version.version14")
AddVersionParent("vsan.version.version22", "vsan.version.version21")
AddVersionParent("vsan.version.version22", "vim.version.version12")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_3_1")
AddVersionParent("vsan.version.version22", "vmodl.reflect.version.version2")
AddVersionParent("vsan.version.version22", "vim.version.version5")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_1_0")
AddVersionParent("vsan.version.version22", "vsan.version.version4")
AddVersionParent("vsan.version.version22", "vsan.version.version12")
AddVersionParent("vsan.version.version22", "vsan.version.version14")
AddVersionParent("vsan.version.version22", "vsan.version.version18")
AddVersionParent("vsan.version.version22", "vmodl.reflect.version.version1")
AddVersionParent("vsan.version.version22", "vmodl.version.version0")
AddVersionParent("vsan.version.version22", "vim.version.version11")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_0_2")
AddVersionParent("vsan.version.version22", "vmodl.version.version2")
AddVersionParent("vsan.version.version22", "vsan.version.version8")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_2_0")
AddVersionParent("vsan.version.version22", "vim.version.version8")
AddVersionParent("vsan.version.version22", "vim.version.v7_0")
AddVersionParent("vsan.version.version22", "vsan.version.version3")
AddVersionParent("vsan.version.version22", "vsan.version.version15")
AddVersionParent("vsan.version.version22", "vim.version.v6_8_7")
AddVersionParent("vsan.version.version22", "vsan.version.version13")
AddVersionParent("vsan.version.version22", "vim.version.version1")
AddVersionParent("vsan.version.version22", "vim.version.version4")
AddVersionParent("vsan.version.version22", "vsan.version.version19")
AddVersionParent("vsan.version.version22", "vmodl.query.version.version3")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_3_0")
AddVersionParent("vsan.version.version22", "vim.version.version13")
AddVersionParent("vsan.version.version22", "vsan.version.version20")
AddVersionParent("vsan.version.version22", "vim.version.version3")
AddVersionParent("vsan.version.version22", "vsan.version.version10")
AddVersionParent("vsan.version.version22", "vsan.version.version22")
AddVersionParent("vsan.version.version22", "vim.version.version7")
AddVersionParent("vsan.version.version22", "vmodl.query.version.version1")
AddVersionParent("vsan.version.version22", "vsan.version.version9")
AddVersionParent("vsan.version.version22", "vsan.version.version5")
AddVersionParent("vsan.version.version22", "vim.version.v6_9_1")
AddVersionParent("vsan.version.version22", "vsan.version.version17")
AddVersionParent("vsan.version.version22", "vsan.version.version6")
AddVersionParent("vsan.version.version22", "vim.version.version15")
AddVersionParent("vsan.version.version22", "vsan.version.version16")
AddVersionParent("vsan.version.version22", "vim.version.version6")
AddVersionParent("vsan.version.version22", "vim.version.version10")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_3_2")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_1_1")
AddVersionParent("vsan.version.version22", "vmodl.query.version.version4")
AddVersionParent("vsan.version.version22", "vmodl.version.version1")
AddVersionParent("vsan.version.version22", "vsan.version.version11")
AddVersionParent("vsan.version.version22", "vim.version.v7_0_2_1")
newestVersions.Add("vsan.version.version22")
AddVersionParent("vsan.version.version22", "vim.version.unstable")
AddVersionParent("vsan.version.version22", "vim.version.VSAN2_Configure")
publicVersions.Add("vsan.version.version20")

CreateManagedType('vim.vsan.VsanDebugSystem', 'VsanDebugSystem', 'vmodl.ManagedObject', 'vsan.version.version7', [('entity', 'vmodl.ManagedObject[]', 'vsan.version.version7', 0, 'System.Read')], [('startMOB', 'VsanStartMobService', 'vsan.version.version7', tuple(), (0, 'void', 'void'), 'Global.Settings', None), ('stopMOB', 'VsanStopMobService', 'vsan.version.version7', tuple(), (0, 'void', 'void'), 'Global.Settings', None), ('queryMemoryStats', 'VsanQueryMemoryStats', 'vsan.version.version9', tuple(), (0, 'string', 'string'), 'Global.Diagnostics', None), ('queryMobStatus', 'VsanQueryMobStatus', 'vsan.version.version9', tuple(), (0, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanSystemEx', 'VsanSystemEx', 'vmodl.ManagedObject', 'vim.version.version11', [], [('vsanEnterMaintenanceMode', 'VsanEnterMaintenanceMode_Task', 'vim.version.version11', (('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vim.version.version11', 0 | F_OPTIONAL, None), ('timeout', 'int', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('vsanExitMaintenanceMode', 'VsanExitMaintenanceMode_Task', 'vim.version.version11', (('timeout', 'int', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('refreshVsanSystem', 'RefreshVsanSystem', 'vim.version.version11', tuple(), (0, 'void', 'void'), 'Host.Config.Storage', None), ('getVsanRuntimeInfo', 'GetVsanRuntimeInfo', 'vim.version.version11', tuple(), (0, 'vim.vsan.host.VsanRuntimeInfo', 'vim.vsan.host.VsanRuntimeInfo'), 'System.Read', None), ('queryVmMetadata', 'QueryVmMetadata', 'vim.version.version11', (('vmIds', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL, None), ('dsUrl', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vm.MetadataManager.VmMetadataResult[]', 'vim.vm.MetadataManager.VmMetadataResult[]'), 'System.Read', None), ('updateVmMetadata', 'UpdateVmMetadata', 'vim.version.version11', (('vmMetadataInput', 'vim.vm.MetadataManager.VmMetadataInput[]', 'vim.version.version11', 0, None), ('updateTimeoutMsec', 'int', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.vm.MetadataManager.VmMetadataResult[]', 'vim.vm.MetadataManager.VmMetadataResult[]'), 'Host.Config.Storage', None), ('clearVmMetadata', 'ClearVmMetadata', 'vim.version.version11', (('clearTimeoutMsec', 'int', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.vm.MetadataManager.VmMetadataResult[]', 'vim.vm.MetadataManager.VmMetadataResult[]'), 'Host.Config.Storage', None), ('queryVmsAccessibility', 'QueryVmsAccessibility', 'vim.version.version11', (('vmIds', 'string[]', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.host.DatastoreSystem.VmFileAccessibilityResult[]', 'vim.host.DatastoreSystem.VmFileAccessibilityResult[]'), 'System.Read', None), ('getTopLevelDirectories', 'GetTopLevelDirectories', 'vim.version.version11', (('cid', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.KeyValue[]', 'vim.KeyValue[]'), 'System.Read', None), ('getVsanNics', 'GetVsanNics', 'vim.version.version11', (('trafficType', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vmodl.KeyAnyValue[]', 'vmodl.KeyAnyValue[]'), 'System.Read', None), ('vmMonitorWatchObjects', 'VmMonitorWatchObjects', 'vim.version.version11', (('objUuids', 'string[]', 'vim.version.version11', 0, None), ('cid', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.VCServer', None), ('vmMonitorUnwatchObjects', 'VmMonitorUnwatchObjects', 'vim.version.version11', (('objUuids', 'string[]', 'vim.version.version11', 0, None), ('cid', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.VCServer', None), ('getDomObjects', 'GetDomObjects', 'vim.version.version11', tuple(), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('getDomObjectStats', 'GetDomObjectStats', 'vim.version.version11', (('domObj', 'string', 'vim.version.version11', 0, None), ), (0, 'vim.KeyValue[]', 'vim.KeyValue[]'), 'System.Read', None), ('getDomClientRoleStats', 'GetDomClientRoleStats', 'vim.version.version11', tuple(), (0, 'vim.KeyValue[]', 'vim.KeyValue[]'), 'System.Read', None), ('refreshVsanVmknics', 'RefreshVsanVmknics', 'vim.version.version11', (('vmknic', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryWhatIfEvacuationResult', 'VsanQueryWhatIfEvacuationResult', 'vsan.version.version3', (('evacEntityUuid', 'string', 'vsan.version.version3', 0, None), ), (0, 'vim.vsan.host.VsanWhatIfEvacResult', 'vim.vsan.host.VsanWhatIfEvacResult'), 'System.Read', None), ('getRuntimeStats', 'VsanHostGetRuntimeStats', 'vsan.version.version3', (('stats', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('clusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.host.RuntimeStats', 'vim.vsan.host.RuntimeStats'), 'System.Read', None), ('getAboutInfoEx', 'VsanGetAboutInfoEx', 'vsan.version.version3', tuple(), (0, 'vim.vsan.host.AboutInfoEx', 'vim.vsan.host.AboutInfoEx'), 'System.Read', None), ('querySyncingVsanObjects', 'VsanQuerySyncingVsanObjects', 'vsan.version.version7', (('uuids', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('start', 'int', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('limit', 'int', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('includeSummary', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.host.VsanSyncingObjectQueryResult', 'vim.vsan.host.VsanSyncingObjectQueryResult'), 'System.Read', None), ('getLocalAffinityVmList', 'VsanGetLocalAffinityVmList', 'vsan.version.version7', (('includePoweredOffVms', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('queryHostDrsStats', 'VsanQueryHostDrsStats', 'vsan.version.version8', (('hostUuids', 'string[]', 'vsan.version.version8', 0, None), ('vms', 'string[]', 'vsan.version.version8', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.host.DrsStats', 'vim.vsan.host.DrsStats'), 'System.Read', None), ('unmountDiskMappingEx', 'VsanUnmountDiskMappingEx', 'vsan.version.version8', (('mappings', 'vim.vsan.host.DiskMapping[]', 'vsan.version.version8', 0, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version8', 0 | F_OPTIONAL, None), ('timeout', 'int', 'vsan.version.version8', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('queryNvdimmSystemInfo', 'QueryNvdimmSystemInfo', 'vsan.version.version19', tuple(), (0 | F_OPTIONAL, 'vim.host.NvdimmSystem.NvdimmSystemInfo', 'vim.host.NvdimmSystem.NvdimmSystemInfo'), 'System.Read', None), ('queryVsanAwsCredentials', 'QueryVsanAwsCredentials', 'vsan.version.version8', tuple(), (0, 'vim.vsan.host.VsanAwsCredentials', 'vim.vsan.host.VsanAwsCredentials'), 'Host.Config.Storage', None), ('getAssociatedObjects', 'VsanGetAssociatedObjects', 'vsan.version.version9', (('spbmProfileId', 'string', 'vsan.version.version9', 0, None), ('spbmGenerationNumber', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('start', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('limit', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.host.VsanAssociatedObjectsResult', 'vim.vsan.host.VsanAssociatedObjectsResult'), 'System.Read', None), ('getAssociatedSpbmProfile', 'VsanGetAssociatedSpbmProfile', 'vsan.version.version9', (('vsanObjectUuids', 'string[]', 'vsan.version.version9', 0, None), ), (0, 'vim.vsan.host.VsanObjectProfileInfo[]', 'vim.vsan.host.VsanObjectProfileInfo[]'), 'System.Read', None), ('queryClusterRuntimeInfo', 'QueryClusterRuntimeInfo', 'vsan.version.version15', (('clusterUuids', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.ClusterRuntimeInfo[]', 'vim.vsan.ClusterRuntimeInfo[]'), 'System.Read', None), ('queryHostStatusEx', 'VsanQueryHostStatusEx', 'vsan.version.version15', (('clusterUuids', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.ClusterStatus[]', 'vim.vsan.host.ClusterStatus[]'), 'System.Read', None), ('wipeDisk', 'VsanHostWipeDisk', 'vsan.version.version15', (('disks', 'string[]', 'vsan.version.version15', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('queryWipeDiskStatus', 'VsanHostQueryWipeDisk', 'vsan.version.version15', (('disks', 'string[]', 'vsan.version.version15', 0, None), ), (0, 'vim.vsan.host.WipeDiskStatus[]', 'vim.vsan.host.WipeDiskStatus[]'), 'System.Read', None), ('abortWipeDisk', 'VsanHostAbortWipeDisk', 'vsan.version.version15', (('disks', 'string[]', 'vsan.version.version15', 0, None), ), (0, 'vim.vsan.host.AbortWipeDiskStatus[]', 'vim.vsan.host.AbortWipeDiskStatus[]'), 'Host.Config.Storage', None), ('getObjectComplianceDetail', 'VsanGetObjectComplianceDetail', 'vsan.version.version18', (('vsanComplianceQuerySpecs', 'vim.vsan.host.VsanComplianceQuerySpec[]', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.ComplianceResult[]', 'vim.vsan.host.ComplianceResult[]'), 'System.Read', None), ('queryObjectsNeedUpgrade', 'QueryObjectsNeedUpgrade', 'vsan.version.version15', (('targetVersion', 'int', 'vsan.version.version15', 0, None), ('limit', 'int', 'vsan.version.version15', 0 | F_OPTIONAL, None), ('clusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('queryRuntimeMetadataResilencyCapability', 'QueryRuntimeMetadataResilencyCapability', 'vsan.version.version21', tuple(), (0, 'vim.vsan.MetadataResiliencyConfig', 'vim.vsan.MetadataResiliencyConfig'), 'System.Read', None), ('convertEncryptionObjects', 'ConvertEncryptionObjects', 'vsan.version.version21', (('timeout', 'int', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('generateClusterKeys', 'GenerateClusterKeys', 'vsan.version.version21', (('config', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version21', 0, None), ('operation', 'vim.vsan.host.EncryptionOperation', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.ClusterKeys', 'vim.vsan.host.ClusterKeys'), 'Cryptographer.ManageKeys', None), ])
CreateManagedType('vim.host.VsanHealthSystem', 'HostVsanHealthSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('queryVerifyNetworkSettings', 'VsanHostQueryVerifyNetworkSettings', 'vim.version.version9', (('peers', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('ROBOStretchedClusterWitnesses', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vMotionPeers', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('spec', 'vim.host.VsanHealthQuerySpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanNetworkHealthResult', 'vim.host.VsanNetworkHealthResult'), 'System.Read', None), ('queryCheckLimits', 'VsanHostQueryCheckLimits', 'vim.version.version9', (('spec', 'vim.host.VsanHostQueryCheckLimitsSpec', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanLimitHealthResult', 'vim.host.VsanLimitHealthResult'), 'System.Read', None), ('queryHostInfoByUuids', 'VsanHostQueryHostInfoByUuids', 'vim.version.version9', (('uuids', 'string[]', 'vim.version.version9', 0, None), ), (0, 'vim.host.VsanQueryResultHostInfo[]', 'vim.host.VsanQueryResultHostInfo[]'), 'System.Read', None), ('queryAdvCfg', 'VsanHostQueryAdvCfg', 'vim.version.version9', (('options', 'string[]', 'vim.version.version9', 0, None), ('includeAllAdvOptions', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('nonDefaultOnly', 'boolean', 'vsan.version.version8', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.option.OptionValue[]', 'vim.option.OptionValue[]'), 'System.Read', None), ('queryRunIperfServer', 'VsanHostQueryRunIperfServer', 'vim.version.version9', (('multicast', 'boolean', 'vim.version.version9', 0, None), ('serverIp', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ('durationSec', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanNetworkLoadTestResult', 'vim.host.VsanNetworkLoadTestResult'), 'System.Read', None), ('queryRunIperfClient', 'VsanHostQueryRunIperfClient', 'vim.version.version9', (('multicast', 'boolean', 'vim.version.version9', 0, None), ('serverIp', 'string', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('spec', 'vim.host.VsanIperfClientSpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanNetworkLoadTestResult', 'vim.host.VsanNetworkLoadTestResult'), 'System.Read', None), ('queryObjectHealthSummary', 'VsanHostQueryObjectHealthSummary', 'vim.version.version9', (('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjUuids', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('localHostOnly', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeNonComplianceObjDetail', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('spec', 'vim.host.VsanHealthQuerySpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ('includeDataProtectionHealth', 'boolean', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanObjectOverallHealth', 'vim.host.VsanObjectOverallHealth'), 'System.Read', None), ('queryVsanVmProcessList', 'VsanHostQueryVmProcessList', 'vsan.version.version7', tuple(), (0, 'string[]', 'string[]'), 'System.Read', None), ('queryPhysicalDiskHealthSummary', 'VsanHostQueryPhysicalDiskHealthSummary', 'vim.version.version9', tuple(), (0, 'vim.host.VsanPhysicalDiskHealthSummary', 'vim.host.VsanPhysicalDiskHealthSummary'), 'System.Read', None), ('queryEncryptionHealthSummary', 'VsanHostQueryEncryptionHealthSummary', 'vsan.version.version3', tuple(), (0, 'vim.host.VsanEncryptionHealthSummary', 'vim.host.VsanEncryptionHealthSummary'), 'System.Read', None), ('queryDitEncryptionHealthSummary', 'VsanHostQueryDitEncryptionHealthSummary', 'vsan.version.version15', (('clusterUuid', 'string', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanDitEncryptionHealthSummary', 'vim.host.VsanDitEncryptionHealthSummary'), 'System.Read', None), ('queryFileServiceHealthSummary', 'VsanHostQueryFileServiceHealthSummary', 'vsan.version.version12', tuple(), (0, 'vim.host.VsanFileServiceHealthSummary', 'vim.host.VsanFileServiceHealthSummary'), 'System.Read', None), ('prepareVmdkLoadTest', 'VsanHostPrepareVmdkLoadTest', 'vim.version.version9', (('runname', 'string', 'vim.version.version9', 0, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('runVmdkLoadTest', 'VsanHostRunVmdkLoadTest', 'vim.version.version9', (('runname', 'string', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vim.version.version9', 0, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0, None), ), (0, 'vim.host.VsanVmdkLoadTestResult[]', 'vim.host.VsanVmdkLoadTestResult[]'), 'System.Read', None), ('cleanupVmdkLoadTest', 'VsanHostCleanupVmdkLoadTest', 'vim.version.version9', (('runname', 'string', 'vim.version.version9', 0, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('queryVsanPcap', 'VsanHostQueryVsanPcap', 'vim.version.version9', (('vmknic', 'string', 'vim.version.version9', 0, None), ('duration', 'int', 'vim.version.version9', 0, None), ('includeRawPcap', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeIgmp', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsMsgTypeFilter', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsPorts', 'int[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('clusterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanVsanPcapResult', 'vim.host.VsanVsanPcapResult'), 'System.Read', None), ('queryVersion', 'VsanHostQueryHealthSystemVersion', 'vim.version.version9', (('displayVersion', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('checkClomdLiveness', 'VsanHostClomdLiveness', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('checkDpdLiveness', 'VsanHostDpdLiveness', 'vsan.version.version22', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('checkDatastoreUsage', 'VsanCheckDatastoreUsage', 'vsan.version.version22', tuple(), (0, 'vim.host.VsanDatastoreUsageResult', 'vim.host.VsanDatastoreUsageResult'), 'System.Read', None), ('checkArchivalAccessibility', 'VsanCheckArchivalAccessibility', 'vsan.version.version22', tuple(), (0, 'vim.host.VsanArchivalAccessibilityResult', 'vim.host.VsanArchivalAccessibilityResult'), 'System.Read', None), ('repairImmediateObjects', 'VsanHostRepairImmediateObjects', 'vim.version.version9', (('uuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('repairType', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanRepairObjectsResult', 'vim.host.VsanRepairObjectsResult'), 'Host.Config.Storage', None), ('getHclInfo', 'VsanGetHclInfo', 'vim.version.version9', (('includeVendorInfo', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vsanEsaEligibleDisksOnly', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanHostHclInfo', 'vim.host.VsanHostHclInfo'), 'System.Read', None), ('startProactiveRebalance', 'VsanStartProactiveRebalance', 'vim.version.version9', (('timeSpan', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('varianceThreshold', 'float', 'vim.version.version9', 0 | F_OPTIONAL, None), ('timeThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('rateThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('stopProactiveRebalance', 'VsanStopProactiveRebalance', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('getProactiveRebalanceInfo', 'VsanGetProactiveRebalanceInfo', 'vim.version.version9', tuple(), (0, 'vim.host.VsanProactiveRebalanceInfoEx', 'vim.host.VsanProactiveRebalanceInfoEx'), 'System.Read', None), ('refreshVsanHealthGenerationId', 'RefreshVsanHealthGenerationId', 'vim.version.version9', tuple(), (0, 'int', 'int'), 'Host.Config.Storage', None), ('waitForVsanHealthGenerationIdChange', 'VsanWaitForVsanHealthGenerationIdChange', 'vim.version.version9', (('timeout', 'int', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('flashScsiControllerFirmware', 'VsanFlashScsiControllerFirmware_Task', 'vsan.version.version3', (('spec', 'vim.host.VsanHclFirmwareUpdateSpec', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('vsanRemediateScsiControllerIssues', 'VsanRemediateScsiControllerIssues', 'vsan.version.version3', (('hbaDevice', 'string', 'vsan.version.version3', 0, None), ('remediateIssues', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('createVmHealthTest', 'VsanHostCreateVmHealthTest', 'vsan.version.version3', (('timeout', 'int', 'vsan.version.version3', 0, None), ), (0, 'vim.cluster.VsanHostCreateVmHealthTestResult', 'vim.cluster.VsanHostCreateVmHealthTestResult'), 'System.Read', None), ('queryLocalHostSystem', 'VsanLocalHostSystem', 'vsan.version.version3', tuple(), (0, 'vim.HostSystem', 'vim.HostSystem'), 'System.Read', None), ('queryLocalPropertyCollector', 'VsanLocalPropertyCollector', 'vsan.version.version3', tuple(), (0, 'vmodl.query.PropertyCollector', 'vmodl.query.PropertyCollector'), 'System.Read', None), ('queryDiskRebalanceStatus', 'VsanQueryDiskRebalanceStatus', 'vsan.version.version3', (('diskUuidList', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VsanDiskRebalanceResult[]', 'vim.host.VsanDiskRebalanceResult[]'), 'System.Read', None), ('querySmartStats', 'VsanHostQuerySmartStats', 'vsan.version.version3', (('disks', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('includeAllDisks', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanSmartStatsHostSummary', 'vim.host.VsanSmartStatsHostSummary'), 'System.Read', None), ('queryDataProtectionCfg', 'VsanHostQueryDataProtectionCfg', 'vsan.version.version22', tuple(), (0 | F_OPTIONAL, 'vim.option.OptionValue[]', 'vim.option.OptionValue[]'), 'System.Read', None), ('queryHostEMMState', 'VsanQueryHostEMMState', 'vsan.version.version7', tuple(), (0, 'vim.host.VsanHostEMMSummary', 'vim.host.VsanHostEMMSummary'), 'System.Read', None), ('queryVsanConfigsByFilter', 'VsanQueryVsanConfigsByFilter', 'vsan.version.version11', (('requiredConfigs', 'string[]', 'vsan.version.version11', 0, None), ), (0, 'vim.vsan.host.ConfigInfoEx', 'vim.vsan.host.ConfigInfoEx'), 'System.Read', None), ('prepareHostForClusterRebootWithNAMM', 'PrepareHostForClusterRebootWithNAMM', 'vsan.version.version11', (('verifyOnly', 'boolean', 'vsan.version.version11', 0, None), ('scheduleTime', 'int', 'vsan.version.version11', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Network', None), ('restoreHostForClusterRebootWithNAMM', 'RestoreHostForClusterRebootWithNAMM', 'vsan.version.version11', (('verifyOnly', 'boolean', 'vsan.version.version11', 0, None), ('scheduleTime', 'int', 'vsan.version.version11', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Network', None), ('checkHostDaemonHealth', 'VsanCheckHostDaemonHealth', 'vsan.version.version4', (('daemons', 'string[]', 'vsan.version.version4', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanDaemonHealth[]', 'vim.host.VsanDaemonHealth[]'), 'System.Read', None), ('checkCloudKmsKeyStatus', 'VsanCheckCloudKmsKeyStatus', 'vsan.version.version15', (('keyId', 'string', 'vsan.version.version15', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('getNetworkDiagnosticsHealthInfo', 'VsanGetNetworkDiagnosticsHealthInfo', 'vsan.version.version18', tuple(), (0, 'vim.host.VsanNetworkDiagnosticsHealthInfo', 'vim.host.VsanNetworkDiagnosticsHealthInfo'), 'System.Read', None), ('setVcgIdForHwDevice', 'VsanSetVcgIdForHwDevice', 'vsan.version.version18', (('deviceId', 'string', 'vsan.version.version18', 0, None), ('vcgId', 'long', 'vsan.version.version18', 0, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('getVcgIdForHwDevice', 'VsanGetVcgIdForHwDevice', 'vsan.version.version18', (('deviceId', 'string', 'vsan.version.version18', 0, None), ), (0 | F_OPTIONAL, 'long', 'long'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanSpaceReportSystem', 'VsanSpaceReportSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('querySpaceUsage', 'VsanQuerySpaceUsage', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0, None), ('storagePolicies', 'vim.vm.ProfileSpec[]', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('whatifCapacityOnly', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanSpaceUsage', 'vim.cluster.VsanSpaceUsage'), 'System.Read', None), ('queryVsanCapacityHealthThreshold', 'QueryVsanCapacityHealthThreshold', 'vsan.version.version15', (('cluster', 'vim.ComputeResource', 'vsan.version.version15', 0, None), ('capacityReservations', 'vim.vsan.CapacityReservationInfo[]', 'vsan.version.version15', 0, None), ), (0, 'vim.cluster.VsanWhatifCapacityHealthThreshold[]', 'vim.cluster.VsanWhatifCapacityHealthThreshold[]'), 'System.Read', None), ('queryVsanManagedStorageSpaceUsage', 'QueryVsanManagedStorageSpaceUsage', 'vsan.version.version15', (('cluster', 'vim.ComputeResource', 'vsan.version.version15', 0, None), ('querySpec', 'vim.cluster.QueryVsanManagedStorageSpaceUsageSpec', 'vsan.version.version15', 0, None), ), (0, 'vim.cluster.VsanSpaceUsageWithDatastoreType[]', 'vim.cluster.VsanSpaceUsageWithDatastoreType[]'), 'System.Read', None), ('queryEntitySpaceUsage', 'VsanQueryEntitySpaceUsage', 'vsan.version.version12', (('cluster', 'vim.ComputeResource', 'vsan.version.version12', 0, None), ('querySpec', 'vim.cluster.VsanSpaceQuerySpec', 'vsan.version.version12', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanEntitySpaceUsage[]', 'vim.cluster.VsanEntitySpaceUsage[]'), 'System.Read', None), ('queryRemoteDataProtectionSpaceUsage', 'VsanQueryRemoteDataProtectionSpaceUsage', 'vsan.version.version22', (('cluster', 'vim.ComputeResource', 'vsan.version.version22', 0, None), ('targetSiteInfos', 'vim.cluster.VsanDataProtectionRemoteTargetSiteInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanDataProtectionRemoteSpaceUsage', 'vim.cluster.VsanDataProtectionRemoteSpaceUsage'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanObjectSystem', 'VsanObjectSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('setVsanObjectPolicy', 'VosSetVsanObjectPolicy', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vsanObjectUuid', 'string', 'vim.version.version9', 0, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryVsanObjectInformation', 'VosQueryVsanObjectInformation', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vsanObjectQuerySpecs', 'vim.cluster.VsanObjectQuerySpec[]', 'vim.version.version9', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanObjectInformation[]', 'vim.cluster.VsanObjectInformation[]'), 'System.Read', None), ('queryObjectIdentities', 'VsanQueryObjectIdentities', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('objTypes', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL, None), ('includeHealth', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjIdentity', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeSpaceSummary', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('extraQuerySpec', 'vim.cluster.VsanObjIdentityQuerySpec', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('includeDataProtectionHealth', 'boolean', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanObjectIdentityAndHealth', 'vim.cluster.VsanObjectIdentityAndHealth'), 'System.Read', None), ('deleteObjects', 'VsanDeleteObjects_Task', 'vsan.version.version9', (('cluster', 'vim.ComputeResource', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('objUuids', 'string[]', 'vsan.version.version9', 0, None), ('force', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryInaccessibleVmSwapObjects', 'VsanQueryInaccessibleVmSwapObjects', 'vsan.version.version9', (('cluster', 'vim.ComputeResource', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('querySyncingVsanObjectsSummary', 'QuerySyncingVsanObjectsSummary', 'vsan.version.version10', (('cluster', 'vim.ComputeResource', 'vsan.version.version10', 0, None), ('syncingObjectFilter', 'vim.cluster.VsanSyncingObjectFilter', 'vsan.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.host.VsanSyncingObjectQueryResult', 'vim.vsan.host.VsanSyncingObjectQueryResult'), 'System.Read', None), ('queryInactiveDataProtectionSpaceUsage', 'VsanQueryInactiveDataProtectionSpaceUsage', 'vsan.version.version22', (('cluster', 'vim.ComputeResource', 'vsan.version.version22', 0, None), ('dataProtectionTargetInfos', 'vim.cluster.VsanDataProtectionRemoteTargetSiteInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanDataProtectionSpaceUsage[]', 'vim.cluster.VsanDataProtectionSpaceUsage[]'), 'System.Read', None), ('relayoutObjects', 'RelayoutObjects', 'vsan.version.version14', (('cluster', 'vim.ComputeResource', 'vsan.version.version14', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('hostRelayoutObjects', 'HostRelayoutObjects', 'vsan.version.version14', tuple(), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('getExtraObjectAttributes', 'GetExtraObjectAttributes', 'vsan.version.version12', (('cluster', 'vim.ComputeResource', 'vsan.version.version12', 0, None), ('uuids', 'string[]', 'vsan.version.version12', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanObjectExtraAttributes[]', 'vim.cluster.VsanObjectExtraAttributes[]'), 'System.Read', None), ('checkPolicyRegulationCompliance', 'VsanCheckPolicyRegulationCompliance', 'vsan.version.version16', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0, None), ('spec', 'vim.cluster.VsanPolicyRegulationCheckSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryVsanManagedObjectUuids', 'QueryVsanManagedObjectUuids', 'vsan.version.version16', (('cluster', 'vim.ComputeResource', 'vsan.version.version16', 0, None), ('querySpec', 'vim.cluster.QueryVsanManagedHostObjectUuidsSpec', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanManagedHostObjectUuids[]', 'vim.cluster.VsanManagedHostObjectUuids[]'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanPerformanceManager', 'VsanPerformanceManager', 'vmodl.ManagedObject', 'vim.version.version9', [], [('queryVsanPerfTopEntities', 'QueryVsanPerfTopEntities', 'vsan.version.version16', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0 | F_OPTIONAL, None), ('querySpec', 'vim.cluster.VsanPerfTopQuerySpec', 'vsan.version.version16', 0, None), ), (0, 'vim.cluster.VsanPerfEntityMetricCSV[]', 'vim.cluster.VsanPerfEntityMetricCSV[]'), 'System.Read', None), ('vsanPerfDiagnoseFromFile', 'VsanPerfDiagnoseFromFile', 'vsan.version.version3', (('perfSvcResultFile', 'string', 'vsan.version.version3', 0, None), ('perfDiagnoseQuery', 'vim.cluster.VsanPerfDiagnoseQuerySpec', 'vsan.version.version3', 0, None), ('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfDiagnosticResult[]', 'vim.cluster.VsanPerfDiagnosticResult[]'), 'System.Read', None), ('vsanPerfDiagnose', 'VsanPerfDiagnose', 'vsan.version.version3', (('perfDiagnoseQuery', 'vim.cluster.VsanPerfDiagnoseQuerySpec', 'vsan.version.version3', 0, None), ('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfDiagnosticResult[]', 'vim.cluster.VsanPerfDiagnosticResult[]'), 'System.Read', None), ('vsanPerfDiagnoseTask', 'VsanPerfDiagnoseTask', 'vsan.version.version7', (('perfDiagnoseQuery', 'vim.cluster.VsanPerfDiagnoseQuerySpec', 'vsan.version.version7', 0, None), ('cluster', 'vim.ComputeResource', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getVsanPerfDiagnosisResult', 'GetVsanPerfDiagnosisResult', 'vsan.version.version7', (('task', 'vim.Task', 'vsan.version.version7', 0, None), ('cluster', 'vim.ComputeResource', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfDiagnosticResult[]', 'vim.cluster.VsanPerfDiagnosticResult[]'), 'System.Read', None), ('submitFeedbackForDiagnosisResult', 'SubmitFeedbackForDiagnosisResult', 'vsan.version.version11', (('feedbackSpec', 'vim.cluster.VsanPerfDiagnoseFeedbackSpec', 'vsan.version.version11', 0, None), ('feedbackValue', 'boolean', 'vsan.version.version11', 0, None), ('comment', 'string', 'vsan.version.version11', 0 | F_OPTIONAL, None), ('cluster', 'vim.ComputeResource', 'vsan.version.version11', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryVsanPerf', 'VsanPerfQueryPerf', 'vim.version.version9', (('querySpecs', 'vim.cluster.VsanPerfQuerySpec[]', 'vim.version.version9', 0, None), ('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanPerfEntityMetricCSV[]', 'vim.cluster.VsanPerfEntityMetricCSV[]'), 'System.Read', None), ('queryNodeInformation', 'VsanPerfQueryNodeInformation', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfNodeInformation[]', 'vim.cluster.VsanPerfNodeInformation[]'), 'System.Read', None), ('setClusterMembers', 'VsanPerfSetClusterMembers', 'vim.version.version9', (('memberInfo', 'vim.cluster.VsanPerfMemberInfo[]', 'vim.version.version9', 0, None), ('configGen', 'vim.cluster.VsanConfigGeneration', 'vsan.version.version4', 0 | F_OPTIONAL, None), ('subClusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('createStatsObject', 'VsanPerfCreateStatsObject', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('createStatsObjectTask', 'VsanPerfCreateStatsObjectTask', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('deleteStatsObject', 'VsanPerfDeleteStatsObject', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('deleteStatsObjectTask', 'VsanPerfDeleteStatsObjectTask', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('setStatsObjectPolicy', 'VsanPerfSetStatsObjectPolicy', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('profile', 'vim.vm.ProfileSpec', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryStatsObjectInformation', 'VsanPerfQueryStatsObjectInformation', 'vim.version.version9', (('cluster', 'vim.ComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanObjectInformation', 'vim.cluster.VsanObjectInformation'), 'System.Read', None), ('login', 'VsanPerfLogin', 'vim.version.version9', (('token', 'string', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'System.Anonymous', None), ('queryClusterHealth', 'VsanPerfQueryClusterHealth', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vmodl.DynamicData[]', 'vmodl.DynamicData[]'), 'System.Read', None), ('queryTimeRanges', 'VsanPerfQueryTimeRanges', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('querySpec', 'vim.cluster.VsanPerfTimeRangeQuerySpec', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfTimeRange[]', 'vim.cluster.VsanPerfTimeRange[]'), 'System.Read', None), ('saveTimeRanges', 'VsanPerfSaveTimeRanges', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('timeRanges', 'vim.cluster.VsanPerfTimeRange[]', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Global.Diagnostics', None), ('deleteTimeRange', 'VsanPerfDeleteTimeRange', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('name', 'string', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Global.Diagnostics', None), ('toggleVerboseMode', 'VsanPerfToggleVerboseMode', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('verboseMode', 'boolean', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('injectFakeHistory', 'VsanPerfInjectFakeHistory', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('startTimestamp', 'long', 'vim.version.version9', 0, None), ('endTimestamp', 'long', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryVsanHostConfigInfo', 'QueryVsanHostConfigInfo', 'vim.version.version9', tuple(), (0, 'vim.vsan.host.ConfigInfo', 'vim.vsan.host.ConfigInfo'), 'System.Read', None), ('queryHostNetworkConfigInfoVnic', 'QueryHostNetworkConfigInfoVnic', 'vim.version.version9', tuple(), (0 | F_OPTIONAL, 'vim.host.VirtualNic[]', 'vim.host.VirtualNic[]'), 'System.Read', None), ('getSupportedEntityTypes', 'VsanPerfGetSupportedEntityTypes', 'vim.version.version9', tuple(), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfEntityType[]', 'vim.cluster.VsanPerfEntityType[]'), 'System.Read', None), ('getSupportedDiagnosticExceptions', 'VsanPerfGetSupportedDiagnosticExceptions', 'vsan.version.version3', tuple(), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfDiagnosticException[]', 'vim.cluster.VsanPerfDiagnosticException[]'), 'System.Read', None), ('getAggregatedEntityTypes', 'VsanPerfGetAggregatedEntityTypes', 'vsan.version.version7', tuple(), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfEntityType[]', 'vim.cluster.VsanPerfEntityType[]'), 'System.Read', None), ('getVcMoRefFromPerfEntityRefId', 'VsanPerfGetVcMoRefFromPerfEntityRefId', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0, None), ('entityRefIds', 'string[]', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanPerfEntityInfo[]', 'vim.cluster.VsanPerfEntityInfo[]'), 'System.Read', None), ('startStatsCollector', 'VsanPerfStartStatsCollector', 'vim.version.version9', tuple(), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('stopStatsCollector', 'VsanPerfStopStatsCollector', 'vim.version.version9', tuple(), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('uponClusterMount', 'UponClusterMount', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL, None), ('remoteClusterUuid', 'string', 'vsan.version.version15', 0, None), ('isMount', 'boolean', 'vsan.version.version15', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryRemoteServerClusters', 'QueryRemoteServerClusters', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL, None), ('querySpec', 'vim.cluster.VsanRemoteClusterQuerySpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'string[]', 'string[]'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanInternalStatsProvider', 'VsanInternalStatsProvider', 'vmodl.ManagedObject', 'vim.version.version9', [], [('captureInternalStats', 'CaptureInternalStats', 'vim.version.version9', (('callerNodeId', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ('interval', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('verboseMode', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanIoInsightManager', 'VsanIoInsightManager', 'vmodl.ManagedObject', 'vsan.version.version14', [], [('startIoInsight', 'StartIoInsight', 'vsan.version.version14', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('runName', 'string', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('durationSec', 'long', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('targetHosts', 'vim.HostSystem[]', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('targetVMs', 'vim.VirtualMachine[]', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('stopIoInsight', 'StopIoInsight', 'vsan.version.version14', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('runName', 'string', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('hostsIoInsightInfos', 'vim.host.VsanHostIoInsightInfo[]', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryIoInsight', 'QueryIoInsight', 'vsan.version.version14', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0 | F_OPTIONAL, None), ('hostsIoInsightInfos', 'vim.host.VsanHostIoInsightInfo[]', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanHostIoInsightInfo[]', 'vim.host.VsanHostIoInsightInfo[]'), 'System.Read', None), ('queryIoInsightInstances', 'QueryIoInsightInstances', 'vsan.version.version14', (('querySpec', 'vim.cluster.VsanIoInsightInstanceQuerySpec', 'vsan.version.version14', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIoInsightInstance[]', 'vim.cluster.VsanIoInsightInstance[]'), 'System.Read', None), ('deleteIoInsightInstance', 'DeleteIoInsightInstance', 'vsan.version.version14', (('runName', 'string', 'vsan.version.version14', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ('saveIoInsightInstanceToDB', 'SaveIoInsightInstanceToDB', 'vsan.version.version14', (('instance', 'vim.cluster.VsanIoInsightInstance', 'vsan.version.version14', 0, None), ('isUpdate', 'boolean', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.Diagnostics', None), ('renameIoInsightInstance', 'RenameIoInsightInstance', 'vsan.version.version14', (('oldRunName', 'string', 'vsan.version.version14', 0, None), ('newRunName', 'string', 'vsan.version.version14', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanIscsiTargetSystem', 'VsanIscsiTargetSystem', 'vmodl.ManagedObject', 'vim.version.version11', [], [('enableIscsiTargetService', 'VsanVitEnableIscsiTargetService', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('spec', 'vim.cluster.VsanIscsiTargetServiceSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryIscsiTargetServiceVersion', 'VsanVitQueryIscsiTargetServiceVersion', 'vim.version.version11', tuple(), (0, 'string', 'string'), 'System.Read', None), ('createHomeObject', 'VsanVitCreateHomeObject', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('spec', 'vim.cluster.VsanIscsiHomeObjectSpec', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ('getHomeObject', 'VsanVitGetHomeObject', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'vim.cluster.VsanObjectInformation', 'vim.cluster.VsanObjectInformation'), 'System.Read', None), ('getIscsiTargetServiceConfig', 'VsanVitGetIscsiTargetServiceConfig', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'vim.cluster.VsanIscsiTargetServiceConfig', 'vim.cluster.VsanIscsiTargetServiceConfig'), 'System.Read', None), ('getIscsiTargetServiceStatus', 'VsanVitGetIscsiTargetServiceStatus', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('getIscsiTargetServiceProcessesStatus', 'VsanVitGetIscsiTargetServiceProcessesStatus', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'vim.KeyValue[]', 'vim.KeyValue[]'), 'System.Read', None), ('editIscsiTargetService', 'VsanVitEditIscsiTargetService', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('spec', 'vim.cluster.VsanIscsiTargetServiceSpec', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getIscsiTargets', 'VsanVitGetIscsiTargets', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiTarget[]', 'vim.cluster.VsanIscsiTarget[]'), 'System.Read', None), ('getIscsiTarget', 'VsanVitGetIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiTarget', 'vim.cluster.VsanIscsiTarget'), 'System.Read', None), ('addIscsiTarget', 'VsanVitAddIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetSpec', 'vim.cluster.VsanIscsiTargetSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('editIscsiTarget', 'VsanVitEditIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetSpec', 'vim.cluster.VsanIscsiTargetSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeIscsiTarget', 'VsanVitRemoveIscsiTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getIscsiLUNs', 'VsanVitGetIscsiLUNs', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAliases', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiLUN[]', 'vim.cluster.VsanIscsiLUN[]'), 'System.Read', None), ('getIscsiLUN', 'VsanVitGetIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunId', 'int', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiLUN', 'vim.cluster.VsanIscsiLUN'), 'System.Read', None), ('addIscsiLUN', 'VsanVitAddIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunSpec', 'vim.cluster.VsanIscsiLUNSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('editIscsiLUN', 'VsanVitEditIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunSpec', 'vim.cluster.VsanIscsiLUNSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeIscsiLUN', 'VsanVitRemoveIscsiLUN', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('lunId', 'int', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('addIscsiInitiatorsToTarget', 'VsanVitAddIscsiInitiatorsToTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('removeIscsiInitiatorsFromTarget', 'VsanVitRemoveIscsiInitiatorsFromTarget', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('getIscsiInitiatorGroups', 'VsanVitGetIscsiInitiatorGroups', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiInitiatorGroup[]', 'vim.cluster.VsanIscsiInitiatorGroup[]'), 'System.Read', None), ('getIscsiInitiatorGroup', 'VsanVitGetIscsiInitiatorGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanIscsiInitiatorGroup', 'vim.cluster.VsanIscsiInitiatorGroup'), 'System.Read', None), ('addIscsiInitiatorGroup', 'VsanVitAddIscsiInitiatorGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('removeIscsiInitiatorGroup', 'VsanVitRemoveIscsiInitiatorGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('addIscsiInitiatorsToGroup', 'VsanVitAddIscsiInitiatorsToGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('removeIscsiInitiatorsFromGroup', 'VsanVitRemoveIscsiInitiatorsFromGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('initiatorNames', 'string[]', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('addIscsiTargetToGroup', 'VsanVitAddIscsiTargetToGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('removeIscsiTargetFromGroup', 'VsanVitRemoveIscsiTargetFromGroup', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('initiatorGroupName', 'string', 'vim.version.version11', 0, None), ('targetAlias', 'string', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanDiskManagementSystem', 'VimHostVsanDiskManagementSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('retrieveCapability', 'RetrieveVsanDiskManagementSystemCapability', 'vim.version.version10', tuple(), (0, 'vim.vsan.host.VsanDiskManagementSystemCapability', 'vim.vsan.host.VsanDiskManagementSystemCapability'), 'System.Read', None), ('queryDiskMappings', 'QueryHostDiskMappings', 'vim.version.version10', tuple(), (0 | F_OPTIONAL, 'vim.vsan.host.DiskMapInfoEx[]', 'vim.vsan.host.DiskMapInfoEx[]'), 'System.Read', None), ('trimVsanDisks', 'TrimVsanDisks', 'vsan.version.version18', (('diskSpecs', 'vim.vsan.host.TrimDiskSpec', 'vsan.version.version18', 0, None), ('trimOption', 'vim.vsan.host.VsanDiskTrimOption', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('updateCapacityFlashStatusForDisks', 'UpdateCapacityFlashStatusForDisks', 'vim.version.version10', (('canonicalNames', 'string[]', 'vim.version.version10', 0, None), ('enabled', 'boolean', 'vim.version.version10', 0, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('upgradeFormatVersionForDiskMapping', 'UpgradeFormatVersionForDiskMapping', 'vim.version.version10', (('cacheTierCanonicalName', 'string', 'vim.version.version10', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('vsanScanNamespace', 'VsanScanNamespace', 'vim.version.version10', (('uuid', 'string', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'Host.Config.Storage', None), ('vsanRealignVsanSparseOffline', 'VsanRealignVsanSparseOffline', 'vim.version.version10', (('path', 'string', 'vim.version.version10', 0, None), ('startAt', 'long', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanRealignResult', 'vim.host.VsanRealignResult'), 'Host.Config.Storage', None), ('vsanGetOpenV2VsanSparseChain', 'VsanGetOpenV2VsanSparseChain', 'vim.version.version10', tuple(), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('vsanRealignVsanSparseOnline', 'VsanRealignVsanSparseOnline', 'vim.version.version10', (('uuidChain', 'string[]', 'vim.version.version10', 0, None), ('startAt', 'long', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanRealignResult', 'vim.host.VsanRealignResult'), 'Host.Config.Storage', None), ('vsanAlignObjectSize', 'VsanAlignObjectSize', 'vim.version.version10', (('uuid', 'string', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('vsanQueryNamespaceUuids', 'VsanQueryNamespaceUuids', 'vim.version.version10', tuple(), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('vsanRemoveConcat', 'VsanRemoveConcat', 'vim.version.version10', tuple(), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('vsanQueryUnalignedStatus', 'VsanQueryUnalignedStatus', 'vim.version.version10', tuple(), (0 | F_OPTIONAL, 'vim.host.VsanComponentAlignment', 'vim.host.VsanComponentAlignment'), 'System.Read', None), ('queryDataEfficiencyCapacityState', 'QueryDataEfficiencyCapacityState', 'vim.version.version10', tuple(), (0, 'vim.vsan.DataEfficiencyCapacityState', 'vim.vsan.DataEfficiencyCapacityState'), 'System.Read', None), ('fixVsanObjects', 'FixVsanObjects', 'vim.version.version10', (('uuids', 'string[]', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('vsanScanObjects', 'VsanScanObjects_Task', 'vim.version.version11', (('version', 'long', 'vim.version.version11', 0 | F_OPTIONAL, None), ('fixobjects', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('addStoragePoolDisk', 'VsanAddHostStoragePoolDisk', 'vsan.version.version21', (('spec', 'vim.vsan.host.AddStoragePoolDiskSpec', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('deleteStoragePoolDisk', 'VsanDeleteHostStoragePoolDisk', 'vsan.version.version21', (('spec', 'vim.vsan.host.DeleteStoragePoolDiskSpec', 'vsan.version.version21', 0, None), ('timeout', 'int', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('queryStoragePoolDisks', 'VsanQueryHostStoragePoolDisks', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'vim.vsan.host.StoragePoolDiskInfo[]', 'vim.vsan.host.StoragePoolDiskInfo[]'), 'System.Read', None), ('updateStoragePoolDisk', 'VsanHostUpdateStoragePoolDisk', 'vsan.version.version21', (('spec', 'vim.vsan.host.UpdateStoragePoolDiskSpec', 'vsan.version.version21', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('unmountStoragePoolDisks', 'VsanUnmountHostStoragePoolDisks', 'vsan.version.version21', (('spec', 'vim.vsan.host.DeleteStoragePoolDiskSpec', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('queryVsanInaccessibleObjects', 'QueryVsanInaccessibleObjects', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanStretchedClusterSystem', 'VimHostVsanStretchedClusterSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('witnessJoinVsanCluster', 'VSANWitnessJoinVsanCluster', 'vim.version.version10', (('clusterUuid', 'string', 'vim.version.version10', 0, None), ('preferredFd', 'string', 'vim.version.version10', 0, None), ('disableVsanAllowed', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('witnessLeaveVsanCluster', 'VSANWitnessLeaveVsanCluster', 'vim.version.version10', tuple(), (0, 'void', 'void'), 'Host.Config.Storage', None), ('witnessSetPreferredFaultDomain', 'VSANWitnessSetPreferredFaultDomain', 'vim.version.version10', (('preferredFd', 'string', 'vim.version.version10', 0, None), ('clusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('clusterGetPreferredFaultDomain', 'VSANClusterGetPreferredFaultDomain', 'vim.version.version10', (('clusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VSANCmmdsPreferredFaultDomainInfo', 'vim.host.VSANCmmdsPreferredFaultDomainInfo'), 'System.Read', None), ('addUnicastAgent', 'VSANHostAddUnicastAgent', 'vim.version.version10', (('witnessAddress', 'string', 'vim.version.version10', 0, None), ('witnessPort', 'int', 'vim.version.version10', 0 | F_OPTIONAL, None), ('overwrite', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('witnessVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('UcastAgentUuid', 'string', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('nodeType', 'string', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('certThumbprint', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('removeUnicastAgent', 'VSANHostRemoveUnicastAgent', 'vim.version.version10', (('witnessAddress', 'string', 'vim.version.version10', 0, None), ('ignoreExistence', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('listUnicastAgent', 'VSANHostListUnicastAgent', 'vim.version.version10', tuple(), (0, 'string', 'string'), 'System.Read', None), ('listUnicastAgents', 'VSANHostListUnicastAgents', 'vsan.version.version12', tuple(), (0 | F_OPTIONAL, 'vim.host.VsanUnicastAgentInfo[]', 'vim.host.VsanUnicastAgentInfo[]'), 'System.Read', None), ('getStretchedClusterInfoFromCmmds', 'VSANHostGetStretchedClusterInfoFromCmmds', 'vim.version.version10', (('subClusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VSANStretchedClusterHostInfo[]', 'vim.host.VSANStretchedClusterHostInfo[]'), 'System.Read', None), ('getStretchedClusterCapability', 'VSANHostGetStretchedClusterCapability', 'vim.version.version10', tuple(), (0, 'vim.host.VSANStretchedClusterHostCapability', 'vim.host.VSANStretchedClusterHostCapability'), 'System.Read', None), ])
CreateManagedType('vim.VsanUpgradeSystemEx', 'VsanUpgradeSystemEx', 'vmodl.ManagedObject', 'vim.version.version10', [], [('performUpgrade', 'PerformVsanUpgradeEx', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('performObjectUpgrade', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('downgradeFormat', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('allowReducedRedundancy', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('excludeHosts', 'vim.HostSystem[]', 'vim.version.version10', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanDiskFormatConversionSpec', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('performUpgradePreflightAsyncCheck', 'PerformVsanUpgradePreflightAsyncCheck_Task', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ('downgradeFormat', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanDiskFormatConversionSpec', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('performUpgradePreflightCheck', 'PerformVsanUpgradePreflightCheckEx', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('downgradeFormat', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanDiskFormatConversionSpec', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanDiskFormatConversionCheckResult', 'vim.cluster.VsanDiskFormatConversionCheckResult'), 'System.Read', None), ('retrieveSupportedFormatVersion', 'RetrieveSupportedVsanFormatVersion', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'int', 'int'), 'System.Read', None), ('queryUpgradeStatus', 'VsanQueryUpgradeStatusEx', 'vim.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0, None), ), (0, 'vim.cluster.VsanUpgradeStatusEx', 'vim.cluster.VsanUpgradeStatusEx'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcClusterConfigSystem', 'VsanVcClusterConfigSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('reconfigureEx', 'VsanClusterReconfig', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('vsanReconfigSpec', 'vim.vsan.ReconfigSpec', 'vim.version.version10', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('getConfigInfoEx', 'VsanClusterGetConfig', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'vim.vsan.ConfigInfoEx', 'vim.vsan.ConfigInfoEx'), 'System.Read', None), ('rekeyEncryptedCluster', 'VsanEncryptedClusterRekey_Task', 'vsan.version.version3', (('encryptedCluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('deepRekey', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('allowReducedRedundancy', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('getRuntimeStats', 'VsanClusterGetRuntimeStats', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('stats', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.RuntimeStatsHostMap[]', 'vim.vsan.RuntimeStatsHostMap[]'), 'System.Read', None), ('queryClusterDrsStats', 'VsanQueryClusterDrsStats', 'vsan.version.version8', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version8', 0, None), ('vms', 'vim.VirtualMachine[]', 'vsan.version.version8', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.DrsStats[]', 'vim.vsan.host.DrsStats[]'), 'System.Read', None), ('findClusterByDatastoreUrl', 'VsanFindClusterByDatastoreUrl', 'vsan.version.version22', (('datastoreUrl', 'string', 'vsan.version.version22', 0, None), ), (0, 'vim.ClusterComputeResource', 'vim.ClusterComputeResource'), 'System.Read', None), ('getDataProtectionLoadBalancers', 'VsanGetDataProtectionLoadBalancers', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0, 'vim.vsan.DataProtectionLoadBalancersInfo', 'vim.vsan.DataProtectionLoadBalancersInfo'), 'System.Read', None), ('hciSetupWcpUiPlugin', 'HciSetupWcpUiPlugin', 'vsan.version.version13', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version13', 0, None), ('key', 'string', 'vsan.version.version13', 0, None), ('healthUrl', 'string', 'vsan.version.version13', 0, None), ('pluginInfo', 'vim.Extension.ServerInfo', 'vsan.version.version13', 0, None), ('version', 'string', 'vsan.version.version13', 0, None), ('server', 'string', 'vsan.version.version13', 0, None), ('samlHookUrls', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ('hciRemoveWcpUiPlugin', 'HciRemoveWcpUiPlugin', 'vsan.version.version13', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version13', 0, None), ('key', 'string', 'vsan.version.version13', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('validateConfigSpec', 'VsanValidateConfigSpec', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ('vsanReconfigSpec', 'vim.vsan.ReconfigSpec', 'vsan.version.version15', 0, None), ), (0 | F_OPTIONAL, 'vim.ClusterComputeResource.ValidationResultBase[]', 'vim.ClusterComputeResource.ValidationResultBase[]'), 'System.Read', None), ('runLifecycleCheck', 'RunLifecycleCheck', 'vsan.version.version17', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version17', 0, None), ('vsanLifecycleCheckSpec', 'vim.cluster.VsanVcLifecycleCheckSpec', 'vsan.version.version17', 0, None), ), (0, 'vim.cluster.VsanVcLifecycleCheckResult', 'vim.cluster.VsanVcLifecycleCheckResult'), 'System.Read', None), ('getHCIMeshDatastores', 'VsanGetHCIMeshDatastores', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('vcList', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.XvcDatastoreItem[]', 'vim.vsan.XvcDatastoreItem[]'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanClusterHealthSystem', 'VsanClusterHealthSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('queryVerifyClusterNetworkSettings', 'VsanQueryVerifyClusterNetworkSettings', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterNetworkHealthResult', 'vim.cluster.VsanClusterNetworkHealthResult'), 'System.Read', None), ('queryCheckLimits', 'VsanQueryClusterCheckLimits', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterLimitHealthResult', 'vim.cluster.VsanClusterLimitHealthResult'), 'System.Read', None), ('queryPhysicalDiskHealthSummary', 'VsanQueryClusterPhysicalDiskHealthSummary', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanPhysicalDiskHealthSummary[]', 'vim.host.VsanPhysicalDiskHealthSummary[]'), 'System.Read', None), ('queryAdvCfgSync', 'VsanQueryClusterAdvCfgSync', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('options', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterAdvCfgSyncResult[]', 'vim.cluster.VsanClusterAdvCfgSyncResult[]'), 'System.Read', None), ('queryClusterCreateVmHealthTest', 'VsanQueryClusterCreateVmHealthTest', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('timeout', 'int', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterCreateVmHealthTestResult', 'vim.cluster.VsanClusterCreateVmHealthTestResult'), 'System.Read', None), ('queryClusterNetworkPerfTest', 'VsanQueryClusterNetworkPerfTest', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('multicast', 'boolean', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterNetworkLoadTestResult', 'vim.cluster.VsanClusterNetworkLoadTestResult'), 'System.Read', None), ('queryCaptureVsanPcap', 'VsanQueryClusterCaptureVsanPcap', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('duration', 'int', 'vim.version.version9', 0, None), ('vmknic', 'vim.cluster.VsanClusterHostVmknicMapping[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeRawPcap', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeIgmp', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsMsgTypeFilter', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsPorts', 'int[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('clusterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanVsanClusterPcapResult', 'vim.cluster.VsanVsanClusterPcapResult'), 'System.Read', None), ('queryClusterHealthSystemVersions', 'VsanQueryClusterHealthSystemVersions', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHealthSystemVersionResult', 'vim.cluster.VsanClusterHealthSystemVersionResult'), 'System.Read', None), ('checkClusterClomdLiveness', 'VsanCheckClusterClomdLiveness', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterClomdLivenessResult', 'vim.cluster.VsanClusterClomdLivenessResult'), 'System.Read', None), ('checkClusterDpdLiveness', 'VsanCheckClusterDpdLiveness', 'vsan.version.version22', (('hosts', 'string[]', 'vsan.version.version22', 0 | F_OPTIONAL, None), ('esxRootPassword', 'string', 'vsan.version.version22', 0, None), ), (0, 'vim.cluster.VsanClusterDpdLivenessResult', 'vim.cluster.VsanClusterDpdLivenessResult'), 'System.Read', None), ('checkClusterArchivalAccessibility', 'VsanCheckClusterArchivalAccessibility', 'vsan.version.version22', (('hosts', 'string[]', 'vsan.version.version22', 0 | F_OPTIONAL, None), ('esxRootPassword', 'string', 'vsan.version.version22', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanArchivalAccessibilityResult[]', 'vim.host.VsanArchivalAccessibilityResult[]'), 'System.Read', None), ('repairClusterImmediateObjects', 'VsanRepairClusterImmediateObjects', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ('uuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterHealthSystemObjectsRepairResult', 'vim.cluster.VsanClusterHealthSystemObjectsRepairResult'), 'System.Read', None), ('getClusterHclInfo', 'VsanClusterGetHclInfo', 'vim.version.version9', (('hosts', 'string[]', 'vim.version.version9', 0, None), ('esxRootPassword', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHclInfo', 'vim.cluster.VsanClusterHclInfo'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanClusterMgmtInternalSystem', 'VsanClusterMgmtInternalSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('remediateVsanCluster', 'VsanRemediateVsanCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('remediateDataProtectionConfig', 'VsanRemediateDataProtectionConfig', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('remediateVsanHost', 'VsanRemediateVsanHost', 'vim.version.version9', (('host', 'vim.HostSystem', 'vim.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('remediateVc', 'VsanRemediateVc', 'vim.version.version9', tuple(), (0, 'vim.Task', 'vim.Task'), 'Datacenter.Reconfigure', None), ('reconfigProfiling', 'VsanReconfigProfiling', 'vsan.version.version3', (('enabled', 'boolean', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('retrieveProfilingTrace', 'VsanRetrieveProfilingTrace', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanClusterMgmtDebugSystem', 'VsanClusterMgmtDebugSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('getPersistedClusterState', 'VsanGetPersistedClusterState', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterPersistedState', 'vim.cluster.VsanClusterPersistedState'), 'System.Read', None), ('setStressOption', 'VsanClusterMgmtSetStressOption', 'vim.version.version9', (('key', 'string', 'vim.version.version9', 0, None), ('value', 'long', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('persistStressOptions', 'VsanClusterMgmtPersistStressOptions', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('clearStressOptions', 'VsanClusterMgmtClearStressOptions', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('getStats', 'VsanClusterMgmtGetStats', 'vim.version.version9', tuple(), (0, 'string', 'string'), 'System.Read', None), ('purgeAllPersistedState', 'VsanClusterMgmtPurgeAllPersistedState', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('serviceRestart', 'VsanClusterMgmtServiceRestart', 'vim.version.version9', tuple(), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('canPersistMaxClusterSize', 'VsanClusterMgmtCanPersistMaxClusterSize', 'vsan.version.version7', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version7', 0, None), ('data', 'string', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcDiskManagementSystem', 'VimClusterVsanVcDiskManagementSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('retrieveAllFlashCapability', 'RetrieveAllFlashCapability', 'vim.version.version10', (('host', 'vim.HostSystem', 'vim.version.version10', 0, None), ), (0, 'vim.vsan.host.VsanHostCapability', 'vim.vsan.host.VsanHostCapability'), 'System.Read', None), ('retrieveAllFlashCapabilities', 'RetrieveAllFlashCapabilities', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.VsanHostCapability[]', 'vim.vsan.host.VsanHostCapability[]'), 'System.Read', None), ('initializeDiskMappings', 'InitializeDiskMappings', 'vim.version.version10', (('spec', 'vim.vsan.host.DiskMappingCreationSpec', 'vim.version.version10', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryDiskMappings', 'QueryDiskMappings', 'vim.version.version10', (('host', 'vim.HostSystem', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.DiskMapInfoEx[]', 'vim.vsan.host.DiskMapInfoEx[]'), 'System.Read', None), ('queryVsanManagedDisks', 'QueryVsanManagedDisks', 'vsan.version.version15', (('host', 'vim.HostSystem', 'vsan.version.version15', 0, None), ('filterSpec', 'vim.vsan.host.QueryVsanDisksSpec', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.host.VsanManagedDisksInfo', 'vim.vsan.host.VsanManagedDisksInfo'), 'System.Read', None), ('queryVsanManagedStorageTypes', 'QueryVsanManagedStorageTypes', 'vsan.version.version19', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version19', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.cluster.VsanManagedStorageInfo[]', 'vim.vsan.cluster.VsanManagedStorageInfo[]'), 'System.Read', None), ('queryClusterDataEfficiencyCapacityState', 'QueryClusterDataEfficiencyCapacityState', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'vim.vsan.DataEfficiencyCapacityState', 'vim.vsan.DataEfficiencyCapacityState'), 'System.Read', None), ('rebuildDiskMapping', 'RebuildDiskMapping', 'vsan.version.version9', (('host', 'vim.HostSystem', 'vsan.version.version9', 0, None), ('mapping', 'vim.vsan.host.DiskMapping', 'vsan.version.version9', 0, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('unmountDiskMappingEx', 'UnmountDiskMappingEx', 'vsan.version.version14', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0, None), ('mappings', 'vim.vsan.host.DiskMapping[]', 'vsan.version.version14', 0, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version14', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeDiskMappingEx', 'RemoveDiskMappingEx', 'vsan.version.version14', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0, None), ('mappings', 'vim.vsan.host.DiskMapping[]', 'vsan.version.version14', 0, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version14', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeDiskEx', 'RemoveDiskEx', 'vsan.version.version14', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version14', 0, None), ('disks', 'vim.host.ScsiDisk[]', 'vsan.version.version14', 0, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version14', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('addStoragePoolDisks', 'VsanAddStoragePoolDisk', 'vsan.version.version21', (('specs', 'vim.vsan.host.AddStoragePoolDiskSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('deleteStoragePoolDisk', 'VsanDeleteStoragePoolDisk', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('spec', 'vim.vsan.host.DeleteStoragePoolDiskSpec', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('unmountStoragePoolDisks', 'VsanUnmountStoragePoolDisks', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('spec', 'vim.vsan.host.DeleteStoragePoolDiskSpec', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('getAddStoragePoolRunningTasksCnt', 'VsanGetAddStoragepoolRunningTasksCnt', 'vsan.version.version21', (('host', 'vim.HostSystem', 'vsan.version.version21', 0, None), ), (0, 'int', 'int'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcStretchedClusterSystem', 'VimClusterVsanVcStretchedClusterSystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('addWitnessHost', 'VSANVcAddWitnessHost', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0, None), ('preferredFd', 'string', 'vim.version.version10', 0, None), ('diskMapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0 | F_OPTIONAL, None), ('metadataMode', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('storagePoolSpec', 'vim.vsan.host.AddStoragePoolDiskSpec', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeWitnessHost', 'VSANVcRemoveWitnessHost', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL, None), ('witnessAddress', 'string', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('convertToStretchedCluster', 'VSANVcConvertToStretchedCluster', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('faultDomainConfig', 'vim.cluster.VSANStretchedClusterFaultDomainConfig', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0, None), ('preferredFd', 'string', 'vim.version.version10', 0, None), ('diskMapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0 | F_OPTIONAL, None), ('storagePoolSpec', 'vim.vsan.host.AddStoragePoolDiskSpec', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('setPreferredFaultDomain', 'VSANVcSetPreferredFaultDomain', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('preferredFd', 'string', 'vim.version.version10', 0, None), ('witnessHost', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getPreferredFaultDomain', 'VSANVcGetPreferredFaultDomain', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANPreferredFaultDomainInfo', 'vim.cluster.VSANPreferredFaultDomainInfo'), 'System.Read', None), ('reconcileUnicastAgents', 'VSANVcReconcileUnicastAgents', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('isWitnessHost', 'VSANVcIsWitnessHost', 'vim.version.version10', (('host', 'vim.HostSystem', 'vim.version.version10', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('getNumOfWitnessHosts', 'VSANVcGetNumOfWitnessHosts', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0, 'int', 'int'), 'System.Read', None), ('getWitnessHosts', 'VSANVcGetWitnessHosts', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANWitnessHostInfo[]', 'vim.cluster.VSANWitnessHostInfo[]'), 'System.Read', None), ('getStretchedClusterConfigIssues', 'VSANVcGetStretchedClusterConfigIssues', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANStretchedClusterConfigIssueInfo[]', 'vim.cluster.VSANStretchedClusterConfigIssueInfo[]'), 'System.Read', None), ('retrieveStretchedClusterHostCapability', 'VSANVcRetrieveStretchedClusterHostCapability', 'vim.version.version10', (('host', 'vim.HostSystem', 'vim.version.version10', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANStretchedClusterCapability', 'vim.cluster.VSANStretchedClusterCapability'), 'System.Read', None), ('retrieveStretchedClusterVcCapability', 'VSANVcRetrieveStretchedClusterVcCapability', 'vim.version.version10', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version10', 0, None), ('verifyAllConnected', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VSANStretchedClusterCapability[]', 'vim.cluster.VSANStretchedClusterCapability[]'), 'System.Read', None), ('isWitnessVirtualAppliance', 'VSANIsWitnessVirtualAppliance', 'vim.version.version11', (('hosts', 'vim.HostSystem[]', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanHostVirtualApplianceInfo[]', 'vim.host.VsanHostVirtualApplianceInfo[]'), 'System.Read', None), ('querySharedWitnessCompatibility', 'QuerySharedWitnessCompatibility', 'vsan.version.version15', (('sharedWitnessHost', 'vim.HostSystem', 'vsan.version.version15', 0, None), ('roboClusters', 'vim.ClusterComputeResource[]', 'vsan.version.version15', 0, None), ), (0, 'vim.vsan.SharedWitnessCompatibilityResult', 'vim.vsan.SharedWitnessCompatibilityResult'), 'System.Read', None), ('queryWitnessHostClusterInfo', 'QuerySharedWitnessClusterInfo', 'vsan.version.version15', (('witnessHost', 'vim.HostSystem', 'vsan.version.version15', 0, None), ('skipComponentsCount', 'boolean', 'vsan.version.version17', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.ClusterRuntimeInfo[]', 'vim.vsan.ClusterRuntimeInfo[]'), 'System.Read', None), ('replaceWitnessHostForClusters', 'VsanVcReplaceWitnessHostForClusters', 'vsan.version.version15', (('configSpec', 'vim.vsan.VsanVcStretchedClusterConfigSpec', 'vsan.version.version15', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('addWitnessHostForClusters', 'VsanVcAddWitnessHostForClusters', 'vsan.version.version15', (('configSpec', 'vim.vsan.VsanVcStretchedClusterConfigSpec', 'vsan.version.version15', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ])
CreateManagedType('vim.host.VsanRecoveryService', 'VimHostVsanRecoveryService', 'vmodl.ManagedObject', 'vim.version.version11', [], [('version', 'VsanRecoveryServiceVersion', 'vim.version.version11', tuple(), (0, 'string', 'string'), 'System.Read', None), ('setDummyCmmdsMode', 'VsanRecoveryServiceSetDummyCmmdsMode', 'vim.version.version11', (('db', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('getDummyCmmdsMode', 'VsanRecoveryServiceGetDummyCmmdsMode', 'vim.version.version11', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('createObject', 'VsanRecoveryCreateObject', 'vim.version.version11', (('objectProps', 'vim.host.VsanRecoveryObjectProps', 'vim.version.version11', 0, None), ('policy', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'Host.Config.Storage', None), ('recoverComponent', 'VsanRecoveryRecoverComponent', 'vim.version.version11', (('compInfo', 'vim.host.VsanRecoveryComponentInfo', 'vim.version.version11', 0, None), ('destUuid', 'string', 'vim.version.version11', 0, None), ('parent', 'string', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'Host.Config.Storage', None), ('recoverObject', 'VsanRecoveryRecoverObject', 'vim.version.version11', (('objectInfo', 'vim.host.VsanRecoveryObjectInfo', 'vim.version.version11', 0, None), ('destObjUuid', 'string', 'vim.version.version11', 0, None), ), (0, 'string', 'string'), 'Host.Config.Storage', None), ('getTaskStatus', 'VsanRecoveryGetTaskStatus', 'vim.version.version11', (('taskId', 'string', 'vim.version.version11', 0, None), ), (0, 'vim.host.VsanRecoveryStatus', 'vim.host.VsanRecoveryStatus'), 'System.Read', None), ('getAllObjectsStatus', 'VsanRecoveryGetAllObjectsStatus', 'vim.version.version11', (('flags', 'vim.host.VsanRecoveryFlags', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VsanRecoveryObjectInfo[]', 'vim.host.VsanRecoveryObjectInfo[]'), 'System.Read', None), ('getObjectProps', 'VsanRecoveryGetObjectProps', 'vim.version.version11', (('objectUuid', 'string', 'vim.version.version11', 0, None), ), (0, 'vim.host.VsanRecoveryObjectProps', 'vim.host.VsanRecoveryObjectProps'), 'System.Read', None), ('getObjectRecoveryInfo', 'VsanRecoveryGetObjectRecoveryInfo', 'vim.version.version11', (('objectUuid', 'string', 'vim.version.version11', 0, None), ('flags', 'vim.host.VsanRecoveryFlags', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0, 'vim.host.VsanRecoveryObjectInfo', 'vim.host.VsanRecoveryObjectInfo'), 'System.Read', None), ('getRecoverableComponents', 'VsanRecoveryGetRecoverableComponents', 'vim.version.version11', (('objectUuid', 'string', 'vim.version.version11', 0, None), ('flags', 'vim.host.VsanRecoveryFlags', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VsanRecoveryComponentInfo[]', 'vim.host.VsanRecoveryComponentInfo[]'), 'System.Read', None), ('getDiskUuidForLocalComp', 'VsanRecoveryGetDiskUuidForLocalComp', 'vim.version.version11', (('compUuid', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('getDiskAndHostForComp', 'VsanRecoveryGetDiskAndHostForComp', 'vim.version.version11', (('compUuid', 'string', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanRecoveryHostDiskInfo', 'vim.host.VsanRecoveryHostDiskInfo'), 'System.Read', None), ('deleteLocalComp', 'VsanRecoveryDeleteLsomCompLocal', 'vim.version.version11', (('compUuid', 'string', 'vim.version.version11', 0, None), ('diskUuid', 'string', 'vim.version.version11', 0, None), ('force', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Host.Config.Storage', None), ])
CreateManagedType('vim.cluster.VsanVcClusterHealthSystem', 'VsanVcClusterHealthSystem', 'vmodl.ManagedObject', 'vim.version.version9', [], [('queryVerifyClusterHealthSystemVersions', 'VsanVcClusterQueryVerifyHealthSystemVersions', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHealthSystemVersionResult', 'vim.cluster.VsanClusterHealthSystemVersionResult'), 'System.Read', None), ('queryObjectHealthSummary', 'VsanVcClusterQueryObjectHealthSummary', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjUuids', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('extraQuerySpec', 'vim.cluster.VsanClusterHealthQuerySpec', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('includeDataProtectionHealth', 'boolean', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VsanObjectOverallHealth', 'vim.host.VsanObjectOverallHealth'), 'System.Read', None), ('queryVerifyClusterNetworkSettings', 'VsanQueryVerifyVcClusterNetworkSettings', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterNetworkHealthResult', 'vim.cluster.VsanClusterNetworkHealthResult'), 'System.Read', None), ('queryCheckLimits', 'VsanQueryVcClusterCheckLimits', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterLimitHealthResult', 'vim.cluster.VsanClusterLimitHealthResult'), 'System.Read', None), ('queryPhysicalDiskHealthSummary', 'VsanQueryVcClusterPhysicalDiskHealthSummary', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanPhysicalDiskHealthSummary[]', 'vim.host.VsanPhysicalDiskHealthSummary[]'), 'System.Read', None), ('queryEncryptionHealthSummary', 'VsanQueryVcClusterEncryptionHealthSummary', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.cluster.VsanClusterEncryptionHealthSummary', 'vim.cluster.VsanClusterEncryptionHealthSummary'), 'System.Read', None), ('queryFileServiceHealthSummary', 'VsanClusterQueryFileServiceHealthSummary', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterFileServiceHealthSummary', 'vim.cluster.VsanClusterFileServiceHealthSummary'), 'System.Read', None), ('queryAdvCfgSync', 'VsanQueryVcClusterAdvCfgSync', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('options', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('includeAllAdvOptions', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('nonDefaultOnly', 'boolean', 'vsan.version.version8', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterAdvCfgSyncResult[]', 'vim.cluster.VsanClusterAdvCfgSyncResult[]'), 'System.Read', None), ('queryClusterCreateVmHealthTest', 'VsanQueryVcClusterCreateVmHealthTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('timeout', 'int', 'vim.version.version9', 0, None), ('datastore', 'vim.Datastore', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterCreateVmHealthTestResult', 'vim.cluster.VsanClusterCreateVmHealthTestResult'), 'System.Read', None), ('queryClusterHealthSummary', 'VsanQueryVcClusterHealthSummary', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('vmCreateTimeout', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeObjUuids', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('fields', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('fetchFromCache', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('perspective', 'vim.vsan.VsanHealthPerspective', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('hosts', 'vim.HostSystem[]', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanClusterHealthQuerySpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ('includeDataProtectionHealth', 'boolean', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterHealthSummary', 'vim.cluster.VsanClusterHealthSummary'), 'dynamic', None), ('queryClusterHealthSummaryTask', 'VsanQueryVcClusterHealthSummaryTask', 'vsan.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version9', 0, None), ('hosts', 'vim.HostSystem[]', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('includeDataProtectionHealth', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL, None), ('includeOnlineHealth', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryVsanObjExtAttrs', 'VsanQueryVcClusterObjExtAttrs', 'vsan.version.version7', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version7', 0, None), ('uuids', 'string[]', 'vsan.version.version7', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanObjectExtAttrs[]', 'vim.cluster.VsanObjectExtAttrs[]'), 'System.Read', None), ('queryAllSupportedHealthChecks', 'VsanQueryAllSupportedHealthChecks', 'vsan.version.version3', tuple(), (0, 'vim.cluster.VsanClusterHealthCheckInfo[]', 'vim.cluster.VsanClusterHealthCheckInfo[]'), 'System.Read', None), ('queryClusterNetworkPerfTest', 'VsanQueryVcClusterNetworkPerfTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('multicast', 'boolean', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterNetworkLoadTestResult', 'vim.cluster.VsanClusterNetworkLoadTestResult'), 'System.Read', None), ('queryClusterNetworkPerfTask', 'VsanQueryVcClusterNetworkPerfTask', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ('spec', 'vim.cluster.VsanClusterNetworkPerfTaskSpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('runVmdkLoadTest', 'VsanVcClusterRunVmdkLoadTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('runname', 'string', 'vim.version.version9', 0, None), ('durationSec', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('action', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryCaptureVsanPcap', 'VsanVcQueryClusterCaptureVsanPcap', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('duration', 'int', 'vim.version.version9', 0, None), ('vmknic', 'vim.cluster.VsanClusterHostVmknicMapping[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeRawPcap', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeIgmp', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsMsgTypeFilter', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('cmmdsPorts', 'int[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ('clusterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanVsanClusterPcapResult', 'vim.cluster.VsanVsanClusterPcapResult'), 'System.Read', None), ('prepareCluster', 'VsanHealthPrepareCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('feature', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'System.Read', None), ('uninstallCluster', 'VsanHealthUninstallCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('feature', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getClusterStatus', 'VsanHealthGetClusterStatus', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('feature', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('queryVsanClusterHealthConfig', 'VsanHealthQueryVsanClusterHealthConfig', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterHealthConfigs', 'vim.cluster.VsanClusterHealthConfigs'), 'System.Read', None), ('queryVsanClusterHealthCheckInterval', 'VsanHealthQueryVsanClusterHealthCheckInterval', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'int', 'int'), 'System.Read', None), ('setVsanClusterHealthCheckInterval', 'VsanHealthSetVsanClusterHealthCheckInterval', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('vsanClusterHealthCheckInterval', 'int', 'vim.version.version9', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('getVsanClusterSilentChecks', 'VsanHealthGetVsanClusterSilentChecks', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'System.Read', None), ('setVsanClusterSilentChecks', 'VsanHealthSetVsanClusterSilentChecks', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('addSilentChecks', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('removeSilentChecks', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('setVsanClusterTelemetryConfig', 'VsanHealthSetVsanClusterTelemetryConfig', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('vsanClusterHealthConfig', 'vim.cluster.VsanClusterHealthConfigs', 'vim.version.version9', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('testVsanClusterTelemetryProxy', 'VsanHealthTestVsanClusterTelemetryProxy', 'vim.version.version9', (('proxyConfig', 'vim.cluster.VsanClusterTelemetryProxyConfig', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('sendVsanTelemetry', 'VsanHealthSendVsanTelemetry', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('checkClomdLiveness', 'VsanVcClusterClomdLiveness', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ), (0, 'vim.cluster.VsanClusterClomdLivenessResult', 'vim.cluster.VsanClusterClomdLivenessResult'), 'System.Read', None), ('checkDpdLiveness', 'VsanVcClusterDpdLiveness', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0, 'vim.cluster.VsanClusterDpdLivenessResult', 'vim.cluster.VsanClusterDpdLivenessResult'), 'System.Read', None), ('checkDatastoreUsage', 'VsanVcClusterDatastoreUsage', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0, 'vim.cluster.VsanClusterDatastoreUsageResult', 'vim.cluster.VsanClusterDatastoreUsageResult'), 'System.Read', None), ('checkArchivalAccessibility', 'VsanVcClusterArchivalAccessibility', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0 | F_OPTIONAL, 'vim.host.VsanArchivalAccessibilityResult[]', 'vim.host.VsanArchivalAccessibilityResult[]'), 'System.Read', None), ('repairClusterObjectsImmediate', 'VsanHealthRepairClusterObjectsImmediate', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('uuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('preCheckClusterForManageExtension', 'VsanClusterHealthExtensionManagmentPreCheck', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('install', 'boolean', 'vim.version.version9', 0, None), ('feature', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanHealthExtMgmtPreCheckResult', 'vim.cluster.VsanHealthExtMgmtPreCheckResult'), 'System.Read', None), ('queryClusterCreateVmHealthHistoryTest', 'VsanQueryVcClusterCreateVmHealthHistoryTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('datastore', 'vim.Datastore', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterCreateVmHealthTestResult[]', 'vim.cluster.VsanClusterCreateVmHealthTestResult[]'), 'System.Read', None), ('queryClusterNetworkPerfHistoryTest', 'VsanQueryVcClusterNetworkPerfHistoryTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('spec', 'vim.cluster.VsanClusterNetworkPerfTaskSpec', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterNetworkLoadTestResult[]', 'vim.cluster.VsanClusterNetworkLoadTestResult[]'), 'System.Read', None), ('queryClusterVmdkLoadHistoryTest', 'VsanQueryVcClusterVmdkLoadHistoryTest', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('taskId', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterVmdkLoadTestResult[]', 'vim.cluster.VsanClusterVmdkLoadTestResult[]'), 'System.Read', None), ('queryClusterVmdkWorkloadTypes', 'VsanQueryVcClusterVmdkWorkloadTypes', 'vim.version.version9', tuple(), (0, 'vim.cluster.VsanStorageWorkloadType[]', 'vim.cluster.VsanStorageWorkloadType[]'), 'System.Read', None), ('queryAttachToSrHistory', 'VsanQueryAttachToSrHistory', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('count', 'int', 'vim.version.version9', 0 | F_OPTIONAL, None), ('taskId', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanAttachToSrOperation[]', 'vim.cluster.VsanAttachToSrOperation[]'), 'System.Read', None), ('attachVsanSupportBundleToSr', 'VsanAttachVsanSupportBundleToSr', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('srNumber', 'string', 'vim.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Global.Diagnostics', None), ('getClusterHclInfo', 'VsanVcClusterGetHclInfo', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeHostsResult', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL, None), ('includeVendorInfo', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('esxRelease', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('querySpec', 'vim.vsan.VsanHclQuerySpec', 'vsan.version.version19', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanClusterHclInfo', 'vim.cluster.VsanClusterHclInfo'), 'System.Read', None), ('getHclInfoForVsanEligibleDisks', 'VsanGetHclInfoForEligibleDisks', 'vsan.version.version21', (('querySpec', 'vim.vsan.VsanHclQuerySpec', 'vsan.version.version21', 0, None), ), (0, 'vim.cluster.VsanClusterHclInfo', 'vim.cluster.VsanClusterHclInfo'), 'System.Read', None), ('downloadHclFile', 'VsanDownloadHclFile_Task', 'vsan.version.version3', (('sha1sums', 'string[]', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Global.Settings', None), ('getClusterHclConstraints', 'VsanGetHclConstraints', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ('release', 'string', 'vsan.version.version12', 0, None), ), (0, 'vim.vsan.VsanHclReleaseConstraint', 'vim.vsan.VsanHclReleaseConstraint'), 'System.Read', None), ('getDiskHclConstraints', 'VsanGetDiskHclConstraints', 'vsan.version.version18', (('release', 'string', 'vsan.version.version18', 0 | F_OPTIONAL, None), ('diskModels', 'vim.vsan.VsanDiskModelInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanHclDiskConstraint[]', 'vim.vsan.VsanHclDiskConstraint[]'), 'System.Read', None), ('getClusterReleaseRecommendation', 'VsanGetReleaseRecommendation', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ('minor', 'string[]', 'vsan.version.version12', 0, None), ('major', 'string[]', 'vsan.version.version12', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanHclReleaseConstraint[]', 'vim.vsan.VsanHclReleaseConstraint[]'), 'System.Read', None), ('purgeHclFiles', 'VsanPurgeHclFiles', 'vsan.version.version3', (('sha1sums', 'string[]', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('downloadAndInstallVendorTool', 'VsanDownloadAndInstallVendorTool_Task', 'vsan.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Global.Settings', None), ('uploadHclDb', 'VsanVcUploadHclDb', 'vim.version.version9', (('db', 'string', 'vim.version.version9', 0, None), ), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('updateHclDbFromWeb', 'VsanVcUpdateHclDbFromWeb', 'vim.version.version9', (('url', 'string', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'Global.Settings', None), ('rebalanceCluster', 'VsanRebalanceCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('targetHosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('stopRebalanceCluster', 'VsanStopRebalanceCluster', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('targetHosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('isRebalanceRunning', 'VsanHealthIsRebalanceRunning', 'vim.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0, None), ('targetHosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('setLogLevel', 'VsanHealthSetLogLevel', 'vim.version.version9', (('level', 'vim.cluster.VsanHealthLogLevelEnum', 'vim.version.version9', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('querySmartStatsSummary', 'VsanQueryVcClusterSmartStatsSummary', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.host.VsanSmartStatsHostSummary[]', 'vim.host.VsanSmartStatsHostSummary[]'), 'System.Read', None), ('queryDataProtectionCfgSync', 'VsanQueryVcClusterDataProtectionCfgSync', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterDataProtectionCfgSyncResult[]', 'vim.cluster.VsanClusterDataProtectionCfgSyncResult[]'), 'System.Read', None), ('remediateDataProtectionConfigInCluster', 'VsanRemediateDataProtectionConfigInCluster', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryVsanProxyConfig', 'VsanHealthQueryVsanProxyConfig', 'vsan.version.version12', tuple(), (0, 'vim.cluster.VsanClusterTelemetryProxyConfig', 'vim.cluster.VsanClusterTelemetryProxyConfig'), 'System.Read', None), ('prepareClusterRebootWithNAMM', 'PrepareClusterRebootWithNAMM', 'vsan.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version11', 0, None), ('scheduleTime', 'int', 'vsan.version.version11', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('restoreClusterRebootWithNAMM', 'RestoreClusterRebootWithNAMM', 'vsan.version.version11', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version11', 0, None), ('scheduleTime', 'int', 'vsan.version.version11', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryClusterHistoricalHealth', 'VsanQueryClusterHistoricalHealth', 'vsan.version.version16', (('spec', 'vim.cluster.VsanHistoricalHealthQuerySpec', 'vsan.version.version16', 0, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterHealthSummary[]', 'vim.cluster.VsanClusterHealthSummary[]'), 'System.Read', None), ('setVsanVcgMappingForHwDevices', 'SetVsanVcgMappingForHwDevices', 'vsan.version.version18', (('spec', 'vim.vsan.VsanHwToVcgInfoMappingSpec', 'vsan.version.version18', 0, None), ), (0, 'boolean', 'boolean'), 'Global.Settings', None), ])
CreateManagedType('vim.cluster.VsanDataProtectionSpaceSystem', 'VsanDataProtectionSpaceSystem', 'vmodl.ManagedObject', 'vsan.version.version22', [], [('prepareDefrag', 'VsanPrepareDefrag', 'vsan.version.version22', (('cluster', 'vim.ComputeResource', 'vsan.version.version22', 0, None), ('vmxPath', 'string', 'vsan.version.version22', 0, None), ('diskPaths', 'string[]', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('cleanupDefrag', 'VsanCleanupDefrag', 'vsan.version.version22', (('cluster', 'vim.ComputeResource', 'vsan.version.version22', 0, None), ('vmxPath', 'string', 'vsan.version.version22', 0, None), ('diskPaths', 'string[]', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanUpdateManager', 'VsanUpdateManager', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanVibScan', 'VsanVibScan', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vibSpecs', 'vim.vsan.VsanVibSpec[]', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanVibScanResult[]', 'vim.vsan.VsanVibScanResult[]'), 'System.Read', None), ('vsanVibInstall', 'VsanVibInstall_Task', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vibSpecs', 'vim.vsan.VsanVibSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('scanResults', 'vim.vsan.VsanVibScanResult[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('firmwareSpecs', 'vim.host.VsanHclFirmwareUpdateSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('rolling', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('noSigCheck', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('vsanVibInstallPreflightCheck', 'VsanVibInstallPreflightCheck', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.VsanVibInstallPreflightStatus', 'vim.vsan.VsanVibInstallPreflightStatus'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanVcsaDeployerSystem', 'VsanVcsaDeployerSystem', 'vmodl.ManagedObject', 'vim.version.version11', [], [('prepareVsanForVcsa', 'VsanPrepareVsanForVcsa', 'vim.version.version11', (('spec', 'vim.vsan.VsanPrepareVsanForVcsaSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'VirtualMachine.Inventory.Create', None), ('postConfigForVcsa', 'VsanPostConfigForVcsa', 'vim.version.version11', (('spec', 'vim.vsan.VsanVcPostDeployConfigSpec', 'vim.version.version11', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Host.Inventory.EditCluster', None), ('validateDeploymentConfig', 'VsanValidateDeploymentConfig', 'vim.version.version11', (('vcConfig', 'vim.vsan.VsanVcsaDeploymentSpec', 'vim.version.version11', 0, None), ), (0, 'vim.vsan.VsanVcsaDeploymentSpecValidationResult', 'vim.vsan.VsanVcsaDeploymentSpecValidationResult'), 'System.Read', None), ('vcsaGetBootstrapProgress', 'VsanVcsaGetBootstrapProgress', 'vim.version.version11', (('taskId', 'string[]', 'vim.version.version11', 0, None), ), (0, 'vim.vsan.VsanVcsaDeploymentProgress[]', 'vim.vsan.VsanVcsaDeploymentProgress[]'), 'System.Read', None), ('convertDeploymentSpecFromJson', 'VsanConvertDeploymentSpecFromJson', 'vim.version.version11', (('vcConfigJson', 'string', 'vim.version.version11', 0, None), ), (0, 'vim.vsan.VsanVcsaDeploymentSpecValidationResult', 'vim.vsan.VsanVcsaDeploymentSpecValidationResult'), 'System.Read', None), ('vcsaGetBootstrapTasks', 'VsanVcsaGetBootstrapTasks', 'vim.version.version11', tuple(), (0 | F_OPTIONAL, 'vim.vsan.VsanVcsaBootstrapOntoVsanSpec[]', 'vim.vsan.VsanVcsaBootstrapOntoVsanSpec[]'), 'System.Read', None), ('vcsaCancelBootstrapTask', 'VsanVcsaCancelBootstrapTask', 'vim.version.version11', (('taskId', 'string', 'vim.version.version11', 0, None), ('deleteVm', 'boolean', 'vim.version.version11', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ])
CreateManagedType('vim.vsan.VsanVdsSystem', 'VsanVdsSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanVdsGetMigrationPlan', 'VsanVdsGetMigrationPlan', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0, None), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vdsName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vmnicDevices', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('infraVm', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vds', 'vim.dvs.VmwareDistributedVirtualSwitch', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('hosts', 'vim.HostSystem[]', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.VsanVdsMigrationPlan', 'vim.vsan.VsanVdsMigrationPlan'), 'System.Read', None), ('vsanVdsMigrateVss', 'VsanVdsMigrateVss', 'vsan.version.version3', (('cluster', 'vim.ComputeResource', 'vsan.version.version3', 0, None), ('migrationPlan', 'vim.vsan.VsanVdsMigrationPlan', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vdsName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vmnicDevices', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('infraVm', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ('vds', 'vim.dvs.VmwareDistributedVirtualSwitch', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('hosts', 'vim.HostSystem[]', 'vsan.version.version9', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('vsanVssMigrateVds', 'VsanVssMigrateVds', 'vsan.version.version7', (('cluster', 'vim.ComputeResource', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('hosts', 'vim.HostSystem[]', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('vds', 'vim.dvs.VmwareDistributedVirtualSwitch', 'vsan.version.version7', 0, None), ('vswitchName', 'string', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('vmnicDevices', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL, None), ('infraVm', 'vim.VirtualMachine[]', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('rollbackVdsToVss', 'VsanRollbackVdsToVss', 'vsan.version.version3', (('task', 'vim.Task', 'vsan.version.version3', 0, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ])
CreateManagedType('vim.vsan.VsanHostVdsSystem', 'VsanHostVdsSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanMigrateVmsToVds', 'VsanMigrateVmsToVds', 'vsan.version.version3', (('vmConfigSpecs', 'vim.vsan.VsanVmVdsMigrationSpec[]', 'vsan.version.version3', 0, None), ('vdsUuid', 'string', 'vsan.version.version3', 0, None), ('timeoutSec', 'long', 'vsan.version.version3', 0, None), ('revert', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'Network.Assign', None), ('vsanCompleteMigrateVmsToVds', 'VsanCompleteMigrateVmsToVds', 'vsan.version.version3', (('jobId', 'string', 'vsan.version.version3', 0, None), ('newState', 'string', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Network.Assign', None), ])
CreateManagedType('vim.VsanMassCollector', 'VsanMassCollector', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanRetrieveProperties', 'VsanRetrieveProperties', 'vsan.version.version3', (('massCollectorSpecs', 'vim.VsanMassCollectorSpec[]', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'vmodl.query.PropertyCollector.ObjectContent[]', 'vmodl.query.PropertyCollector.ObjectContent[]'), 'Global.Settings', None), ('vsanRetrievePropertiesJson', 'VsanRetrievePropertiesJson', 'vsan.version.version3', (('massCollectorSpecs', 'vim.VsanMassCollectorSpec[]', 'vsan.version.version3', 0, None), ), (0, 'string', 'string'), 'Global.Settings', None), ('retrieveLookupTable', 'RetrieveLookupTable', 'vsan.version.version3', tuple(), (0, 'string', 'string'), 'Global.Settings', None), ])
CreateManagedType('vim.host.VsanTaskTracker', 'VsanTaskTracker', 'vmodl.ManagedObject', 'vim.version.version11', [], [('getTaskStatus', 'VsanGetTaskStatus', 'vim.version.version11', tuple(), (0 | F_OPTIONAL, 'vmodl.query.PropertyCollector.ObjectContent[]', 'vmodl.query.PropertyCollector.ObjectContent[]'), 'System.Read', None), ('cancelTask', 'VsanCancelTask', 'vsan.version.version14', (('task', 'vim.Task', 'vsan.version.version14', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ])
CreateManagedType('vim.cluster.VsanCapabilitySystem', 'VsanCapabilitySystem', 'vmodl.ManagedObject', 'vim.version.version10', [], [('getCapabilities', 'VsanGetCapabilities', 'vim.version.version10', (('targets', 'vmodl.ManagedObject[]', 'vim.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanCapability[]', 'vim.cluster.VsanCapability[]'), 'System.Read', None), ])
CreateManagedType('vim.vsan.VsanResourceCheckSystem', 'VsanResourceCheckSystem', 'vmodl.ManagedObject', 'vsan.version.version10', [], [('performResourceCheck', 'VsanPerformResourceCheck', 'vsan.version.version10', (('resourceCheckSpec', 'vim.vsan.ResourceCheckSpec', 'vsan.version.version10', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getResourceCheckStatus', 'VsanGetResourceCheckStatus', 'vsan.version.version10', (('resourceCheckSpec', 'vim.vsan.ResourceCheckSpec', 'vsan.version.version10', 0 | F_OPTIONAL, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version10', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.ResourceCheckStatus', 'vim.vsan.ResourceCheckStatus'), 'System.Read', None), ('performResourceCheckOnHost', 'VsanHostPerformResourceCheck', 'vsan.version.version10', (('resourceCheckSpec', 'vim.vsan.ResourceCheckSpec', 'vsan.version.version10', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('cancelResourceCheckOnHost', 'VsanHostCancelResourceCheck', 'vsan.version.version10', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanPrecheckerSystem', 'VimHostVsanPrecheckerSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('complianceResourceCheck', 'ComplianceResourceCheck_Task', 'vsan.version.version3', tuple(), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('whatIfDecomCheck', 'WhatIfDecomCheck_Task', 'vsan.version.version21', (('entities', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ])
CreateManagedType('vim.VsanVcPrecheckerSystem', 'VsanVcPrecheckerSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('queryComplianceResourceCheckAsync', 'VsanQueryComplianceResourceCheckAsync_Task', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryDecomResourceCheckAsync', 'VsanQueryDecomResourceCheckAsync_Task', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('entities', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getResourceCheckStatus2', 'VsanGetResourceCheckStatus2', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('queryType', 'vim.vsan.cluster.ResourceQueryType', 'vsan.version.version21', 0, None), ('entities', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanComplianceResourceCheckStatus', 'vim.cluster.VsanComplianceResourceCheckStatus'), 'System.Read', None), ('getComplianceResourceCheckStatus', 'VsanGetComplianceResourceCheckStatus', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.cluster.VsanComplianceResourceCheckStatus', 'vim.cluster.VsanComplianceResourceCheckStatus'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanRemoteDatastoreSystem', 'VsanRemoteDatastoreSystem', 'vmodl.ManagedObject', 'vsan.version.version15', [], [('mountPrecheck', 'MountPrecheck', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ('datastore', 'vim.Datastore', 'vsan.version.version15', 0, None), ), (0, 'vim.vsan.MountPrecheckResult', 'vim.vsan.MountPrecheckResult'), 'Host.Config.Storage', None), ('remoteVcMountPrecheck', 'RemoteVcMountPrecheck', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('xvcDatastore', 'vim.vsan.XVCDatastoreInfo', 'vsan.version.version21', 0, None), ), (0, 'vim.vsan.MountPrecheckResult', 'vim.vsan.MountPrecheckResult'), 'Host.Config.Storage', None), ('updateHciMeshClientInfo', 'VsanUpdateHciMeshClientInfo', 'vsan.version.version21', (('clientInfoSpec', 'vim.vsan.XvcClientInfoSpec', 'vsan.version.version21', 0, None), ('operation', 'vim.vsan.HciMeshClientOperation', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.XvcServerUpdateResult[]', 'vim.vsan.XvcServerUpdateResult[]'), 'dynamic', None), ])
CreateManagedType('vim.vsan.HciMeshServer', 'VsanHciMeshServer', 'vmodl.ManagedObject', 'vsan.version.version21', [('config', 'vim.vsan.XVCDatastoreDetailedInfo', 'vsan.version.version21', 0, 'System.Read')], [])
CreateManagedType('vim.cluster.VsanVumSystem', 'VsanVumSystem', 'vmodl.ManagedObject', 'vsan.version.version4', [], [('setVsanVumConfig', 'SetVsanVumConfig', 'vsan.version.version21', (('configSpec', 'vim.cluster.VsanVumSystemConfigSpec', 'vsan.version.version21', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('getVsanVumConfig', 'GetVsanVumConfig', 'vsan.version.version4', tuple(), (0, 'vim.cluster.VsanVumSystemConfig', 'vim.cluster.VsanVumSystemConfig'), 'System.Read', None), ('fetchIsoDepotCookie', 'FetchIsoDepotCookie', 'vsan.version.version4', (('username', 'string', 'vsan.version.version4', 0, None), ('password', 'string', 'vsan.version.version4', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('updateHostFirmware', 'VsanHostUpdateFirmware', 'vsan.version.version9', (('host', 'vim.HostSystem', 'vsan.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('uploadReleaseDb', 'VsanVcUploadReleaseDb', 'vsan.version.version9', (('db', 'string', 'vsan.version.version9', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ])
CreateManagedType('vim.cluster.VsanFlrSession', 'VsanFlrSession', 'vmodl.ManagedObject', 'vsan.version.version22', [], [('queryVolumes', 'VsanFlrSessionQueryVolumes', 'vsan.version.version22', tuple(), (0, 'vim.cluster.VsanFlrQueryVolumesResult', 'vim.cluster.VsanFlrQueryVolumesResult'), 'System.Read', None), ('queryFile', 'VsanFlrSessionQueryFile', 'vsan.version.version22', (('spec', 'vim.cluster.VsanFlrQueryFileSpec', 'vsan.version.version22', 0, None), ), (0, 'vim.cluster.VsanFlrQueryFileResult', 'vim.cluster.VsanFlrQueryFileResult'), 'System.Read', None), ('retrieveFile', 'VsanFlrSessionRetrieveFile', 'vsan.version.version22', (('spec', 'vim.cluster.VsanFlrRetrieveFileSpec', 'vsan.version.version22', 0, None), ), (0, 'vim.cluster.VsanFlrRetrieveFileResult', 'vim.cluster.VsanFlrRetrieveFileResult'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanFlrService', 'VsanFlrService', 'vmodl.ManagedObject', 'vsan.version.version22', [], [('createSession', 'VsanFlrServiceCreateSession', 'vsan.version.version22', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version22', 0, None), ('spec', 'vim.cluster.VsanFlrSessionSpec', 'vsan.version.version22', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('destroySession', 'VsanFlrServiceDestroySession', 'vsan.version.version22', (('session', 'string', 'vsan.version.version22', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getState', 'VsanFlrServiceGetState', 'vsan.version.version22', (('session', 'vim.cluster.VsanFlrSession', 'vsan.version.version22', 0 | F_OPTIONAL, None), ), (0, 'vim.cluster.VsanFlrHealthState', 'vim.cluster.VsanFlrHealthState'), 'System.Read', None), ])
CreateManagedType('vim.vsan.VsanFileServiceSystem', 'VsanFileServiceSystem', 'vmodl.ManagedObject', 'vsan.version.version12', [], [('downloadFileServiceOvf', 'VsanDownloadFileServiceOvf', 'vsan.version.version12', (('downloadUrl', 'string', 'vsan.version.version12', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Global.VCServer', None), ('getOvfUrlThumbprint', 'VsanGetOvfUrlThumbprint', 'vsan.version.version19', (('ovfUrl', 'string', 'vsan.version.version19', 0, None), ), (0, 'string', 'string'), 'Global.VCServer', None), ('queryFileServiceOvfs', 'VsanQueryFileServiceOvfs', 'vsan.version.version12', tuple(), (0 | F_OPTIONAL, 'vim.vsan.VsanFileServiceOvfSpec[]', 'vim.vsan.VsanFileServiceOvfSpec[]'), 'Global.VCServer', None), ('findOvfDownloadUrl', 'VsanFindOvfDownloadUrl', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('queryDnsNamesFromIps', 'VsanQueryDnsNamesFromIps', 'vsan.version.version12', (('ips', 'string[]', 'vsan.version.version12', 0, None), ('dnsServerAddresses', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'string[]', 'string[]'), 'Global.VCServer', None), ('performFileServicePreflightCheck', 'VsanPerformFileServiceEnablePreflightCheck', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ('domainConfig', 'vim.vsan.FileServiceDomainConfig', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('network', 'vim.Network', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('scope', 'vim.vsan.FileServicePreflightCheckScope', 'vsan.version.version19', 0 | F_OPTIONAL, None), ('domainUuid', 'string', 'vsan.version.version19', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.VsanFileServicePreflightCheckResult', 'vim.vsan.VsanFileServicePreflightCheckResult'), 'System.Read', None), ('remediateFileService', 'VsanRemediateFileService', 'vsan.version.version12', (('config', 'vim.vsan.FileServiceConfig', 'vsan.version.version12', 0, None), ('createRootFs', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('createFileServiceDomain', 'VsanClusterCreateFsDomain', 'vsan.version.version12', (('domainConfig', 'vim.vsan.FileServiceDomainConfig', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('reconfigureFileServiceDomain', 'VsanClusterReconfigureFsDomain', 'vsan.version.version12', (('domainUuid', 'string', 'vsan.version.version12', 0, None), ('domainConfig', 'vim.vsan.FileServiceDomainConfig', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('deleteDomainConfigFields', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeFileServiceDomain', 'VsanClusterRemoveFsDomain', 'vsan.version.version12', (('domainUuid', 'string', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryFileServiceDomains', 'VsanClusterQueryFsDomains', 'vsan.version.version12', (('querySpec', 'vim.vsan.FileServiceDomainQuerySpec', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileServiceDomain[]', 'vim.vsan.FileServiceDomain[]'), 'System.Read', None), ('createFileShare', 'VsanCreateFileShare', 'vsan.version.version12', (('config', 'vim.vsan.FileShareConfig', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('reconfigureFileShare', 'VsanReconfigureFileShare', 'vsan.version.version12', (('shareUuid', 'string', 'vsan.version.version12', 0, None), ('config', 'vim.vsan.FileShareConfig', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('deleteLabelKeys', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('force', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeFileShare', 'VsanClusterRemoveShare', 'vsan.version.version12', (('shareUuid', 'string', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ('force', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryFileShares', 'VsanClusterQueryFileShares', 'vsan.version.version12', (('querySpec', 'vim.vsan.FileShareQuerySpec', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileShareQueryResult', 'vim.vsan.FileShareQueryResult'), 'System.Read', None), ('queryFileSharesInternal', 'VsanClusterQueryFileSharesInternal', 'vsan.version.version12', (('querySpec', 'vim.vsan.FileShareQuerySpec', 'vsan.version.version12', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileShareQueryResult', 'vim.vsan.FileShareQueryResult'), 'System.Read', None), ('upgradeFsvm', 'VsanUpgradeFsvm', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('publishFsvmStatus', 'VsanFileServicePublishFsvmStatus', 'vsan.version.version12', (('status', 'vim.vsan.FileServiceVMStatus', 'vsan.version.version12', 0, None), ), (0, 'boolean', 'boolean'), 'Host.Config.Storage', None), ('queryFsvmUpgradeStatus', 'VsanFileServiceQueryFsvmUpgradeStatus', 'vsan.version.version12', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('queryFileServiceConfigs', 'VsanQueryFileServiceConfigs', 'vsan.version.version15', (('keys', 'string[]', 'vsan.version.version15', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('convertConfigFormat', 'VsanFileServiceConvertConfigFormat', 'vsan.version.version15', (('configVersion', 'string', 'vsan.version.version15', 0, None), ('spec', 'vim.vsan.FileServiceConfigFormatSpec', 'vsan.version.version16', 0 | F_OPTIONAL, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('reconfigureAdvancedOptions', 'VsanFileServiceReconfigureAdvancedOptions', 'vsan.version.version15', (('config', 'vim.vsan.VsanFileServiceAdvancedConfig', 'vsan.version.version15', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('rebalanceFileService', 'VsanRebalanceFileService', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('checkFileServerBalance', 'VsanFileServiceCheckFileServerBalance', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('createFileShareSnapshot', 'VsanClusterCreateShareSnapshot', 'vsan.version.version16', (('config', 'vim.vsan.FileShareSnapshotConfig', 'vsan.version.version16', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('removeFileShareSnapshot', 'VsanClusterRemoveShareSnapshot', 'vsan.version.version16', (('shareUuid', 'string', 'vsan.version.version16', 0, None), ('snapshotName', 'string', 'vsan.version.version16', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryFileShareSnapshots', 'VsanClusterQueryShareSnapshots', 'vsan.version.version16', (('querySpec', 'vim.vsan.FileShareSnapshotQuerySpec', 'vsan.version.version16', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileShareSnapshotQueryResult', 'vim.vsan.FileShareSnapshotQueryResult'), 'System.Read', None), ('queryFileAnalyticsSnapshots', 'VsanClusterQueryFileAnalyticsSnapshots', 'vsan.version.version21', (('querySpec', 'vim.vsan.FileShareSnapshotQuerySpec', 'vsan.version.version21', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileShareSnapshotQueryResult', 'vim.vsan.FileShareSnapshotQueryResult'), 'System.Read', None), ('upgradeFileServiceOnHost', 'VsanUpgradeFileServiceOnHost', 'vsan.version.version16', (('targetVer', 'string', 'vsan.version.version16', 0, None), ('inParams', 'vmodl.KeyAnyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('startAntiVirusScan', 'VsanFileServiceStartAntiVirusScan', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('domainName', 'string', 'vsan.version.version21', 0, None), ('shareUuid', 'string', 'vsan.version.version21', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Storage', None), ('queryAntiVirusScan', 'VsanFileServiceQueryAntiVirusScan', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('querySpec', 'vim.vsan.FileShareAntiVirusScanQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileServiceAntiVirusScanResult[]', 'vim.vsan.VsanFileServiceAntiVirusScanResult[]'), 'Host.Config.Storage', None), ('performDomainConfigAdvancedCheck', 'PerformDomainConfigAdvancedCheck', 'vsan.version.version19', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version19', 0, None), ('domainConfig', 'vim.vsan.FileServiceDomainConfig', 'vsan.version.version19', 0, None), ('domainUuid', 'string', 'vsan.version.version19', 0 | F_OPTIONAL, None), ), (0, 'vim.vsan.VsanFileServerConfigCheckResult', 'vim.vsan.VsanFileServerConfigCheckResult'), 'System.Read', None), ('getLastFailureDomainConfig', 'GetLastFailureDomainConfig', 'vsan.version.version19', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version19', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileServiceLastFailureDomainConfigAndResult', 'vim.vsan.VsanFileServiceLastFailureDomainConfigAndResult'), 'System.Read', None), ])
CreateManagedType('vim.host.HostSpbm', 'HostSpbm', 'vmodl.ManagedObject', 'vsan.version.version15', [], [('pushPolicyInfo', 'HostSpbmPushPolicyInfo', 'vsan.version.version15', (('spbmPolicyInfo', 'vim.host.HostSpbmPolicyInfo[]', 'vsan.version.version15', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('pushDatastoreInfo', 'HostSpbmPushDatastoreInfo', 'vsan.version.version15', (('spbmDatastoreInfo', 'vim.host.HostSpbmDatastoreInfo[]', 'vsan.version.version15', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ('computeHashInfo', 'HostSpbmComputeHashInfo', 'vsan.version.version15', tuple(), (0, 'vim.host.HostSpbmHashInfo', 'vim.host.HostSpbmHashInfo'), 'Host.Config.Storage', None), ('retrieveAllPolicyInfo', 'HostSpbmRetrieveAllPolicyInfo', 'vsan.version.version15', tuple(), (0, 'vim.host.HostSpbmPolicyInfo[]', 'vim.host.HostSpbmPolicyInfo[]'), 'Host.Config.Storage', None), ('retrieveAllDatastoreInfo', 'HostSpbmRetrieveAllDatastoreInfo', 'vsan.version.version15', tuple(), (0, 'vim.host.HostSpbmDatastoreInfo[]', 'vim.host.HostSpbmDatastoreInfo[]'), 'Host.Config.Storage', None), ('fetchDefaultPolicyBlob', 'HostSpbmFetchDefaultPolicyBlob', 'vsan.version.version15', (('datastoreUrl', 'string', 'vsan.version.version15', 0, None), ), (0, 'string', 'string'), 'Host.Config.Storage', None), ('fetchApplicablePolicyBlob', 'HostSpbmFetchApplicablePolicyBlob', 'vsan.version.version15', (('profileId', 'string', 'vsan.version.version15', 0, None), ('datastoreUrl', 'string', 'vsan.version.version15', 0, None), ), (0, 'string', 'string'), 'Host.Config.Storage', None), ])
CreateManagedType('vim.cns.DebugManager', 'CnsDebugManager', 'vmodl.ManagedObject', 'vsan.version.version16', [], [('syncDatastore', 'CnsSyncDatastore', 'vsan.version.version16', (('datastoreUrl', 'string', 'vsan.version.version16', 0 | F_OPTIONAL, None), ('fullSync', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Cns.Searchable', None), ])
CreateManagedType('vim.cns.VolumeManager', 'CnsVolumeManager', 'vmodl.ManagedObject', 'vsan.version.version11', [], [('create', 'CnsCreateVolume', 'vsan.version.version11', (('createSpecs', 'vim.cns.VolumeCreateSpec[]', 'vsan.version.version11', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('updateVolumeMetadata', 'CnsUpdateVolumeMetadata', 'vsan.version.version11', (('updateSpecs', 'vim.cns.VolumeMetadataUpdateSpec[]', 'vsan.version.version11', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('delete', 'CnsDeleteVolume', 'vsan.version.version11', (('volumeIds', 'vim.cns.VolumeId[]', 'vsan.version.version11', 0, None), ('deleteDisk', 'boolean', 'vsan.version.version11', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('attach', 'CnsAttachVolume', 'vsan.version.version11', (('attachSpecs', 'vim.cns.VolumeAttachDetachSpec[]', 'vsan.version.version11', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('detach', 'CnsDetachVolume', 'vsan.version.version11', (('detachSpecs', 'vim.cns.VolumeAttachDetachSpec[]', 'vsan.version.version11', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('queryAsync', 'CnsQueryAsync', 'vsan.version.version18', (('filter', 'vim.cns.QueryFilter', 'vsan.version.version18', 0, None), ('selection', 'vim.cns.QuerySelection', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Cns.Searchable', None), ('query', 'CnsQueryVolume', 'vsan.version.version11', (('filter', 'vim.cns.QueryFilter', 'vsan.version.version11', 0, None), ('selection', 'vim.cns.QuerySelection', 'vsan.version.version17', 0 | F_OPTIONAL, None), ), (0, 'vim.cns.QueryResult', 'vim.cns.QueryResult'), 'Cns.Searchable', None), ('configureVolumeACLs', 'CnsConfigureVolumeACLs', 'vsan.version.version16', (('ACLConfigSpecs', 'vim.cns.VolumeACLConfigureSpec[]', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('extend', 'CnsExtendVolume', 'vsan.version.version11', (('extendSpecs', 'vim.cns.VolumeExtendSpec[]', 'vsan.version.version11', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('queryAll', 'CnsQueryAllVolume', 'vsan.version.version11', (('filter', 'vim.cns.QueryFilter', 'vsan.version.version11', 0, None), ('selection', 'vim.cns.QuerySelection', 'vsan.version.version11', 0, None), ), (0, 'vim.cns.QueryResult', 'vim.cns.QueryResult'), 'Cns.Searchable', None), ('searchLabels', 'CnsSearchLabels', 'vsan.version.version11', (('searchLabelSpec', 'vim.cns.SearchLabelSpec', 'vsan.version.version11', 0, None), ), (0, 'vim.cns.SearchLabelResult', 'vim.cns.SearchLabelResult'), 'Cns.Searchable', None), ('triggerFullSync', 'CnsTriggerFullSync', 'vsan.version.version11', tuple(), (0, 'void', 'void'), 'Cns.Searchable', None), ('getLastFullSyncTime', 'CnsGetLastFullSyncTime', 'vsan.version.version11', tuple(), (0, 'vmodl.DateTime', 'vmodl.DateTime'), 'Cns.Searchable', None), ('createSnapshots', 'CnsCreateSnapshots', 'vsan.version.version12', (('snapshotSpecs', 'vim.cns.SnapshotCreateSpec[]', 'vsan.version.version12', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('deleteSnapshots', 'CnsDeleteSnapshots', 'vsan.version.version12', (('snapshotDeleteSpecs', 'vim.cns.SnapshotDeleteSpec[]', 'vsan.version.version12', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('queryVolumeInfo', 'CnsQueryVolumeInfo', 'vsan.version.version14', (('volumes', 'vim.cns.VolumeId[]', 'vsan.version.version14', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('queryMetrics', 'CnsQueryMetrics', 'vsan.version.version15', (('filter', 'vim.cns.QueryMetricFilter', 'vsan.version.version15', 0, None), ('format', 'string', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('relocate', 'CnsRelocateVolume', 'vsan.version.version19', (('relocateSpecs', 'vim.cns.VolumeRelocateSpec[]', 'vsan.version.version19', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('querySnapshots', 'CnsQuerySnapshots', 'vsan.version.version19', (('snapshotQueryFilter', 'vim.cns.SnapshotQueryFilter', 'vsan.version.version19', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Cns.Searchable', None), ('reconfigPolicy', 'CnsReconfigVolumePolicy', 'vsan.version.version21', (('volumePolicyReconfigSpecs', 'vim.cns.VolumePolicyReconfigSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ])
CreateManagedType('vim.vsan.VsanFileServiceEndpointController', 'VsanFileServiceEndpointController', 'vmodl.ManagedObject', 'vsan.version.version15', [], [('epicNotifyHostOperation', 'VsanEpicNotifyHostOperation', 'vsan.version.version15', (('notificationHint', 'vim.vsan.VsanEpicOperationHint', 'vsan.version.version15', 0, None), ), (0 | F_OPTIONAL, 'object', 'object'), 'Host.Config.Storage', None), ('epicUpdateOperationResult', 'VsanEpicUpdateOperationResult', 'vsan.version.version15', (('operationResult', 'vim.vsan.VsanEpicOperationResult', 'vsan.version.version15', 0, None), ), (0, 'void', 'void'), 'Host.Config.Storage', None), ])
CreateManagedType('vim.vsan.VsanPolicyManager', 'VsanPolicyManager', 'vmodl.ManagedObject', 'vsan.version.version18', [], [('evaluateObjectSize', 'VsanEvaluateObjectSize', 'vsan.version.version18', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version18', 0 | F_OPTIONAL, None), ('npbs', 'vim.host.VsanInternalSystem.NewPolicyBatch[]', 'vsan.version.version18', 0 | F_OPTIONAL, None), ('ignoreSatisfiability', 'boolean', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.host.VsanInternalSystem.PolicySatisfiability[]', 'vim.host.VsanInternalSystem.PolicySatisfiability[]'), 'Global.VCServer', None), ])
CreateManagedType('vim.cluster.VsanDiagnosticsSystem', 'VsanDiagnosticsSystem', 'vmodl.ManagedObject', 'vsan.version.version16', [], [('queryNetworkDiagnostics', 'VsanQueryNetworkDiagnostics', 'vsan.version.version16', (('cluster', 'vim.ComputeResource', 'vsan.version.version16', 0, None), ('host', 'vim.HostSystem', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanNetworkDiagnostics[]', 'vim.cluster.VsanNetworkDiagnostics[]'), 'System.Read', None), ('getThresholds', 'VsanGetThresholds', 'vsan.version.version16', (('cluster', 'vim.ComputeResource', 'vsan.version.version16', 0, None), ('entityType', 'string', 'vsan.version.version16', 0 | F_OPTIONAL, None), ('metric', 'string', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanDiagnosticsThreshold[]', 'vim.cluster.VsanDiagnosticsThreshold[]'), 'System.Read', None), ('setThresholds', 'VsanSetThresholds', 'vsan.version.version16', (('cluster', 'vim.ComputeResource', 'vsan.version.version16', 0, None), ('thresholds', 'vim.cluster.VsanDiagnosticsThreshold[]', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.Diagnostics', None), ('startIODiagnosticsTask', 'StartIODiagnosticsTask', 'vsan.version.version18', (('targets', 'vim.vsan.IODiagnosticsTarget[]', 'vsan.version.version18', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version18', 0 | F_OPTIONAL, None), ('duration', 'long', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('queryIODiagnosticsInstances', 'QueryIODiagnosticsInstances', 'vsan.version.version18', (('querySpec', 'vim.vsan.IODiagnosticsInstanceQuerySpec', 'vsan.version.version18', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.IODiagnosticsInstance[]', 'vim.vsan.IODiagnosticsInstance[]'), 'System.Read', None), ('queryIODiagnosticsStats', 'QueryIODiagnosticsStats', 'vsan.version.version18', (('instanceName', 'string', 'vsan.version.version18', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.IODiagnosticsTargetStats[]', 'vim.vsan.IODiagnosticsTargetStats[]'), 'System.Read', None), ('stopVsanIODiagnostics', 'StopVsanIODiagnostics', 'vsan.version.version18', (('persistResult', 'boolean', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.Diagnostics', None), ('runIODiagnosticsPrecheck', 'RunIODiagnosticsPrecheck', 'vsan.version.version18', (('targets', 'vim.vsan.IODiagnosticsTarget[]', 'vsan.version.version18', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version18', 0, None), ), (0, 'vim.vsan.IODiagnosticsPrecheckResult', 'vim.vsan.IODiagnosticsPrecheckResult'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanHostEventsProcessor', 'VsanHostEventsProcessor', 'vmodl.ManagedObject', 'vsan.version.version15', [], [('startEventMonitoring', 'VsanAnalyticsStartEventMonitoring', 'vsan.version.version15', tuple(), (0, 'void', 'void'), 'System.Read', None), ('stopEventMonitoring', 'VsanAnalyticsStopEventMonitoring', 'vsan.version.version15', tuple(), (0, 'void', 'void'), 'System.Read', None), ('setEventQueueFullStatus', 'VsanAnalyticsSetEventQueueFullStatus', 'vsan.version.version15', tuple(), (0, 'void', 'void'), 'System.Read', None), ('setVcCollectionFlag', 'VsanAnalyticsSetVcCollectionFlag', 'vsan.version.version15', (('vcCollectionEnabled', 'boolean', 'vsan.version.version15', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('getVcCollectionFlag', 'VsanAnalyticsGetVcCollectionFlag', 'vsan.version.version15', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('clearEventQueueFullStatus', 'VsanAnalyticsClearEventQueueFullStatus', 'vsan.version.version15', tuple(), (0, 'void', 'void'), 'System.Read', None), ('isEventQueueFull', 'VsanAnalyticsIsEventQueueFull', 'vsan.version.version15', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('getEventsOverFlowCount', 'VsanAnalyticsGetEventsOverFlowCount', 'vsan.version.version15', tuple(), (0, 'int', 'int'), 'System.Read', None), ('collectEvents', 'VsanAnalyticsCollectHostEvents', 'vsan.version.version15', tuple(), (0, 'string', 'string'), 'System.Read', None), ('collectHostEventsSnapshot', 'VsanAnalyticsCollectHostEventsSnapshot', 'vsan.version.version15', (('snapshotType', 'vim.vsan.VsanAnalyticsEventSnapshotType', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.cluster.VsanVcEventsProcessor', 'VsanVcEventsProcessor', 'vmodl.ManagedObject', 'vsan.version.version15', [], [('startEventsDaemon', 'VsanVcAnalyticsStartEventsDaemon', 'vsan.version.version15', tuple(), (0, 'void', 'void'), 'Global.Settings', None), ('stopEventsDaemon', 'VsanVcAnalyticsStopEventsDaemon', 'vsan.version.version15', tuple(), (0, 'void', 'void'), 'Global.Settings', None), ('collectClusterEvents', 'VsanVcAnalyticsCollectClusterEvents', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('collectClusterSnapshot', 'VsanVcAnalyticsCollectClusterSnapshot', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ('snapshotType', 'vim.vsan.VsanAnalyticsEventSnapshotType', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('collectHostEvents', 'VsanVcAnalyticsCollectHostEvents', 'vsan.version.version15', (('host', 'vim.HostSystem', 'vsan.version.version15', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('sendClusterEvents', 'VsanVcAnalyticsSendClusterEvents', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('sendClusterSnapshot', 'VsanVcAnalyticsSendClusterSnapshot', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('sendHostEvents', 'VsanVcAnalyticsSendHostEvents', 'vsan.version.version15', (('host', 'vim.HostSystem', 'vsan.version.version15', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ])
CreateManagedType('vim.VsanPhoneHomeSystem', 'VsanPhoneHomeSystem', 'vmodl.ManagedObject', 'vsan.version.version3', [], [('vsanGetClusterPhoneHomeData', 'VsanGetClusterPhoneHomeData', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('vsanQueryCMMDSPhoneHomeData', 'VsanQueryCMMDSPhoneHomeData', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('queryTypes', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('queryVsanCloudHealthDiagnosticData', 'QueryVsanCloudHealthDiagnosticData', 'vsan.version.version3', tuple(), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('queryVsanCloudHealthProfilingData', 'QueryVsanCloudHealthProfilingData', 'vsan.version.version3', tuple(), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('queryVsanCloudHealthClusterHostsProfilingData', 'QueryVsanCloudHealthClusterHostsProfilingData', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('vsanCloudHealthRunDaemon', 'VsanCloudHealthRunDaemon', 'vsan.version.version3', tuple(), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Settings', None), ('vsanPhoneHomeStatus', 'VsanPhoneHomeStatus', 'vsan.version.version3', tuple(), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Settings', None), ('vsanPhoneHomeQueryPhysicalVsanDisks', 'VsanPhoneHomeQueryPhysicalVsanDisks', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ('props', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('vsanPerformOnlineHealthCheck', 'VsanPerformOnlineHealthCheck', 'vsan.version.version3', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version3', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('vsanSetPhoneHomeResourceId', 'VsanSetPhoneHomeResourceId', 'vsan.version.version3', (('resourceId', 'string', 'vsan.version.version3', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('vsanGetCoreDumpPartitionInfo', 'VsanGetCoreDumpPartitionInfo', 'vsan.version.version4', (('host', 'vim.HostSystem', 'vsan.version.version4', 0, None), ), (0, 'vim.host.DiskPartitionInfo', 'vim.host.DiskPartitionInfo'), 'System.Read', None), ('vsanQueryHostPatch', 'VsanQueryHostPatch', 'vsan.version.version4', (('host', 'vim.HostSystem', 'vsan.version.version4', 0, None), ), (0, 'vim.host.PatchManager.Result', 'vim.host.PatchManager.Result'), 'System.Read', None), ('vsanGetPhoneHomeObfuscationMap', 'VsanGetPhoneHomeObfuscationMap', 'vsan.version.version4', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version4', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanPhoneHomeGetEsxCliData', 'VsanPhoneHomeGetEsxCliData', 'vsan.version.version4', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version4', 0, None), ('cmds', 'string[]', 'vsan.version.version4', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanVcSetClusterLogsCatalog', 'VsanVcSetClusterLogsCatalog', 'vsan.version.version7', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version7', 0, None), ('logsCatalog', 'string', 'vsan.version.version7', 0, None), ('logsCatalogVersion', 'string', 'vsan.version.version7', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanVcQueryClusterLogsCatalogVersion', 'VsanVcQueryClusterLogsCatalogVersion', 'vsan.version.version7', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version7', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('vsanVcQueryClusterHostLogBundle', 'VsanVcQueryClusterHostLogBundle', 'vsan.version.version4', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version4', 0, None), ('manifests', 'string[]', 'vsan.version.version4', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanQueryClusterHostLogBundle', 'VsanQueryClusterHostLogBundle', 'vsan.version.version4', (('host', 'vim.HostSystem', 'vsan.version.version4', 0, None), ('manifests', 'string[]', 'vsan.version.version4', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanSetLastHostBundleCollectionTime', 'VsanSetLastHostBundleCollectionTime', 'vsan.version.version4', (('host', 'vim.HostSystem', 'vsan.version.version4', 0, None), ('lastCollectionTime', 'string', 'vsan.version.version4', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanResetLastHostBundleCollectionTime', 'VsanResetLastHostBundleCollectionTime', 'vsan.version.version4', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version4', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('vsanCountLogTraceLines', 'VsanCountLogTraceLines', 'vsan.version.version4', (('host', 'vim.HostSystem', 'vsan.version.version4', 0, None), ('countSpec', 'string', 'vsan.version.version4', 0, None), ('resetCollection', 'boolean', 'vsan.version.version4', 0 | F_OPTIONAL, None), ), (0, 'string', 'string'), 'System.Read', None), ('vsanQueryVcLogBundle', 'VsanQueryVcLogBundle', 'vsan.version.version9', (('manifests', 'string[]', 'vsan.version.version9', 0, None), ), (0, 'string', 'string'), 'Global.Diagnostics', None), ('vsanEnablePerfNetworkDiagnosticResults', 'VsanEnablePerfNetworkDiagnosticResults', 'vsan.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('vsanDisablePerfNetworkDiagnosticResults', 'VsanDisablePerfNetworkDiagnosticResults', 'vsan.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version9', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('vsanTriggerDiagnosticCollection', 'VsanTriggerDiagnosticCollection', 'vsan.version.version9', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version9', 0, None), ), (0, 'void', 'void'), 'System.Read', None), ('queryVsanCloudHealthStatus', 'QueryVsanCloudHealthStatus', 'vsan.version.version12', tuple(), (0 | F_OPTIONAL, 'vim.vsan.VsanCloudHealthStatus', 'vim.vsan.VsanCloudHealthStatus'), 'Global.Diagnostics', None), ('queryVsanHostVsiData', 'QueryVsanHostVsiData', 'vsan.version.version12', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0, None), ('pathSpec', 'string', 'vsan.version.version12', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('queryVsanHealthServiceFileHandlerCount', 'QueryVsanHealthServiceFileHandlerCount', 'vsan.version.version12', tuple(), (0, 'int', 'int'), 'Global.Diagnostics', None), ('queryCISServiceDomainType', 'QueryCISServiceDomainType', 'vsan.version.version12', tuple(), (0, 'string', 'string'), 'Global.Diagnostics', None), ('queryHCIMeshDatastores', 'QueryHCIMeshDatastores', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('vsanQueryClomToolData', 'VsanQueryClomToolData', 'vsan.version.version15', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0, None), ('entityList', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('vsanQueryCapability', 'VsanQueryCapability', 'vsan.version.version15', (('managedEntity', 'vim.ManagedEntity', 'vsan.version.version15', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'System.Read', None), ('queryVsanHealthServiceFileResourceLimits', 'QueryVsanHealthServiceFileResourceLimits', 'vsan.version.version16', tuple(), (0 | F_OPTIONAL, 'int[]', 'int[]'), 'Global.Diagnostics', None), ('queryAllVsanFileShareSnapshots', 'QueryAllVsanFileShareSnapshots', 'vsan.version.version16', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0, None), ('querySpec', 'vim.vsan.FileShareSnapshotQuerySpec', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileShareSnapshotQueryResult[]', 'vim.vsan.FileShareSnapshotQueryResult[]'), 'Global.Diagnostics', None), ('vsanQueryHistoricalHealthWrapper', 'VsanQueryHistoricalHealthWrapper', 'vsan.version.version16', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0, None), ('startTime', 'vmodl.DateTime', 'vsan.version.version16', 0 | F_OPTIONAL, None), ('endTime', 'vmodl.DateTime', 'vsan.version.version16', 0 | F_OPTIONAL, None), ('querySpec', 'vim.cluster.VsanHistoricalHealthQuerySpec', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanClusterHealthSummary[]', 'vim.cluster.VsanClusterHealthSummary[]'), 'Global.Diagnostics', None), ('vsanQueryIODiagnosticData', 'VsanQueryIODiagnosticData', 'vsan.version.version18', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version18', 0, None), ('startTime', 'vmodl.DateTime', 'vsan.version.version18', 0 | F_OPTIONAL, None), ('endTime', 'vmodl.DateTime', 'vsan.version.version18', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.IODiagnosticsTargetStats[]', 'vim.vsan.IODiagnosticsTargetStats[]'), 'Global.Diagnostics', None), ])
CreateManagedType('dp.vpx.ProtectionService', 'DataProtectionService', 'vmodl.ManagedObject', 'vsan.version.version16', [], [('setProtection', 'DpSetProtection', 'vsan.version.version16', (('spec', 'dp.vpx.ProtectOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('snapshot', 'DpSnapshot', 'vsan.version.version16', (('spec', 'dp.vpx.SnapshotOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('sync', 'DpSync', 'vsan.version.version16', (('spec', 'dp.vpx.SyncOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('cancelSnapshot', 'DpCancelSnapshot', 'vsan.version.version16', (('spec', 'dp.vpx.CancelSnapshotOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('retireSnapshot', 'DpRetireSnapshot', 'vsan.version.version16', (('spec', 'dp.vpx.RetireSnapshotOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('prepareRestore', 'DpPrepareRestore', 'vsan.version.version16', (('spec', 'dp.vpx.PrepareRestoreOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('commitRestore', 'DpCommitRestore', 'vsan.version.version16', (('spec', 'dp.vpx.CommitRestoreOpSpec', 'vsan.version.version16', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('queryProtectionSupport', 'DpQueryProtectionSupport', 'vsan.version.version16', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0, None), ), (0, 'dp.vpx.QueryProtectionSupportResult', 'dp.vpx.QueryProtectionSupportResult'), 'System.Read', None), ('enableProtectionServices', 'DpEnableProtectionServices', 'vsan.version.version16', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version16', 0, None), ('vendorProvider', 'string', 'vsan.version.version16', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'System.Read', None), ('getTaskInfo', 'DpGetTaskInfo', 'vsan.version.version16', (('taskRef', 'vim.Task', 'vsan.version.version16', 0, None), ), (0, 'vim.TaskInfo', 'vim.TaskInfo'), 'System.Read', None), ('queryProtectedEntityInfo', 'DpQueryProtection', 'vsan.version.version18', (('spec', 'dp.vpx.QueryProtectedEntityInfoOpSpec', 'vsan.version.version18', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'dynamic', None), ('queryMetrics', 'DpQueryMetrics', 'vsan.version.version21', (('spec', 'dp.vpx.QueryMetricsOpSpec', 'vsan.version.version21', 0, None), ), (0, 'string', 'string'), 'System.Read', None), ])
CreateManagedType('vim.VsanVcFileAnalyticsSystem', 'VsanVcFileAnalyticsSystem', 'vmodl.ManagedObject', 'vsan.version.version21', [], [('scanCluster', 'ScanCluster', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'Global.Diagnostics', None), ('getScanStatus', 'GetScanStatus', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileAnalyticsScanStatus', 'vim.vsan.FileAnalyticsScanStatus'), 'Global.Diagnostics', None), ('isFileAnalyticsFeatureSupported', 'IsFileAnalyticsFeatureSupported', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Global.Diagnostics', None), ('queryVsanVcFileAnalyticsReports', 'QueryVsanVcFileAnalyticsReports', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('querySpec', 'vim.vsan.VsanFileAnalyticsReportQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileAnalyticsReport[]', 'vim.vsan.VsanFileAnalyticsReport[]'), 'Global.Diagnostics', None), ('queryVsanVcFileShareRecentActivity', 'QueryVsanVcFileShareRecentActivity', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('querySpec', 'vim.vsan.VsanFileAnalyticsReportQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileAnalyticsRecentActivity[]', 'vim.vsan.VsanFileAnalyticsRecentActivity[]'), 'Global.Diagnostics', None), ('queryVsanVcFileShareDetails', 'QueryVsanVcFileShareDetails', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('querySpec', 'vim.vsan.VsanFileAnalyticsReportQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileAnalyticsFileShareDetails[]', 'vim.vsan.VsanFileAnalyticsFileShareDetails[]'), 'Global.Diagnostics', None), ('executeVcSqlStatements', 'ExecuteVcSqlStatements', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('qryList', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('setScanInterval', 'SetScanInterval', 'vsan.version.version21', (('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0, None), ('interval', 'int', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('runVcTestMethod', 'RunVcTestMethod', 'vsan.version.version21', (('methodName', 'string', 'vsan.version.version21', 0, None), ('methodParms', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('queryFileAnalyticsSnapshots', 'VsanClusterFAQueryFileAnalyticsSnapshots', 'vsan.version.version21', (('querySpec', 'vim.vsan.FileShareSnapshotQuerySpec', 'vsan.version.version21', 0, None), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.FileShareSnapshotQueryResult', 'vim.vsan.FileShareSnapshotQueryResult'), 'System.Read', None), ])
CreateManagedType('vim.host.VsanFileAnalyticsHostSystem', 'VsanFileAnalyticsHostSystem', 'vmodl.ManagedObject', 'vsan.version.version21', [], [('scanHostFileShare', 'ScanHostFileShare', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'vim.vsan.FileAnalyticsTaskStatusType', 'vim.vsan.FileAnalyticsTaskStatusType'), 'Global.Diagnostics', None), ('queryVsanHostFileAnalyticsReports', 'QueryVsanHostFileAnalyticsReports', 'vsan.version.version21', (('qrySpec', 'vim.vsan.VsanFileAnalyticsReportQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileAnalyticsReport[]', 'vim.vsan.VsanFileAnalyticsReport[]'), 'Global.Diagnostics', None), ('queryVsanHostFileShareRecentActivity', 'QueryVsanHostFileShareRecentActivity', 'vsan.version.version21', (('qrySpec', 'vim.vsan.VsanFileAnalyticsReportQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileAnalyticsRecentActivity[]', 'vim.vsan.VsanFileAnalyticsRecentActivity[]'), 'Global.Diagnostics', None), ('queryVsanHostFileShareDetails', 'QueryVsanHostFileShareDetails', 'vsan.version.version21', (('qrySpec', 'vim.vsan.VsanFileAnalyticsReportQuerySpec', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.VsanFileAnalyticsFileShareDetails[]', 'vim.vsan.VsanFileAnalyticsFileShareDetails[]'), 'Global.Diagnostics', None), ('executeHostSqlStatements', 'ExecuteHostSqlStatements', 'vsan.version.version21', (('stmt', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('getHostScanStatus', 'GetHostScanStatus', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'vim.vsan.FileAnalyticsTaskStatusType', 'vim.vsan.FileAnalyticsTaskStatusType'), 'Global.Diagnostics', None), ('getHostFailedShares', 'GetHostFailedShares', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'string[]', 'string[]'), 'Global.Diagnostics', None), ('getLastScanTime', 'GetLastScanTime', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'vim.vsan.FileAnalyticsScanStatus', 'vim.vsan.FileAnalyticsScanStatus'), 'Global.Diagnostics', None), ('getHostFileShareStats', 'GetHostFileShareStats', 'vsan.version.version21', (('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('consumeAllHostStats', 'ConsumeAllHostStats', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'vim.Task', 'vim.Task'), 'Global.Diagnostics', None), ('setFileShareDaemonState', 'SetFileShareDaemonState', 'vsan.version.version21', (('daemonType', 'string', 'vsan.version.version21', 0, None), ('daemonGoalState', 'string', 'vsan.version.version21', 0, None), ('sleepIntervalSec', 'int', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Global.Diagnostics', None), ('getFileshareStatsFromDb', 'GetFileshareStatsFromDb', 'vsan.version.version21', (('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('stopFileAnalyticsScanOnHost', 'StopFileAnalyticsScanOnHost', 'vsan.version.version21', tuple(), (0, 'void', 'void'), 'Global.Diagnostics', None), ('processFileShareStopScan', 'ProcessFileShareStopScan', 'vsan.version.version21', (('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Global.Diagnostics', None), ('getCurrentSnapshotId', 'GetCurrentSnapshotId', 'vsan.version.version21', (('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('getHostShareVolumeMap', 'GetHostShareVolumeMap', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('updateHostSnapshots', 'UpdateHostSnapshots', 'vsan.version.version21', (('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ('snapshotName', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'boolean', 'boolean'), 'Global.Diagnostics', None), ('runTestMethod', 'RunTestMethod', 'vsan.version.version21', (('methodName', 'string', 'vsan.version.version21', 0, None), ('methodParms', 'string', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ('getAllFileShareUuidsMap', 'GetAllFileShareUuidsMap', 'vsan.version.version21', tuple(), (0 | F_OPTIONAL, 'string', 'string'), 'Global.Diagnostics', None), ])
CreateManagedType('vim.cluster.VsanClusterPowerSystem', 'VsanClusterPowerSystem', 'vmodl.ManagedObject', 'vsan.version.version18', [], [('performClusterPowerAction', 'PerformClusterPowerAction', 'vsan.version.version18', (('cluster', 'vim.ComputeResource', 'vsan.version.version18', 0, None), ('spec', 'vim.cluster.PerformClusterPowerActionSpec', 'vsan.version.version18', 0, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Power Host.Inventory.EditCluster', None), ('queryClusterPowerContext', 'QueryClusterPowerContext', 'vsan.version.version18', (('cluster', 'vim.ComputeResource', 'vsan.version.version18', 0, None), ), (0, 'vim.cluster.ClusterPowerContext', 'vim.cluster.ClusterPowerContext'), 'System.Read', None), ('updateClusterPowerStatus', 'UpdateClusterPowerStatus', 'vsan.version.version18', (('cluster', 'vim.ComputeResource', 'vsan.version.version18', 0, None), ('status', 'vim.cluster.ClusterPowerStatus', 'vsan.version.version18', 0, None), ), (0, 'boolean', 'boolean'), 'System.Read', None), ('hostStartUpPrecheck', 'HostStartUpPrecheck', 'vsan.version.version18', tuple(), (0, 'vim.Task', 'vim.Task'), 'Host.Config.Power Host.Inventory.EditCluster', None), ])
CreateManagedType('vim.cluster.VsanVcgNotificationSystem', 'VsanVcgNotificationSystem', 'vmodl.ManagedObject', 'vsan.version.version21', [], [('queryVsanVcgSubscriptionInfo', 'VsanGetVsanVcgSubscriptionInfo', 'vsan.version.version21', (('clusters', 'vim.ClusterComputeResource[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.cluster.VsanVcVcgSubscriptionInfo', 'vim.cluster.VsanVcVcgSubscriptionInfo'), 'System.Read', None), ('checkNetworkConnection', 'VsanCheckNetworkConnection', 'vsan.version.version21', tuple(), (0, 'boolean', 'boolean'), 'System.Read', None), ('configureVcgNotificationService', 'VsanConfigureVcgNotificationService', 'vsan.version.version21', (('spec', 'vim.vsan.VsanVcgNotificationConfigSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'vim.Task', 'vim.Task'), 'Host.Inventory.EditCluster', None), ])
CreateManagedType('vim.cluster.VsanNotificationSystem', 'VsanNotificationSystem', 'vmodl.ManagedObject', 'vsan.version.version21', [], [('registerApplicationInstance', 'RegisterApplicationInstance', 'vsan.version.version21', (('applicationInstance', 'vim.vsan.ApplicationInstance', 'vsan.version.version21', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('unregisterApplicationInstance', 'UnregisterApplicationInstance', 'vsan.version.version21', (('applicationInstanceToken', 'string', 'vsan.version.version21', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('updateApplicationInstance', 'UpdateApplicationInstance', 'vsan.version.version21', (('applicationInstance', 'vim.vsan.ApplicationInstance', 'vsan.version.version21', 0, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('createOrUpdateObservableSpecs', 'UpdateObservableSpecs', 'vsan.version.version21', (('applicationInstanceToken', 'string', 'vsan.version.version21', 0, None), ('observableSpecs', 'vim.vsan.ObservableSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'System.Read', None), ('getObservableSpecs', 'GetObservableSpecs', 'vsan.version.version21', (('applicationInstanceToken', 'string', 'vsan.version.version21', 0, None), ('observableSpecIds', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0 | F_OPTIONAL, 'vim.vsan.ObservableSpec[]', 'vim.vsan.ObservableSpec[]'), 'System.Read', None), ('deleteObservableSpecs', 'DelteteObservableSpecs', 'vsan.version.version21', (('applicationInstanceToken', 'string', 'vsan.version.version21', 0, None), ('observableSpecIds', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.Settings', None), ('getSubscriptionStatus', 'GetSubscriptionStatus', 'vsan.version.version21', (('applicationInstanceToken', 'string', 'vsan.version.version21', 0, None), ), (0 | F_OPTIONAL, 'vim.vsan.ObservableSpecSubscription[]', 'vim.vsan.ObservableSpecSubscription[]'), 'System.Read', None), ('setSubscriptionStatus', 'SetSubscriptionStatus', 'vsan.version.version21', (('applicationInstanceToken', 'string', 'vsan.version.version21', 0, None), ('observableSpecSubscriptions', 'vim.vsan.ObservableSpecSubscription[]', 'vsan.version.version21', 0 | F_OPTIONAL, None), ), (0, 'void', 'void'), 'Global.Settings', None), ])
CreateDataType('vim.host.VsanHostFwComponent', 'VsanHostFwComponent', 'vmodl.DynamicData', 'vsan.version.version9', [('name', 'string', 'vsan.version.version9', 0), ('url', 'string', 'vsan.version.version9', 0 | F_OPTIONAL), ('sha1sum', 'string', 'vsan.version.version9', 0 | F_OPTIONAL), ('currentVersion', 'string', 'vsan.version.version9', 0 | F_OPTIONAL), ('suggestedVersion', 'string', 'vsan.version.version9', 0 | F_OPTIONAL), ('componentID', 'string[]', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanDownloadItem', 'VsanDownloadItem', 'vmodl.DynamicData', 'vsan.version.version3', [('url', 'string', 'vsan.version.version3', 0), ('sha1sum', 'string', 'vsan.version.version3', 0), ('formatType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('itemId', 'string', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHclDriverInfo', 'VsanHclDriverInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('driverVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('driverLink', 'vim.vsan.VsanDownloadItem', 'vsan.version.version3', 0 | F_OPTIONAL), ('fwVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('fwLinks', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('toolsLinks', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('eula', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('driverType', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('driverName', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('diskModes', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('supportedFeatures', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostCimProviderInfo', 'VsanHostCimProviderInfo', 'vmodl.DynamicData', 'vim.version.version9', [('cimProviderSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('installedCIMProvider', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cimProviderOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('cimProviderLinksOnHcl', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclDiskInfo', 'VsanHclDiskInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('deviceName', 'string', 'vsan.version.version3', 0), ('model', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('isSsd', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('vsanDisk', 'boolean', 'vsan.version.version3', 0), ('issues', 'vmodl.MethodFault[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('remediableIssues', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('uuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('capacity', 'long', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanCompatibility', 'vim.vsan.VsanDiskCompatibilityType[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanBasicDeviceInfo', 'VsanBasicDeviceInfo', 'vmodl.DynamicData', 'vsan.version.version12', [('deviceName', 'string', 'vsan.version.version12', 0), ('pciId', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('fwVersion', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('features', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclCommonDeviceInfo', 'VsanHclCommonDeviceInfo', 'vmodl.DynamicData', 'vsan.version.version7', [('deviceName', 'string', 'vsan.version.version7', 0), ('displayName', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('driverName', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('driverVersion', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('vendorId', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('deviceId', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('subVendorId', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('subDeviceId', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('extraInfo', 'vim.KeyValue[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('deviceOnHcl', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('releaseSupported', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('releasesOnHcl', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('driverVersionsOnHcl', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('driverVersionSupported', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('fwVersionSupported', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('fwVersionOnHcl', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('fwVersion', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('driversOnHcl', 'vim.vsan.VsanHclDriverInfo[]', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVcgDeviceInfo', 'VsanVcgDeviceInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('vcgId', 'int', 'vsan.version.version18', 0), ('vcgModelName', 'string', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.host.DevicePciId', 'DevicePciId', 'vmodl.DynamicData', 'vsan.version.version18', [('vendorId', 'long', 'vsan.version.version18', 0), ('deviceId', 'long', 'vsan.version.version18', 0), ('subVendorId', 'long', 'vsan.version.version18', 0), ('subDeviceId', 'long', 'vsan.version.version18', 0)])
CreateDataType('vim.host.VsanHostHwDeviceId', 'VsanHostHwDeviceId', 'vmodl.DynamicData', 'vsan.version.version18', [('pciId', 'vim.host.DevicePciId', 'vsan.version.version18', 0), ('productId', 'string', 'vsan.version.version18', 0 | F_OPTIONAL), ('diskCapacity', 'long', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHwToVcgInfoMapping', 'VsanHwToVcgInfoMapping', 'vmodl.DynamicData', 'vsan.version.version18', [('vsanHostHwDeviceId', 'vim.host.VsanHostHwDeviceId', 'vsan.version.version18', 0), ('vcgId', 'int', 'vsan.version.version18', 0)])
CreateDataType('vim.host.VsanHclControllerInfo', 'VsanHclControllerInfo', 'vmodl.DynamicData', 'vim.version.version9', [('deviceName', 'string', 'vim.version.version9', 0), ('deviceDisplayName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('driverName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('driverVersion', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vendorId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('deviceId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('subVendorId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('subDeviceId', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('extraInfo', 'vim.KeyValue[]', 'vim.version.version9', 0 | F_OPTIONAL), ('deviceOnHcl', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('releaseSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('releasesOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('driverVersionsOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('driverVersionSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('fwVersionSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('fwVersionOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('cacheConfigSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('cacheConfigOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('raidConfigSupported', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('raidConfigOnHcl', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('fwVersion', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('raidConfig', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cacheConfig', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cimProviderInfo', 'vim.host.VsanHostCimProviderInfo', 'vim.version.version9', 0 | F_OPTIONAL), ('usedByVsan', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('disks', 'vim.host.VsanHclDiskInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('issues', 'vmodl.MethodFault[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('remediableIssues', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('driversOnHcl', 'vim.vsan.VsanHclDriverInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('fwAuxVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('queueDepth', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('queueDepthOnHcl', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('queueDepthSupported', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskMode', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskModeOnHcl', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskModeSupported', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('toolName', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('toolVersion', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('productId', 'string', 'vsan.version.version18', 0 | F_OPTIONAL), ('diskCapacity', 'long', 'vsan.version.version18', 0 | F_OPTIONAL), ('vcgEntryInfo', 'vim.host.VsanVcgDeviceInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('controllerType', 'vim.host.VsanControllerType', 'vsan.version.version18', 0 | F_OPTIONAL), ('userSelectedVcgId', 'int', 'vsan.version.version18', 0 | F_OPTIONAL), ('vcgSubscriptionState', 'vim.host.VsanVcgSubscribeState', 'vsan.version.version21', 0 | F_OPTIONAL), ('vcgSubscriptionDate', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('vcgSubscriptionFailure', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanCompatibility', 'vim.vsan.VsanConfigType[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNicRdmaInfo', 'VsanNicRdmaInfo', 'vmodl.DynamicData', 'vsan.version.version16', [('rdmaCapable', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL), ('rdmaProtocolCapable', 'vim.host.RdmaProtocol', 'vsan.version.version16', 0 | F_OPTIONAL), ('dcbEnabled', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL), ('dcbMode', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('pfcEnabled', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL), ('pfcConfig', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclNicInfo', 'VsanHclNicInfo', 'vim.host.VsanHclCommonDeviceInfo', 'vsan.version.version7', [('vmknic', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('useByVsan', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL), ('rdmaConfig', 'vim.host.VsanNicRdmaInfo', 'vsan.version.version16', 0 | F_OPTIONAL), ('vsanHostCompatibility', 'vim.vsan.VsanConfigType[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('nicLinkSpeedInMbps', 'int', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclCpuInfo', 'VsanHclCpuInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('packageIndex', 'int', 'vsan.version.version21', 0), ('coreNumber', 'int', 'vsan.version.version21', 0), ('cpuid', 'string', 'vsan.version.version21', 0), ('model', 'string', 'vsan.version.version21', 0), ('series', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanHostCompatibility', 'vim.vsan.VsanConfigType[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclMemInfo', 'VsanHclMemInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('memorySize', 'long', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanHostCompatibility', 'vim.vsan.VsanConfigType[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHclComputeResource', 'VsanHclComputeResource', 'vmodl.DynamicData', 'vsan.version.version21', [('memory', 'vim.host.VsanHclMemInfo', 'vsan.version.version21', 0), ('cpus', 'vim.host.VsanHclCpuInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostHclInfo', 'VsanHostHclInfo', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('hclChecked', 'boolean', 'vim.version.version9', 0), ('releaseName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL), ('controllers', 'vim.host.VsanHclControllerInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('pnics', 'vim.host.VsanHclNicInfo[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('host', 'vim.HostSystem', 'vsan.version.version21', 0 | F_OPTIONAL), ('computeResource', 'vim.host.VsanHclComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanHostCompatibility', 'vim.vsan.VsanConfigType[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVibSpec', 'VsanVibSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('metaUrl', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('metaSha1Sum', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vibUrl', 'string', 'vsan.version.version3', 0), ('vibSha1Sum', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.host.VsanHclFirmwareFile', 'VsanHclFirmwareFile', 'vmodl.DynamicData', 'vsan.version.version3', [('fileType', 'string', 'vsan.version.version3', 0), ('filenameOrUrl', 'string', 'vsan.version.version3', 0), ('sha1sum', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.host.VsanHclFirmwareUpdateSpec', 'VsanHclFirmwareUpdateSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('hbaDevice', 'string', 'vsan.version.version3', 0), ('fwFiles', 'vim.host.VsanHclFirmwareFile[]', 'vsan.version.version3', 0), ('allowDowngrade', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('firmwareComponent', 'vim.host.VsanHostFwComponent[]', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanUpdateItem', 'VsanUpdateItem', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('type', 'vim.vsan.VsanUpdateItemType', 'vsan.version.version3', 0), ('name', 'string', 'vsan.version.version3', 0), ('version', 'string', 'vsan.version.version3', 0), ('existingVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('present', 'boolean', 'vsan.version.version3', 0), ('vibSpec', 'vim.vsan.VsanVibSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('vibType', 'vim.vsan.VsanVibType', 'vsan.version.version9', 0 | F_OPTIONAL), ('firmwareSpec', 'vim.host.VsanHclFirmwareUpdateSpec', 'vsan.version.version3', 0 | F_OPTIONAL), ('downloadInfo', 'vim.vsan.VsanDownloadItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('eula', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('adapter', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('key', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('impact', 'vim.vsan.VsanUpdateItemImpactType', 'vsan.version.version9', 0 | F_OPTIONAL), ('firmwareUnknown', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHclInfo', 'VsanClusterHclInfo', 'vmodl.DynamicData', 'vim.version.version9', [('hclDbLastUpdate', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('hclDbAgeHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanHostHclInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('updateItems', 'vim.vsan.VsanUpdateItem[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('hclDbAbsent', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanCompliantDriver', 'VsanCompliantDriver', 'vmodl.DynamicData', 'vsan.version.version12', [('driverName', 'string', 'vsan.version.version12', 0), ('driverVersion', 'string', 'vsan.version.version12', 0), ('supportedFeatures', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanCompliantFirmware', 'VsanCompliantFirmware', 'vmodl.DynamicData', 'vsan.version.version12', [('firmwareVersion', 'string', 'vsan.version.version12', 0), ('compliantDrivers', 'vim.vsan.VsanCompliantDriver[]', 'vsan.version.version12', 0)])
CreateDataType('vim.vsan.VsanHostDeviceInfo', 'VsanHostDeviceInfo', 'vmodl.DynamicData', 'vsan.version.version12', [('hostname', 'string', 'vsan.version.version12', 0), ('devices', 'vim.host.VsanBasicDeviceInfo[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanDiskModelInfo', 'VsanDiskModelInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('productId', 'string', 'vsan.version.version18', 0), ('vendor', 'string', 'vsan.version.version18', 0), ('partNumber', 'string', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHclMinFwConstraint', 'VsanHclMinFwConstraint', 'vmodl.DynamicData', 'vsan.version.version18', [('vcgId', 'int', 'vsan.version.version18', 0), ('vcgLink', 'string', 'vsan.version.version18', 0), ('model', 'string', 'vsan.version.version18', 0), ('partner', 'string', 'vsan.version.version18', 0), ('partNumber', 'string', 'vsan.version.version18', 0 | F_OPTIONAL), ('release', 'string', 'vsan.version.version18', 0), ('firmware', 'string', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.VsanHclDeviceConstraint', 'VsanHclDeviceConstraint', 'vmodl.DynamicData', 'vsan.version.version12', [('pciId', 'string', 'vsan.version.version12', 0), ('vcgLink', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('similarVcgLinks', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('compliantFirmwares', 'vim.vsan.VsanCompliantFirmware[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('vcgId', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('model', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('partner', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('partNumber', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('release', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHclDiskConstraint', 'VsanHclDiskConstraint', 'vmodl.DynamicData', 'vsan.version.version18', [('productId', 'string', 'vsan.version.version18', 0), ('vendor', 'string', 'vsan.version.version18', 0), ('constraints', 'vim.vsan.VsanHclMinFwConstraint[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('pcieConstraints', 'vim.vsan.VsanHclDeviceConstraint[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('partNumber', 'string', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHclReleaseConstraint', 'VsanHclReleaseConstraint', 'vmodl.DynamicData', 'vsan.version.version12', [('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0), ('release', 'string', 'vsan.version.version12', 0), ('hostDevices', 'vim.vsan.VsanHostDeviceInfo[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('constraints', 'vim.vsan.VsanHclDeviceConstraint[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataEfficiencyConfig', 'VsanDataEfficiencyConfig', 'vmodl.DynamicData', 'vim.version.version10', [('dedupEnabled', 'boolean', 'vim.version.version10', 0), ('compressionEnabled', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.IpConfigEx', 'VsanHostIpConfigEx', 'vim.vsan.host.IpConfig', 'vim.version.version11', [('upstreamIpV6Address', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('downstreamIpV6Address', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.PortConfigEx', 'VsanHostPortConfigEx', 'vim.vsan.host.ConfigInfo.NetworkInfo.PortConfig', 'vim.version.version11', [('trafficTypes', 'vim.vsan.host.TrafficType[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.StoragePoolDisk', 'VsanStoragePoolDisk', 'vmodl.DynamicData', 'vsan.version.version21', [('diskName', 'string', 'vsan.version.version21', 0), ('diskType', 'vim.vsan.host.StoragePoolDiskType', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.host.AddStoragePoolDiskSpec', 'VsanAddStoragePoolDiskSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('host', 'vim.HostSystem', 'vsan.version.version21', 0), ('disks', 'vim.vsan.host.StoragePoolDisk[]', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.DataEncryptionConfig', 'VsanDataEncryptionConfig', 'vmodl.DynamicData', 'vsan.version.version3', [('encryptionEnabled', 'boolean', 'vsan.version.version3', 0), ('kmsProviderId', 'vim.encryption.KeyProviderId', 'vsan.version.version3', 0 | F_OPTIONAL), ('kekId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostKeyId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekGenerationId', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('changing', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('eraseDisksBeforeUse', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('wrappedDek', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('dekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('oldWrappedDek', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('oldDekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('kekVerifier', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('dekVerifier', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('oldDekVerifier', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('iv', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('syncing', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DirectoryServerConfig', 'VsanDirectoryServerConfig', 'vmodl.DynamicData', 'vsan.version.version15', [])
CreateDataType('vim.vsan.ActiveDirectoryServerConfig', 'ActiveVsanDirectoryServerConfig', 'vim.vsan.DirectoryServerConfig', 'vsan.version.version15', [('activeDirectoryDomainName', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('username', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('password', 'string', 'vsan.version.version15', 0 | F_OPTIONAL | F_SECRET), ('organizationalUnit', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileServiceIpConfig', 'VsanFileServiceIpConfig', 'vim.host.IpConfig', 'vsan.version.version12', [('fqdn', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('isPrimary', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL), ('gateway', 'string', 'vsan.version.version12', 0), ('affinityLocation', 'vim.vsan.VsanSiteLocationType', 'vsan.version.version16', 0 | F_OPTIONAL), ('ipv6Gateway', 'string', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileServiceAntiVirusConfig', 'FileServiceAntiVirusConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('icapServerPool', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('port', 'int', 'vsan.version.version21', 0), ('antiVirusServiceName', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.FileServiceDomainConfig', 'VsanFileServiceDomainConfig', 'vmodl.DynamicData', 'vsan.version.version12', [('name', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('dnsServerAddresses', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('dnsSuffixes', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServerIpConfig', 'vim.vsan.FileServiceIpConfig[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('directoryServerConfig', 'vim.vsan.DirectoryServerConfig', 'vsan.version.version15', 0 | F_OPTIONAL), ('version', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('network', 'vim.Network', 'vsan.version.version21', 0 | F_OPTIONAL), ('antiVirusConfig', 'vim.vsan.FileServiceAntiVirusConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileServiceConfig', 'VsanFileServiceConfig', 'vmodl.DynamicData', 'vsan.version.version12', [('enabled', 'boolean', 'vsan.version.version12', 0), ('fileServerMemoryMB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServerCPUMhz', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('fsvmMemoryMB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('fsvmCPU', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('network', 'vim.Network', 'vsan.version.version12', 0 | F_OPTIONAL), ('domains', 'vim.vsan.FileServiceDomainConfig[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileAnalyticsEnabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileServiceDomain', 'VsanFileServiceDomain', 'vmodl.DynamicData', 'vsan.version.version12', [('uuid', 'string', 'vsan.version.version12', 0), ('config', 'vim.vsan.FileServiceDomainConfig', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataInTransitEncryptionConfig', 'VsanDataInTransitEncryptionConfig', 'vmodl.DynamicData', 'vsan.version.version15', [('enabled', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('rekeyInterval', 'int', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanClusterMembershipInfo', 'VsanClusterMembershipInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('clusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('health', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('membershipUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('memberUuid', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.DataInTransitEncryptionInfo', 'VsanInTransitEncryptionInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('enabled', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('rekeyInterval', 'int', 'vsan.version.version15', 0 | F_OPTIONAL), ('transitionState', 'vim.vsan.host.EncryptionTransitionState', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.EncryptionInfo', 'VsanHostEncryptionInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('enabled', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('kekId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostKeyId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmipServers', 'vim.encryption.KmipServerSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsServerCerts', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('clientKey', 'string', 'vsan.version.version3', 0 | F_OPTIONAL | F_SECRET), ('clientCert', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekGenerationId', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('changing', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('eraseDisksBeforeUse', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('wrappedDek', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('dekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('oldWrappedDek', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('oldDekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('kekVerifier', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('dekVerifier', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('oldDekVerifier', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('iv', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('syncing', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ResyncIopsInfo', 'ResyncIopsInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('resyncIops', 'int', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.ClusterRuntimeInfo', 'ClusterRuntimeInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('clusterUuid', 'string', 'vsan.version.version15', 0), ('totalComponentsCount', 'int', 'vsan.version.version15', 0), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.RepairTimerInfo', 'RepairTimerInfo', 'vmodl.DynamicData', 'vsan.version.version9', [('maxTimeToRepair', 'int', 'vsan.version.version9', 0), ('minTimeToRepair', 'int', 'vsan.version.version9', 0), ('objectCount', 'int', 'vsan.version.version9', 0), ('objectCountWithRepairTimer', 'int', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ProactiveRebalanceInfo', 'VsanProactiveRebalanceInfo', 'vmodl.DynamicData', 'vsan.version.version11', [('enabled', 'boolean', 'vsan.version.version11', 0 | F_OPTIONAL), ('threshold', 'int', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.CapacityReservationInfo', 'VsanCapacityReservationInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('hostRebuildThreshold', 'vim.vsan.CapacityReservationState', 'vsan.version.version15', 0 | F_OPTIONAL), ('vsanOpSpaceThreshold', 'vim.vsan.CapacityReservationState', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ObjectScrubConfig', 'VsanObjectScrubConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('objectScrubRate', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('objectScrubRateBase', 'int', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanExtendedConfig', 'VsanExtendedConfig', 'vmodl.DynamicData', 'vsan.version.version7', [('objectRepairTimer', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('disableSiteReadLocality', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('enableCustomizedSwapObject', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('largeScaleClusterSupport', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('proactiveRebalanceInfo', 'vim.vsan.ProactiveRebalanceInfo', 'vsan.version.version11', 0 | F_OPTIONAL), ('capacityReservationInfo', 'vim.vsan.CapacityReservationInfo', 'vsan.version.version15', 0 | F_OPTIONAL), ('objectScrubConfig', 'vim.vsan.ObjectScrubConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanInternalExtendedConfig', 'VsanInternalExtendedConfig', 'vmodl.DynamicData', 'vsan.version.version11', [('vcMaxDiskVersion', 'int', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MetricProfile', 'VsanMetricProfile', 'vmodl.DynamicData', 'vsan.version.version12', [('authToken', 'string', 'vsan.version.version12', 0 | F_SECRET)])
CreateDataType('vim.vsan.MetricsConfig', 'VsanMetricsConfig', 'vmodl.DynamicData', 'vsan.version.version12', [('profiles', 'vim.vsan.MetricProfile[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataProtectionArchivalLocation', 'VsanDataProtectionArchivalLocation', 'vmodl.DynamicData', 'vsan.version.version22', [('datastoreUrl', 'string', 'vsan.version.version22', 0)])
CreateDataType('vim.vsan.DataProtectionLoadBalancerBasicInfo', 'DataProtectionLoadBalancerBasicInfo', 'vmodl.DynamicData', 'vsan.version.version22', [('hostUuid', 'string', 'vsan.version.version22', 0)])
CreateDataType('vim.vsan.DataProtectionLoadBalancerDetailedInfo', 'DataProtectionLoadBalancerDetailedInfo', 'vim.vsan.DataProtectionLoadBalancerBasicInfo', 'vsan.version.version22', [('url', 'string', 'vsan.version.version22', 0), ('thumbprint', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('publicKey', 'string', 'vsan.version.version22', 0)])
CreateDataType('vim.vsan.DataProtectionLoadBalancersInfo', 'DataProtectionLoadBalancersInfo', 'vmodl.DynamicData', 'vsan.version.version22', [('basicLoadBalancerInfo', 'vim.vsan.DataProtectionLoadBalancerBasicInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('detailedLoadBalancerInfo', 'vim.vsan.DataProtectionLoadBalancerDetailedInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataProtectionPeerSiteInfo', 'DataProtectionPeerSiteInfo', 'vmodl.DynamicData', 'vsan.version.version22', [('name', 'string', 'vsan.version.version22', 0), ('lookupServiceUrl', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('lookupServiceThumbprint', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('siteId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('nodeId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataProtectionPairingInfo', 'VsanDataProtectionPairingInfo', 'vmodl.DynamicData', 'vsan.version.version22', [('pairingId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('peerSite', 'vim.vsan.DataProtectionPeerSiteInfo', 'vsan.version.version22', 0 | F_OPTIONAL), ('peerClusterUuid', 'string', 'vsan.version.version22', 0), ('peerDatastoreUrl', 'string', 'vsan.version.version22', 0), ('localDatastoreUrl', 'string', 'vsan.version.version22', 0), ('peerClusterName', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('peerDatastoreName', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('localLoadBalancers', 'vim.vsan.DataProtectionLoadBalancerBasicInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('peerLoadBalancers', 'vim.vsan.DataProtectionLoadBalancerDetailedInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('deletePairing', 'boolean', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DataProtectionInfo', 'VsanDataProtectionInfo', 'vmodl.DynamicData', 'vsan.version.version22', [('archivalTarget', 'vim.vsan.DataProtectionArchivalLocation', 'vsan.version.version22', 0 | F_OPTIONAL), ('usageThreshold', 'int', 'vsan.version.version22', 0 | F_OPTIONAL), ('pairingInfo', 'vim.vsan.DataProtectionPairingInfo[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('incomingReplicationPort', 'int', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanUnicastAddressInfo', 'VsanUnicastAddressInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('address', 'string', 'vsan.version.version3', 0), ('port', 'int', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ServerHostUnicastInfo', 'VsanServerHostUnicastInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('hostUuid', 'string', 'vsan.version.version15', 0), ('unicastSpec', 'vim.cluster.VsanUnicastAddressInfo[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DatastoreSpec', 'VsanDatastoreSpec', 'vmodl.DynamicData', 'vsan.version.version5', [('uuid', 'string', 'vsan.version.version5', 0), ('name', 'string', 'vsan.version.version5', 0)])
CreateDataType('vim.vsan.host.ServerClusterUnicastInfo', 'VsanHostServerClusterUnicastInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('clusterUuid', 'string', 'vsan.version.version15', 0), ('unicastInfo', 'vim.vsan.ServerHostUnicastInfo[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.ServerClusterUnicastConfig', 'VsanHostServerClusterUnicastConfig', 'vmodl.DynamicData', 'vsan.version.version15', [('remoteUnicastConfig', 'vim.vsan.host.ServerClusterUnicastInfo[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.HciMeshServerConfig', 'VsanHciMeshServerConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('unicastInfo', 'vim.vsan.host.ServerClusterUnicastInfo', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.DatastoreConfig', 'VsanDatastoreConfig', 'vmodl.DynamicData', 'vsan.version.version5', [('datastores', 'vim.vsan.DatastoreSpec[]', 'vsan.version.version5', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.RemoteDatastoreConfig', 'VsanRemoteDatastoreConfig', 'vim.vsan.DatastoreSpec', 'vsan.version.version15', [('clusterUuid', 'string', 'vsan.version.version15', 0)])
CreateDataType('vim.vsan.AdvancedDatastoreConfig', 'VsanAdvancedDatastoreConfig', 'vim.vsan.DatastoreConfig', 'vsan.version.version15', [('remoteDatastores', 'vim.Datastore[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.XVCDatastoreInfo', 'VsanXVCDatastoreInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('datastore', 'vim.Datastore', 'vsan.version.version21', 0), ('ownerVc', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.XVCDatastoreConfig', 'VsanXVCDatastoreConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('xvcDatastores', 'vim.vsan.XVCDatastoreInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.XVCClientInfo', 'VsanXVCClientInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0), ('ownerVc', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.XvcClientConfig', 'VsanXvcClientConfig', 'vim.vsan.DatastoreSpec', 'vsan.version.version21', [('xvcClusters', 'vim.vsan.XVCClientInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ClientDatastoreConfig', 'VsanClientDatastoreConfig', 'vim.vsan.DatastoreSpec', 'vsan.version.version15', [('clusters', 'vim.ClusterComputeResource[]', 'vsan.version.version15', 0)])
CreateDataType('vim.vsan.VsanUnmapConfig', 'VsanUnmapConfig', 'vmodl.DynamicData', 'vsan.version.version9', [('enable', 'boolean', 'vsan.version.version9', 0)])
CreateDataType('vim.vsan.RdmaConfig', 'VsanRdmaConfig', 'vmodl.DynamicData', 'vsan.version.version16', [('rdmaEnabled', 'boolean', 'vsan.version.version16', 0)])
CreateDataType('vim.vsan.WitnessHostConfig', 'VsanWitnessHostConfig', 'vmodl.DynamicData', 'vsan.version.version10', [('subClusterUuid', 'string', 'vsan.version.version10', 0), ('preferredFaultDomainName', 'string', 'vsan.version.version10', 0), ('metadataMode', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanPMemConfig', 'VimVsanVsanPMemConfig', 'vmodl.DynamicData', 'vsan.version.version19', [('enabled', 'boolean', 'vsan.version.version19', 0)])
CreateDataType('vim.vsan.host.DiskResultEx', 'VimVsanHostDiskResultEx', 'vim.vsan.host.DiskResult', 'vsan.version.version18', [('vsanDirectTagged', 'boolean', 'vsan.version.version18', 0), ('storagePoolDiskState', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('storagePoolDiskError', 'vmodl.MethodFault', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanEsaConfig', 'VsanEsaConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('storagePoolSpecs', 'vim.vsan.host.AddStoragePoolDiskSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('hclDiskClaimEnabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanEsaConfigInfo', 'VsanEsaConfigInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('hclDiskClaimEnabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MetadataResiliencyConfig', 'VsanMetadataResiliencyConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('ddpRatio', 'vim.vsan.DdpRatioType', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.ConfigInfoEx', 'VsanHostConfigInfoEx', 'vim.vsan.host.ConfigInfo', 'vsan.version.version3', [('encryptionInfo', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('dataEfficiencyInfo', 'vim.vsan.DataEfficiencyConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('resyncIopsLimitInfo', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('extendedConfig', 'vim.vsan.VsanExtendedConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('datastoreInfo', 'vim.vsan.DatastoreConfig', 'vsan.version.version5', 0 | F_OPTIONAL), ('unmapConfig', 'vim.vsan.VsanUnmapConfig', 'vsan.version.version9', 0 | F_OPTIONAL), ('witnessHostConfig', 'vim.vsan.WitnessHostConfig[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('internalExtendedConfig', 'vim.vsan.VsanInternalExtendedConfig', 'vsan.version.version11', 0 | F_OPTIONAL), ('metricsConfig', 'vim.vsan.MetricsConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('unicastConfig', 'vim.vsan.host.ServerClusterUnicastConfig', 'vsan.version.version15', 0 | F_OPTIONAL), ('rdmaConfig', 'vim.vsan.RdmaConfig', 'vsan.version.version16', 0 | F_OPTIONAL), ('dataProtectionInfo', 'vim.vsan.DataProtectionInfo', 'vsan.version.version22', 0 | F_OPTIONAL), ('dataInTransitEncryptionInfo', 'vim.vsan.host.DataInTransitEncryptionInfo', 'vsan.version.version15', 0 | F_OPTIONAL), ('mode', 'vim.vsan.Mode', 'vsan.version.version16', 0 | F_OPTIONAL), ('metadataResiliencyConfig', 'vim.vsan.MetadataResiliencyConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanWhatIfEvacDetail', 'VsanWhatIfEvacDetail', 'vmodl.DynamicData', 'vsan.version.version3', [('success', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('bytesToSync', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('inaccessibleObjects', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('incompliantObjects', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('extraSpaceNeeded', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('failedDueToInaccessibleObjects', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanWhatIfEvacResult', 'VsanWhatIfEvacResult', 'vmodl.DynamicData', 'vsan.version.version3', [('noAction', 'vim.vsan.host.VsanWhatIfEvacDetail', 'vsan.version.version3', 0), ('ensureAccess', 'vim.vsan.host.VsanWhatIfEvacDetail', 'vsan.version.version3', 0), ('evacAllData', 'vim.vsan.host.VsanWhatIfEvacDetail', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanConfigGeneration', 'VsanConfigGeneration', 'vmodl.DynamicData', 'vsan.version.version4', [('vcUuid', 'string', 'vsan.version.version4', 0), ('genNum', 'long', 'vsan.version.version4', 0), ('genTime', 'long', 'vsan.version.version4', 0)])
CreateDataType('vim.vsan.host.RuntimeStats', 'VsanHostRuntimeStats', 'vmodl.DynamicData', 'vsan.version.version3', [('resyncIopsInfo', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('configGeneration', 'vim.cluster.VsanConfigGeneration', 'vsan.version.version4', 0 | F_OPTIONAL), ('supportedClusterSize', 'int', 'vsan.version.version7', 0 | F_OPTIONAL), ('repairTimerInfo', 'vim.vsan.RepairTimerInfo', 'vsan.version.version9', 0 | F_OPTIONAL), ('componentLimitPerCluster', 'int', 'vsan.version.version15', 0 | F_OPTIONAL), ('maxWitnessClusters', 'int', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.RuntimeStatsHostMap', 'VsanRuntimeStatsHostMap', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('stats', 'vim.vsan.host.RuntimeStats', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.AboutInfoEx', 'VsanHostAboutInfoEx', 'vmodl.DynamicData', 'vsan.version.version3', [('name', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('version', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('build', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('buildType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('apiVersion', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanComponentSyncState', 'VsanHostComponentSyncState', 'vmodl.DynamicData', 'vsan.version.version7', [('uuid', 'string', 'vsan.version.version7', 0), ('diskUuid', 'string', 'vsan.version.version7', 0), ('hostUuid', 'string', 'vsan.version.version7', 0), ('bytesToSync', 'long', 'vsan.version.version7', 0), ('recoveryETA', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('reasons', 'vim.vsan.VsanSyncReason[]', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanObjectSyncState', 'VsanHostVsanObjectSyncState', 'vmodl.DynamicData', 'vsan.version.version7', [('uuid', 'string', 'vsan.version.version7', 0), ('components', 'vim.vsan.host.VsanComponentSyncState[]', 'vsan.version.version7', 0)])
CreateDataType('vim.vsan.host.VsanSyncingObjectRecoveryDetails', 'VsanSyncingObjectRecoveryDetails', 'vmodl.DynamicData', 'vsan.version.version10', [('activelySyncingObjectRecoveryETA', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('queuedForSyncObjectRecoveryETA', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('suspendedObjectRecoveryETA', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('activeObjectsToSync', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('queuedObjectsToSync', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('suspendedObjectsToSync', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('bytesToSyncForActiveObjects', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('bytesToSyncForQueuedObjects', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('bytesToSyncForSuspendedObjects', 'long', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanSyncingObjectQueryResult', 'VsanHostVsanObjectSyncQueryResult', 'vmodl.DynamicData', 'vsan.version.version7', [('totalObjectsToSync', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('totalBytesToSync', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('totalRecoveryETA', 'long', 'vsan.version.version7', 0 | F_OPTIONAL), ('objects', 'vim.vsan.host.VsanObjectSyncState[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('syncingObjectRecoveryDetails', 'vim.vsan.host.VsanSyncingObjectRecoveryDetails', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.DrsStats', 'VsanHostDrsStats', 'vmodl.DynamicData', 'vsan.version.version8', [('host', 'vim.HostSystem', 'vsan.version.version8', 0), ('stats', 'vmodl.Binary', 'vsan.version.version8', 0), ('readLocalityPresented', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanAwsCredentials', 'VsanHostVsanAwsCredentials', 'vmodl.DynamicData', 'vsan.version.version8', [('region', 'string', 'vsan.version.version8', 0 | F_OPTIONAL), ('accessKeyId', 'string', 'vsan.version.version8', 0 | F_SECRET), ('secretAccessKey', 'string', 'vsan.version.version8', 0 | F_SECRET), ('sessionToken', 'string', 'vsan.version.version8', 0 | F_OPTIONAL | F_SECRET)])
CreateDataType('vim.vsan.host.VsanObjectProfileInfo', 'VsanObjectProfileInfo', 'vmodl.DynamicData', 'vsan.version.version9', [('vsanObjectUuid', 'string', 'vsan.version.version9', 0), ('spbmProfileId', 'string', 'vsan.version.version9', 0), ('spbmProfileGenerationNum', 'int', 'vsan.version.version9', 0)])
CreateDataType('vim.vsan.host.VsanAssociatedObjects', 'VsanHostAssociatedObjects', 'vmodl.DynamicData', 'vsan.version.version9', [('spbmProfileId', 'string', 'vsan.version.version9', 0), ('spbmProfileGenerationNum', 'int', 'vsan.version.version9', 0), ('vsanObjects', 'string[]', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanAssociatedObjectsResult', 'VsanHostAssociatedObjectsResult', 'vmodl.DynamicData', 'vsan.version.version9', [('data', 'vim.vsan.host.VsanAssociatedObjects[]', 'vsan.version.version9', 0), ('offset', 'int', 'vsan.version.version9', 0), ('limit', 'int', 'vsan.version.version9', 0)])
CreateDataType('vim.vsan.host.WipeDiskStatus', 'VsanHostWipeDiskStatus', 'vmodl.DynamicData', 'vsan.version.version15', [('disk', 'string', 'vsan.version.version15', 0), ('eligible', 'vim.vsan.host.WipeDiskEligible', 'vsan.version.version15', 0), ('ineligibleReason', 'vmodl.LocalizableMessage[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('wipeState', 'vim.vsan.host.WipeDiskState', 'vsan.version.version15', 0 | F_OPTIONAL), ('percentageCompleted', 'int', 'vsan.version.version15', 0 | F_OPTIONAL), ('estimatedTime', 'long', 'vsan.version.version15', 0 | F_OPTIONAL), ('wipeStartTime', 'vmodl.DateTime', 'vsan.version.version15', 0 | F_OPTIONAL), ('wipeCompleteTime', 'vmodl.DateTime', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.AbortWipeDiskStatus', 'VsanHostAbortWipeDiskStatus', 'vmodl.DynamicData', 'vsan.version.version15', [('disk', 'string', 'vsan.version.version15', 0), ('success', 'boolean', 'vsan.version.version15', 0), ('reason', 'vmodl.LocalizableMessage[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanComplianceQuerySpec', 'VsanComplianceQuerySpec', 'vmodl.DynamicData', 'vsan.version.version18', [('uuids', 'string[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('spbmProfileId', 'string', 'vsan.version.version18', 0 | F_OPTIONAL), ('spbmProfileGenerationId', 'int', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.PolicyStatus', 'VsanPolicyStatus', 'vmodl.DynamicData', 'vsan.version.version18', [('id', 'string', 'vsan.version.version18', 0), ('expectedValue', 'string', 'vsan.version.version18', 0), ('currentValue', 'string', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.host.ComplianceDetail', 'VsanComplianceDetail', 'vmodl.DynamicData', 'vsan.version.version18', [('objectUUID', 'string', 'vsan.version.version18', 0), ('complianceStatus', 'vim.vsan.host.ComplianceStatus', 'vsan.version.version18', 0), ('objectHealth', 'int', 'vsan.version.version18', 0), ('violatedPolicies', 'vim.vsan.host.PolicyStatus[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.ComplianceResult', 'VsanComplianceResult', 'vmodl.DynamicData', 'vsan.version.version18', [('checkTime', 'vmodl.DateTime', 'vsan.version.version18', 0), ('policyId', 'string', 'vsan.version.version18', 0 | F_OPTIONAL), ('policyGen', 'int', 'vsan.version.version18', 0 | F_OPTIONAL), ('objComplianceDetail', 'vim.vsan.host.ComplianceDetail[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.ClusterKeys', 'VsanClusterKeys', 'vmodl.DynamicData', 'vsan.version.version21', [('kekId', 'string', 'vsan.version.version21', 0), ('kekVerifier', 'string', 'vsan.version.version21', 0), ('wrappedDek', 'string', 'vsan.version.version21', 0), ('dekVerifier', 'string', 'vsan.version.version21', 0), ('oldWrappedDek', 'string', 'vsan.version.version21', 0), ('oldDekVerifier', 'string', 'vsan.version.version21', 0), ('hostKeyId', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.cluster.StorageOperationalStatus', 'VsanStorageOperationalStatus', 'vmodl.DynamicData', 'vim.version.version9', [('healthy', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('operationETA', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('operationProgress', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('transitional', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.StoragePolicyStatus', 'VsanStoragePolicyStatus', 'vmodl.DynamicData', 'vim.version.version9', [('id', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('expectedValue', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('currentValue', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.StorageComplianceResult', 'VsanStorageComplianceResult', 'vmodl.DynamicData', 'vim.version.version9', [('checkTime', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('profile', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('objectUUID', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('complianceStatus', 'vim.cluster.StorageComplianceStatus', 'vim.version.version9', 0), ('mismatch', 'boolean', 'vim.version.version9', 0), ('violatedPolicies', 'vim.cluster.StoragePolicyStatus[]', 'vim.version.version9', 0 | F_OPTIONAL), ('operationalStatus', 'vim.cluster.StorageOperationalStatus', 'vim.version.version9', 0 | F_OPTIONAL), ('objPolicyGenerationId', 'string', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostReference', 'VsanHostReference', 'vmodl.DynamicData', 'vsan.version.version3', [('hostname', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.host.VsanObjectHealthStateV2', 'VsanObjectHealthStateV2', 'vmodl.DynamicData', 'vsan.version.version21', [('complianceLevel', 'vim.host.VsanObjectHealthComplianceLevel', 'vsan.version.version21', 0 | F_OPTIONAL), ('incomplianceReason', 'vim.host.VsanObjectHealthIncomplianceReason', 'vsan.version.version21', 0 | F_OPTIONAL), ('rebuildState', 'vim.host.VsanObjectHealthRebuildState', 'vsan.version.version21', 0 | F_OPTIONAL), ('policyApplicationState', 'vim.host.VsanObjectHealthPolicyApplicationState', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanIperfClientSpec', 'VsanIperfClientSpec', 'vmodl.DynamicData', 'vsan.version.version15', [('Reverse', 'boolean', 'vsan.version.version15', 0)])
CreateDataType('vim.host.VsanHealthQuerySpec', 'VsanHealthQuerySpec', 'vmodl.DynamicData', 'vsan.version.version15', [('includeAllRemoteClusters', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('remoteClusterUuids', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('latencyOnly', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('mode', 'vim.vsan.Mode', 'vsan.version.version16', 0 | F_OPTIONAL), ('objectHealthVersion', 'vim.host.VsanObjectHealthVersion', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanProactiveRebalanceInfoEx', 'VsanProactiveRebalanceInfoEx', 'vmodl.DynamicData', 'vim.version.version9', [('running', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('startTs', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('stopTs', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('varianceThreshold', 'float', 'vim.version.version9', 0 | F_OPTIONAL), ('timeThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('rateThreshold', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanQueryResultHostInfo', 'VsanQueryResultHostInfo', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('hostnameInCmmds', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanIpv4Addresses', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNetworkPeerHealthResult', 'VsanNetworkPeerHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('peer', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('peerHostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('peerVmknicName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('smallPingTestSuccessPct', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('largePingTestSuccessPct', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('maxLatencyUs', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('onSameIpSubnet', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('sourceVmknicName', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanServerClusterInfo', 'VsanServerClusterInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL), ('peerHealth', 'vim.host.VsanNetworkPeerHealthResult[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('membership', 'vim.host.VsanClusterMembershipInfo', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNetworkHealthResult', 'VsanNetworkHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('host', 'vim.HostSystem', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanVmknicPresent', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('ipSubnets', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('peerHealth', 'vim.host.VsanNetworkPeerHealthResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('vMotionHealth', 'vim.host.VsanNetworkPeerHealthResult[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('multicastConfig', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('unicastConfig', 'string', 'vsan.version.version4', 0 | F_OPTIONAL), ('inUnicast', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('rdmaEnabled', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL), ('rdtConnProtocol', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('serverClusters', 'vim.host.VsanServerClusterInfo[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanObjectHealth', 'VsanObjectHealth', 'vmodl.DynamicData', 'vim.version.version9', [('numObjects', 'int', 'vim.version.version9', 0), ('health', 'vim.host.VsanObjectHealthState', 'vim.version.version9', 0 | F_OPTIONAL), ('objUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanClusterUuid', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('dataProtectionHealth', 'vim.host.VsanObjectDataProtectionHealthState', 'vsan.version.version22', 0 | F_OPTIONAL), ('healthV2', 'vim.host.VsanObjectHealthStateV2', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanObjectOverallHealth', 'VsanObjectOverallHealth', 'vmodl.DynamicData', 'vim.version.version9', [('objectHealthDetail', 'vim.host.VsanObjectHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('objectsComplianceDetail', 'vim.cluster.StorageComplianceResult[]', 'vsan.version.version9', 0 | F_OPTIONAL), ('objectVersionCompliance', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('objectFormatChangeRequiredUuids', 'string[]', 'vsan.version.version14', 0 | F_OPTIONAL), ('objectsRelayoutBytes', 'long', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostCreateVmHealthTestResult', 'VsanHostCreateVmHealthTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('state', 'string', 'vim.version.version9', 0), ('fault', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVsanPcapResult', 'VsanVsanPcapResult', 'vmodl.DynamicData', 'vim.version.version9', [('calltime', 'float', 'vim.version.version9', 0), ('vmknic', 'string', 'vim.version.version9', 0), ('tcpdumpFilter', 'string', 'vim.version.version9', 0), ('snaplen', 'int', 'vim.version.version9', 0), ('pkts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('pcap', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVmdkIOLoadSpec', 'VsanVmdkIOLoadSpec', 'vmodl.DynamicData', 'vim.version.version9', [('readPct', 'int', 'vim.version.version9', 0), ('oio', 'int', 'vim.version.version9', 0), ('iosizeB', 'int', 'vim.version.version9', 0), ('dataSizeMb', 'long', 'vim.version.version9', 0), ('random', 'boolean', 'vim.version.version9', 0), ('startOffsetB', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVmdkLoadTestSpec', 'VsanVmdkLoadTestSpec', 'vmodl.DynamicData', 'vim.version.version9', [('vmdkCreateSpec', 'vim.VirtualDiskManager.FileBackedVirtualDiskSpec', 'vim.version.version9', 0 | F_OPTIONAL), ('vmdkIOSpec', 'vim.host.VsanVmdkIOLoadSpec', 'vim.version.version9', 0 | F_OPTIONAL), ('vmdkIOSpecSequence', 'vim.host.VsanVmdkIOLoadSpec[]', 'vim.version.version9', 0 | F_OPTIONAL), ('stepDurationSec', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanVmdkLoadTestResult', 'VsanVmdkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('success', 'boolean', 'vim.version.version9', 0), ('faultMessage', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('spec', 'vim.host.VsanVmdkLoadTestSpec', 'vim.version.version9', 0), ('actualDurationSec', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('totalBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('iops', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('tputBps', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('avgLatencyUs', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('maxLatencyUs', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('numIoAboveLatencyThreshold', 'long', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostVmdkLoadTestResult', 'VsanHostVmdkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('issueFound', 'boolean', 'vim.version.version9', 0), ('faultMessage', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vmdkResults', 'vim.host.VsanVmdkLoadTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHistoricalHealthConfig', 'VsanHistoricalHealthConfig', 'vmodl.DynamicData', 'vsan.version.version16', [('enabled', 'boolean', 'vsan.version.version16', 0)])
CreateDataType('vim.vsan.VsanHealthThreshold', 'VsanHealthThreshold', 'vmodl.DynamicData', 'vsan.version.version11', [('yellowValue', 'long', 'vsan.version.version11', 0), ('redValue', 'long', 'vsan.version.version11', 0), ('target', 'vim.vsan.VsanHealthThresholdTarget', 'vsan.version.version16', 0 | F_OPTIONAL), ('enabled', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcgNotificationConfigSpec', 'VsanVcgNotificationConfigSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('enabled', 'boolean', 'vsan.version.version21', 0), ('emailList', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHealthConfigSpec', 'VsanHealthConfigSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('healthCheckThresholdSpec', 'vim.vsan.VsanHealthThreshold[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('historicalHealthConfig', 'vim.vsan.VsanHistoricalHealthConfig', 'vsan.version.version16', 0 | F_OPTIONAL), ('vcgNotificationConfig', 'vim.vsan.VsanVcgNotificationConfigSpec', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanSpaceEfficiencyMetadataSize', 'VsanSpaceEfficiencyMetadataSize', 'vmodl.DynamicData', 'vsan.version.version14', [('dedupMetadataSize', 'long', 'vsan.version.version14', 0 | F_OPTIONAL), ('compressionMetadataSize', 'long', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanLimitHealthResult', 'VsanLimitHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0), ('maxComponents', 'int', 'vim.version.version9', 0), ('freeComponents', 'int', 'vim.version.version9', 0), ('componentLimitHealth', 'string', 'vim.version.version9', 0), ('lowestFreeDiskSpacePct', 'int', 'vim.version.version9', 0), ('usedDiskSpaceB', 'long', 'vim.version.version9', 0), ('totalDiskSpaceB', 'long', 'vim.version.version9', 0), ('diskFreeSpaceHealth', 'string', 'vim.version.version9', 0), ('reservedRcSizeB', 'long', 'vim.version.version9', 0), ('totalRcSizeB', 'long', 'vim.version.version9', 0), ('rcFreeReservationHealth', 'string', 'vim.version.version9', 0), ('totalLogicalSpaceB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('logicalSpaceUsedB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('dedupMetadataSizeB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('diskTransientCapacityUsedB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('dgTransientCapacityUsedB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('slackSpaceCapRequired', 'long', 'vsan.version.version14', 0 | F_OPTIONAL), ('resyncPauseThreshold', 'long', 'vsan.version.version14', 0 | F_OPTIONAL), ('spaceEfficiencyMetadataSizeB', 'vim.vsan.VsanSpaceEfficiencyMetadataSize', 'vsan.version.version14', 0 | F_OPTIONAL), ('hostRebuildCapacity', 'long', 'vsan.version.version15', 0 | F_OPTIONAL), ('minSpaceRequiredForVsanOp', 'long', 'vsan.version.version15', 0 | F_OPTIONAL), ('enforceCapResrvSpace', 'long', 'vsan.version.version15', 0 | F_OPTIONAL), ('cdReservedSizeB', 'long', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostQueryCheckLimitsSpec', 'VsanHostQueryCheckLimitsSpec', 'vmodl.DynamicData', 'vsan.version.version12', [('optionTypes', 'vim.host.VsanHostQueryCheckLimitsOptionType[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('fetchAll', 'boolean', 'vsan.version.version12', 0)])
CreateDataType('vim.host.VsanNetworkLoadTestResult', 'VsanNetworkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('status', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('client', 'boolean', 'vim.version.version9', 0), ('bandwidthBps', 'long', 'vim.version.version9', 0), ('totalBytes', 'long', 'vim.version.version9', 0), ('lostDatagrams', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('lossPct', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('sentDatagrams', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('jitterMs', 'float', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanResourceHealth', 'VsanResourceHealth', 'vmodl.DynamicData', 'vim.version.version9', [('resource', 'string', 'vim.version.version9', 0), ('health', 'string', 'vim.version.version9', 0), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanKmsHealth', 'VsanKmsHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('serverName', 'string', 'vsan.version.version3', 0), ('health', 'string', 'vsan.version.version3', 0), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL), ('trustHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('certHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('certExpireDate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanDiskRebalanceResult', 'VsanDiskRebalanceResult', 'vmodl.DynamicData', 'vsan.version.version3', [('status', 'vim.host.VsanDiskBalanceState', 'vsan.version.version3', 0), ('bytesMoving', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('remainingBytesToMove', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL), ('maxDiskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL), ('minDiskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL), ('avgDiskUsage', 'float', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanPhysicalDiskHealth', 'VsanPhysicalDiskHealth', 'vmodl.DynamicData', 'vim.version.version9', [('name', 'string', 'vim.version.version9', 0), ('uuid', 'string', 'vim.version.version9', 0), ('inCmmds', 'boolean', 'vim.version.version9', 0), ('inVsi', 'boolean', 'vim.version.version9', 0), ('dedupScope', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('formatVersion', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('isAllFlash', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('congestionValue', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('congestionArea', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('congestionHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('metadataHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('operationalHealthDescription', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('operationalHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('dedupUsageHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('capacityHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('summaryHealth', 'string', 'vim.version.version9', 0), ('capacity', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('usedCapacity', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('reservedCapacity', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('totalBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('freeBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('hashedBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('dedupedBytes', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('scsiDisk', 'vim.host.ScsiDisk', 'vim.version.version9', 0 | F_OPTIONAL), ('usedComponents', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('maxComponents', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('compLimitHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('encryptionEnabled', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsProviderId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kekId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekGenerationId', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptedUnlocked', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('rebalanceResult', 'vim.host.VsanDiskRebalanceResult', 'vsan.version.version3', 0 | F_OPTIONAL), ('dekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('kekVerifierHealth', 'boolean', 'vsan.version.version19', 0 | F_OPTIONAL), ('dekVerifierHealth', 'boolean', 'vsan.version.version19', 0 | F_OPTIONAL), ('logicalCapacity', 'long', 'vsan.version.version21', 0 | F_OPTIONAL), ('logicalCapacityUsed', 'long', 'vsan.version.version21', 0 | F_OPTIONAL), ('logicalCapacityHealth', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanDiskGroupUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('dgLayoutIssue', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanPhysicalDiskHealthSummary', 'VsanPhysicalDiskHealthSummary', 'vmodl.DynamicData', 'vim.version.version9', [('overallHealth', 'string', 'vim.version.version9', 0), ('heapsWithIssues', 'vim.host.VsanResourceHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('slabsWithIssues', 'vim.host.VsanResourceHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('disks', 'vim.host.VsanPhysicalDiskHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('componentsWithIssues', 'vim.host.VsanResourceHealth[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('hostDedupScope', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanFailedRepairObjectResult', 'VsanFailedRepairObjectResult', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('errMessage', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanDiskEncryptionHealth', 'VsanDiskEncryptionHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('diskHealth', 'vim.host.VsanPhysicalDiskHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptionIssues', 'vim.host.VsanEncryptionIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanEncryptionHealthSummary', 'VsanEncryptionHealthSummary', 'vmodl.DynamicData', 'vsan.version.version3', [('hostname', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptionInfo', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('overallKmsHealth', 'string', 'vsan.version.version3', 0), ('kmsHealth', 'vim.host.VsanKmsHealth[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('encryptionIssues', 'vim.host.VsanEncryptionIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskResults', 'vim.host.VsanDiskEncryptionHealth[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL), ('aesniEnabled', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('inconsistentlyEncryptedObjectCount', 'long', 'vsan.version.version21', 0 | F_OPTIONAL), ('hostEncryptionDekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('kekVerifierHealth', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('dekVerifierHealth', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanDitEncryptionHealthSummary', 'VsanDitEncryptionHealthSummary', 'vmodl.DynamicData', 'vsan.version.version15', [('hostname', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('health', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version15', 0 | F_OPTIONAL), ('reason', 'vmodl.LocalizableMessage', 'vsan.version.version15', 0 | F_OPTIONAL), ('ditEncryptionInfo', 'vim.vsan.host.DataInTransitEncryptionInfo', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanFileServiceRootFsHealth', 'VsanFileServiceRootFsHealth', 'vmodl.DynamicData', 'vsan.version.version12', [('created', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL), ('health', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('description', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanFileServiceBalanceHealth', 'VsanFileServiceBalanceHealth', 'vmodl.DynamicData', 'vsan.version.version15', [('health', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('description', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanFileServerHealthSummary', 'VsanFileServerHealthSummary', 'vmodl.DynamicData', 'vsan.version.version12', [('domainName', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServerIp', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('nfsdHealth', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('networkHealth', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('rootfsHealth', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('description', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('smbConnections', 'int', 'vsan.version.version15', 0 | F_OPTIONAL), ('smbDaemonHealth', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('adTestJoinHealth', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('dnsLookupHealth', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanFileServiceShareHealthSummary', 'VsanFileServiceShareHealthSummary', 'vmodl.DynamicData', 'vsan.version.version12', [('overallHealth', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('domainName', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('shareUuid', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('shareName', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('objectHealth', 'vim.host.VsanObjectOverallHealth', 'vsan.version.version12', 0 | F_OPTIONAL), ('description', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('extensible', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanFileServiceHealthSummary', 'VsanFileServiceHealthSummary', 'vmodl.DynamicData', 'vsan.version.version12', [('hostname', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('overallHealth', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('enabled', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL), ('vdfsdStatus', 'vim.host.VsanResourceHealth', 'vsan.version.version12', 0 | F_OPTIONAL), ('fsvmStatus', 'vim.host.VsanResourceHealth', 'vsan.version.version12', 0 | F_OPTIONAL), ('rootFsStatus', 'vim.host.VsanFileServiceRootFsHealth', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServerHealth', 'vim.host.VsanFileServerHealthSummary[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileShareHealth', 'vim.host.VsanFileServiceShareHealthSummary[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('balanceStatus', 'vim.host.VsanFileServiceBalanceHealth', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanRepairObjectsResult', 'VsanRepairObjectsResult', 'vmodl.DynamicData', 'vim.version.version9', [('inQueueObjects', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('failedRepairObjects', 'vim.host.VsanFailedRepairObjectResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('notInQueueObjects', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanSmartParameter', 'VsanSmartParameter', 'vmodl.DynamicData', 'vsan.version.version3', [('parameter', 'vim.host.VsanSmartParameterType', 'vsan.version.version3', 0 | F_OPTIONAL), ('value', 'int', 'vsan.version.version3', 0 | F_OPTIONAL), ('threshold', 'int', 'vsan.version.version3', 0 | F_OPTIONAL), ('worst', 'int', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanSmartDiskStats', 'VsanSmartDiskStats', 'vmodl.DynamicData', 'vsan.version.version3', [('disk', 'string', 'vsan.version.version3', 0), ('stats', 'vim.host.VsanSmartParameter[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanSmartStatsHostSummary', 'VsanSmartStatsHostSummary', 'vmodl.DynamicData', 'vsan.version.version3', [('hostname', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('smartStats', 'vim.host.VsanSmartDiskStats[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostEMMSummary', 'VsanHostEMMSummary', 'vmodl.DynamicData', 'vsan.version.version7', [('hostname', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('inMaintenanceMode', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('inDecomState', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanArchivalAccessibilityStatus', 'VsanArchivalAccessibilityStatus', 'vmodl.DynamicData', 'vsan.version.version22', [('archivalUrl', 'string', 'vsan.version.version22', 0), ('healthState', 'vim.host.VsanArchivalAccessibilityHealthState', 'vsan.version.version22', 0), ('error', 'vmodl.MethodFault', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanArchivalAccessibilityResult', 'VsanArchivalAccessibilityResult', 'vmodl.DynamicData', 'vsan.version.version22', [('hostname', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('archivalHealthStatus', 'vim.host.VsanArchivalAccessibilityStatus[]', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanDatastoreUsageResult', 'VsanDatastoreUsageResult', 'vmodl.DynamicData', 'vsan.version.version22', [('configuredUsageThreshold', 'int', 'vsan.version.version22', 0), ('currentUsage', 'float', 'vsan.version.version22', 0), ('thresholdExceeded', 'boolean', 'vsan.version.version22', 0)])
CreateDataType('vim.host.VsanDaemonHealth', 'VsanDaemonHealth', 'vmodl.DynamicData', 'vsan.version.version4', [('name', 'string', 'vsan.version.version4', 0), ('alive', 'boolean', 'vsan.version.version4', 0), ('error', 'vmodl.MethodFault', 'vsan.version.version4', 0 | F_OPTIONAL)])
CreateDataType('vim.host.PnicTSOInfo', 'PnicTSOInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('nicName', 'string', 'vsan.version.version18', 0), ('isSupported', 'boolean', 'vsan.version.version18', 0), ('isEnabled', 'boolean', 'vsan.version.version18', 0)])
CreateDataType('vim.host.LAGUplinkInfo', 'LAGUplinkInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('uplinkName', 'string', 'vsan.version.version18', 0), ('portState', 'int', 'vsan.version.version18', 0), ('bundleState', 'string', 'vsan.version.version18', 0)])
CreateDataType('vim.host.LAGInfo', 'LAGInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('lagName', 'string', 'vsan.version.version18', 0), ('groupState', 'int', 'vsan.version.version18', 0), ('vnics', 'string[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('uplinks', 'vim.host.LAGUplinkInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.host.LACPInfo', 'LACPInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('dvsName', 'string', 'vsan.version.version18', 0), ('lags', 'vim.host.LAGInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanNetworkDiagnosticsHealthInfo', 'VsanNetworkDiagnosticsHealthInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('vnicInfo', 'vim.host.VirtualNic[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('pnicTSOInfo', 'vim.host.PnicTSOInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('LACPInfo', 'vim.host.LACPInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.QueryVsanManagedStorageSpaceUsageSpec', 'QueryVsanManagedStorageSpaceUsageSpec', 'vmodl.DynamicData', 'vsan.version.version15', [('datastoreTypes', 'vim.cluster.VsanDatastoreType[]', 'vsan.version.version15', 0)])
CreateDataType('vim.cluster.VsanDataProtectionTargetSiteInfo', 'VsanDataProtectionTargetSiteInfo', 'vmodl.DynamicData', 'vsan.version.version22', [('targetType', 'vim.cluster.VsanDataProtectionTargetSiteType', 'vsan.version.version22', 0)])
CreateDataType('vim.cluster.VsanLocalProtectionTargetSiteInfo', 'VsanLocalProtectionTargetSiteInfo', 'vim.cluster.VsanDataProtectionTargetSiteInfo', 'vsan.version.version22', [])
CreateDataType('vim.cluster.VsanDataProtectionSpaceUsageStats', 'VsanDataProtectionSpaceUsageStats', 'vmodl.DynamicData', 'vsan.version.version22', [('overheadB', 'long', 'vsan.version.version22', 0), ('fragmentationOverheadB', 'long', 'vsan.version.version22', 0), ('raidPolicyOverheadB', 'long', 'vsan.version.version22', 0)])
CreateDataType('vim.cluster.VsanDataProtectionSpaceUsage', 'VsanDataProtectionSpaceUsage', 'vmodl.DynamicData', 'vsan.version.version22', [('error', 'vmodl.MethodFault', 'vsan.version.version22', 0 | F_OPTIONAL), ('warning', 'vmodl.MethodFault', 'vsan.version.version22', 0 | F_OPTIONAL), ('protectionTargetInfo', 'vim.cluster.VsanDataProtectionTargetSiteInfo', 'vsan.version.version22', 0), ('dpUsageStats', 'vim.cluster.VsanDataProtectionSpaceUsageStats', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanDataProtectionRemoteSpaceUsage', 'VsanDataProtectionRemoteSpaceUsage', 'vmodl.DynamicData', 'vsan.version.version22', [('activeDataProtectionsUsage', 'vim.cluster.VsanDataProtectionSpaceUsage[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('inactiveDataProtectionsUsage', 'vim.cluster.VsanDataProtectionSpaceUsage[]', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanDataProtectionRemoteTargetSiteInfo', 'VsanDataProtectionRemoteTargetSiteInfo', 'vmodl.DynamicData', 'vsan.version.version22', [])
CreateDataType('vim.cluster.VsanDataProtectionArchivalTargetSiteInfo', 'VsanDataProtectionArchivalTargetSiteInfo', 'vim.cluster.VsanDataProtectionTargetSiteInfo', 'vsan.version.version22', [('datastoreUrl', 'string', 'vsan.version.version22', 0)])
CreateDataType('vim.vsan.DataEfficiencyCapacityState', 'VimVsanDataEfficiencyCapacityState', 'vmodl.DynamicData', 'vim.version.version10', [('logicalCapacity', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('logicalCapacityUsed', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('physicalCapacity', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('physicalCapacityUsed', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('dedupMetadataSize', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('spaceEfficiencyMetadataSize', 'vim.vsan.VsanSpaceEfficiencyMetadataSize', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectSpaceSummary', 'VsanObjectSpaceSummary', 'vmodl.DynamicData', 'vim.version.version9', [('objType', 'vim.cluster.VsanObjectTypeEnum', 'vim.version.version9', 0 | F_OPTIONAL), ('overheadB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('temporaryOverheadB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('primaryCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('provisionCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('reservedCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('overReservedB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('physicalUsedB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('usedB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('dpSpaceUsageInfo', 'vim.cluster.VsanDataProtectionSpaceUsageStats', 'vsan.version.version22', 0 | F_OPTIONAL), ('objTypeExt', 'string', 'vsan.version.version13', 0 | F_OPTIONAL), ('objTypeExtDesc', 'string', 'vsan.version.version13', 0 | F_OPTIONAL), ('snapshotUsedB', 'long', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanEntitySpaceUsage', 'VsanEntitySpaceUsage', 'vmodl.DynamicData', 'vsan.version.version12', [('entityId', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('spaceUsageByObjectType', 'vim.cluster.VsanObjectSpaceSummary[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('totalCapacityB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('freeCapacityB', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('efficientCapacity', 'vim.vsan.DataEfficiencyCapacityState', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVmSpaceUsage', 'VsanVmSpaceUsage', 'vim.cluster.VsanEntitySpaceUsage', 'vsan.version.version21', [('vm', 'vim.VirtualMachine', 'vsan.version.version21', 0)])
CreateDataType('vim.cluster.VsanSpaceUsageDetailResult', 'VsanSpaceUsageDetailResult', 'vmodl.DynamicData', 'vim.version.version9', [('spaceUsageByObjectType', 'vim.cluster.VsanObjectSpaceSummary[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanWhatifCapacity', 'VsanWhatifCapacity', 'vmodl.DynamicData', 'vsan.version.version9', [('totalWhatifCapacityB', 'long', 'vsan.version.version9', 0), ('freeWhatifCapacityB', 'long', 'vsan.version.version9', 0), ('storagePolicy', 'vim.vm.ProfileSpec', 'vsan.version.version9', 0), ('isSatisfiable', 'boolean', 'vsan.version.version9', 0)])
CreateDataType('vim.cluster.VsanSpaceQuerySpec', 'VsanSpaceQuerySpec', 'vmodl.DynamicData', 'vsan.version.version12', [('entityType', 'vim.cluster.VsanSpaceReportingEntityType', 'vsan.version.version12', 0), ('entityIds', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanSpaceUsage', 'VsanSpaceUsage', 'vmodl.DynamicData', 'vim.version.version9', [('totalCapacityB', 'long', 'vim.version.version9', 0), ('freeCapacityB', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('spaceOverview', 'vim.cluster.VsanObjectSpaceSummary', 'vim.version.version9', 0 | F_OPTIONAL), ('spaceDetail', 'vim.cluster.VsanSpaceUsageDetailResult', 'vim.version.version9', 0 | F_OPTIONAL), ('efficientCapacity', 'vim.vsan.DataEfficiencyCapacityState', 'vsan.version.version7', 0 | F_OPTIONAL), ('whatifCapacities', 'vim.cluster.VsanWhatifCapacity[]', 'vsan.version.version9', 0 | F_OPTIONAL), ('uncommittedB', 'long', 'vsan.version.version8', 0 | F_OPTIONAL), ('capacityHealthThreshold', 'vim.vsan.VsanHealthThreshold', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanWhatifCapacityHealthThreshold', 'VsanWhatifCapacityThreshold', 'vmodl.DynamicData', 'vsan.version.version15', [('capacityReservationInfo', 'vim.vsan.CapacityReservationInfo', 'vsan.version.version15', 0), ('whatifCapacityHealthThreshold', 'vim.vsan.VsanHealthThreshold', 'vsan.version.version15', 0)])
CreateDataType('vim.cluster.VsanSpaceUsageWithDatastoreType', 'VsanSpaceUsageWithDatastoreType', 'vmodl.DynamicData', 'vsan.version.version15', [('spaceUsage', 'vim.cluster.VsanSpaceUsage', 'vsan.version.version15', 0 | F_OPTIONAL), ('datastoreType', 'vim.cluster.VsanDatastoreType', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectIdentity', 'VsanObjectIdentity', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('type', 'string', 'vim.version.version9', 0), ('vmInstanceUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vmNsObjectUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vm', 'vim.VirtualMachine', 'vim.version.version9', 0 | F_OPTIONAL), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('dpSpaceUsageInfos', 'vim.cluster.VsanDataProtectionSpaceUsage[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('spbmProfileUuid', 'string', 'vsan.version.version13', 0 | F_OPTIONAL), ('metadatas', 'vim.KeyValue[]', 'vsan.version.version13', 0 | F_OPTIONAL), ('typeExtId', 'string', 'vsan.version.version13', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.QueryVsanManagedHostObjectUuidsSpec', 'QueryVsanManagedHostObjectUuidsSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('hosts', 'vim.HostSystem[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanManagedStorageObjUuidMapping', 'VsanManagedStorageObjUuidMapping', 'vmodl.DynamicData', 'vsan.version.version16', [('storageType', 'vim.cluster.VsanDatastoreType', 'vsan.version.version16', 0), ('storageId', 'string', 'vsan.version.version16', 0), ('uuids', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanManagedHostObjectUuids', 'VsanManagedHostObjectUuids', 'vmodl.DynamicData', 'vsan.version.version16', [('host', 'vim.HostSystem', 'vsan.version.version16', 0), ('storageObjUuidMapping', 'vim.cluster.VsanManagedStorageObjUuidMapping[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjIdentityQuerySpec', 'VsanObjIdentityQuerySpec', 'vmodl.DynamicData', 'vsan.version.version21', [('objectHealthVersion', 'vim.host.VsanObjectHealthVersion', 'vsan.version.version21', 0 | F_OPTIONAL), ('datastoreType', 'vim.cluster.VsanDatastoreType', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectIdentityAndHealth', 'VsanObjectIdentityAndHealth', 'vmodl.DynamicData', 'vim.version.version9', [('identities', 'vim.cluster.VsanObjectIdentity[]', 'vim.version.version9', 0 | F_OPTIONAL), ('health', 'vim.host.VsanObjectOverallHealth', 'vim.version.version9', 0 | F_OPTIONAL), ('spaceSummary', 'vim.cluster.VsanObjectSpaceSummary[]', 'vim.version.version9', 0 | F_OPTIONAL), ('rawData', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectInformation', 'VsanObjectInformation', 'vmodl.DynamicData', 'vim.version.version9', [('directoryName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanObjectUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('policyAttributes', 'vim.KeyValue[]', 'vim.version.version9', 0 | F_OPTIONAL), ('spbmProfileUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('spbmProfileGenerationId', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('spbmComplianceResult', 'vim.cluster.StorageComplianceResult', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanDataProtectionHealth', 'string', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanSyncingObjectFilter', 'VsanSyncingObjectFilter', 'vmodl.DynamicData', 'vsan.version.version10', [('resyncType', 'vim.vsan.VsanSyncReason', 'vsan.version.version10', 0 | F_OPTIONAL), ('resyncStatus', 'vim.vsan.VsanSyncStatus', 'vsan.version.version10', 0 | F_OPTIONAL), ('numberOfObjects', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('offset', 'long', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectQuerySpec', 'VsanObjectQuerySpec', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('spbmProfileGenerationId', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectExtraAttributes', 'VsanObjectExtraAttributes', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0), ('objPath', 'string', 'vim.version.version9', 0), ('objClass', 'int', 'vim.version.version9', 0), ('ufn', 'string', 'vim.version.version9', 0), ('isHbrCfg', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.vsan.VsanPolicyRegulation', 'VsanPolicyRegulation', 'vmodl.DynamicData', 'vsan.version.version16', [('capability', 'string', 'vsan.version.version16', 0), ('value', 'string', 'vsan.version.version16', 0), ('op', 'vim.vsan.VsanPolicyRegulationCheckOpEnum', 'vsan.version.version16', 0)])
CreateDataType('vim.vsan.VsanPolicyViolation', 'VsanPolicyViolation', 'vmodl.DynamicData', 'vsan.version.version16', [('regulation', 'vim.vsan.VsanPolicyRegulation', 'vsan.version.version16', 0), ('actualVal', 'string', 'vsan.version.version16', 0)])
CreateDataType('vim.cluster.VsanPolicyRegulationCheckTarget', 'VsanPolicyRegulationCheckTarget', 'vmodl.DynamicData', 'vsan.version.version16', [('targetType', 'string', 'vsan.version.version16', 0), ('uniqueIds', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('excludeProfileIds', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPolicyRegulationCheckSpec', 'VsanPolicyRegulationCheckSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('policyRegulations', 'vim.vsan.VsanPolicyRegulation[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('targets', 'vim.cluster.VsanPolicyRegulationCheckTarget[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPolicyRegulationNoncompliantObj', 'VsanPolicyRegulationNoncompliantObj', 'vmodl.DynamicData', 'vsan.version.version16', [('objIdentity', 'vim.cluster.VsanObjectIdentity', 'vsan.version.version16', 0), ('targetType', 'string', 'vsan.version.version16', 0), ('violations', 'vim.vsan.VsanPolicyViolation[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfMetricId', 'VsanPerfMetricId', 'vmodl.DynamicData', 'vim.version.version9', [('label', 'string', 'vim.version.version9', 0), ('group', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('rollupType', 'vim.cluster.VsanPerfSummaryType', 'vim.version.version9', 0 | F_OPTIONAL), ('statsType', 'vim.cluster.VsanPerfStatsType', 'vim.version.version9', 0 | F_OPTIONAL), ('name', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('metricsCollectInterval', 'int', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfThreshold', 'VsanPerfThreshold', 'vmodl.DynamicData', 'vim.version.version9', [('direction', 'vim.cluster.VsanPerfThresholdDirectionType', 'vim.version.version9', 0), ('yellow', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('red', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfMetricSeriesCSV', 'VsanPerfMetricSeriesCSV', 'vmodl.DynamicData', 'vim.version.version9', [('metricId', 'vim.cluster.VsanPerfMetricId', 'vim.version.version9', 0), ('threshold', 'vim.cluster.VsanPerfThreshold', 'vsan.version.version3', 0 | F_OPTIONAL), ('numExceptions', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('values', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfEntityMetricCSV', 'VsanPerfEntityMetricCSV', 'vmodl.DynamicData', 'vim.version.version9', [('entityRefId', 'string', 'vim.version.version9', 0), ('sampleInfo', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('value', 'vim.cluster.VsanPerfMetricSeriesCSV[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfDiagnosticException', 'VsanPerfDiagnosticException', 'vmodl.DynamicData', 'vsan.version.version3', [('exceptionId', 'string', 'vsan.version.version3', 0), ('exceptionMessage', 'string', 'vsan.version.version3', 0), ('exceptionDetails', 'string', 'vsan.version.version3', 0), ('exceptionUrl', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanPerfDiagnosticResult', 'VsanPerfDiagnosticResult', 'vmodl.DynamicData', 'vsan.version.version3', [('exceptionId', 'string', 'vsan.version.version3', 0), ('recommendation', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('aggregationFunction', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('aggregationData', 'vim.cluster.VsanPerfEntityMetricCSV', 'vsan.version.version3', 0 | F_OPTIONAL), ('exceptionData', 'vim.cluster.VsanPerfEntityMetricCSV[]', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanPerfQuerySpec', 'VsanPerfQuerySpec', 'vmodl.DynamicData', 'vim.version.version9', [('entityRefId', 'string', 'vim.version.version9', 0), ('startTime', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('endTime', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('group', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('labels', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('interval', 'int', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfDiagnoseQuerySpec', 'VsanPerfDiagnoseQuerySpec', 'vmodl.DynamicData', 'vsan.version.version3', [('startTime', 'vmodl.DateTime', 'vsan.version.version3', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version3', 0), ('queryType', 'vim.cluster.VsanPerfDiagnosticQueryType', 'vsan.version.version3', 0), ('context', 'string', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfDiagnoseFeedbackSpec', 'VsanPerfDiagnoseFeedbackSpec', 'vmodl.DynamicData', 'vsan.version.version11', [('transactionId', 'string', 'vsan.version.version11', 0), ('exceptionId', 'string', 'vsan.version.version11', 0), ('entityRefId', 'string', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfMemberInfo', 'VsanPerfMemberInfo', 'vmodl.DynamicData', 'vim.version.version9', [('thumbprint', 'string', 'vim.version.version9', 0), ('thumbprintList', 'vim.vm.CertThumbprint[]', 'vsan.version.version20', 0 | F_OPTIONAL), ('memberUuid', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('isSupportUnicast', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('unicastAddressInfos', 'vim.cluster.VsanUnicastAddressInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostname', 'string', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTimeRange', 'VsanPerfTimeRange', 'vmodl.DynamicData', 'vsan.version.version3', [('name', 'string', 'vsan.version.version3', 0), ('startTime', 'vmodl.DateTime', 'vsan.version.version3', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanPerfTimeRangeQuerySpec', 'VsanPerfTimeRangeQuerySpec', 'vmodl.DynamicData', 'vsan.version.version3', [('name', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('startTimeFrom', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('startTimeTo', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('endTimeFrom', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('endTimeTo', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.fault.VsanNodeNotMaster', 'VsanNodeNotMaster', 'vim.fault.VimFault', 'vim.version.version9', [('vsanMasterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('cmmdsMasterButNotStatsMaster', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfMasterInformation', 'VsanPerfMasterInformation', 'vmodl.DynamicData', 'vim.version.version9', [('secSinceLastStatsWrite', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('secSinceLastStatsCollect', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('statsIntervalSec', 'long', 'vim.version.version9', 0), ('collectionFailureHostUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('renamedStatsDirectories', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('statsDirectoryPercentFree', 'long', 'vim.version.version9', 0 | F_OPTIONAL), ('verboseMode', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('verboseModeLastUpdate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfNodeInformation', 'VsanPerfNodeInformation', 'vmodl.DynamicData', 'vim.version.version9', [('version', 'string', 'vim.version.version9', 0), ('hostname', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL), ('isCmmdsMaster', 'boolean', 'vim.version.version9', 0), ('isStatsMaster', 'boolean', 'vim.version.version9', 0), ('vsanMasterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanNodeUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('masterInfo', 'vim.cluster.VsanPerfMasterInformation', 'vim.version.version9', 0 | F_OPTIONAL), ('diagnosticMode', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTopEntity', 'VsanPerfTopEntity', 'vmodl.DynamicData', 'vim.version.version9', [('entityRefId', 'string', 'vim.version.version9', 0), ('value', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanPerfTopEntities', 'VsanPerfTopEntities', 'vmodl.DynamicData', 'vim.version.version9', [('metricId', 'vim.cluster.VsanPerfMetricId', 'vim.version.version9', 0), ('entities', 'vim.cluster.VsanPerfTopEntity[]', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanPerfGraph', 'VsanPerfGraph', 'vmodl.DynamicData', 'vim.version.version9', [('id', 'string', 'vim.version.version9', 0), ('metrics', 'vim.cluster.VsanPerfMetricId[]', 'vim.version.version9', 0), ('unit', 'vim.cluster.VsanPerfStatsUnitType', 'vim.version.version9', 0), ('threshold', 'vim.cluster.VsanPerfThreshold', 'vim.version.version9', 0 | F_OPTIONAL), ('name', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('secondGraph', 'vim.cluster.VsanPerfGraph', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfEntityType', 'VsanPerfEntityType', 'vmodl.DynamicData', 'vim.version.version9', [('name', 'string', 'vim.version.version9', 0), ('id', 'string', 'vim.version.version9', 0), ('graphs', 'vim.cluster.VsanPerfGraph[]', 'vim.version.version9', 0), ('description', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfEntityInfo', 'VsanPerfEntityInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('entityRefId', 'string', 'vsan.version.version3', 0), ('entityRefType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('entityName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('entityRelatedMoRef', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanRemoteClusterQuerySpec', 'VsanRemoteClusterQuerySpec', 'vmodl.DynamicData', 'vsan.version.version15', [('startTime', 'vmodl.DateTime', 'vsan.version.version15', 0 | F_OPTIONAL), ('endTime', 'vmodl.DateTime', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfTopQuerySpec', 'VsanPerfTopQuerySpec', 'vmodl.DynamicData', 'vsan.version.version16', [('timeStamp', 'vmodl.DateTime', 'vsan.version.version16', 0), ('entity', 'string', 'vsan.version.version16', 0), ('metricId', 'string', 'vsan.version.version16', 0), ('numEntities', 'int', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanIoInsightInfo', 'VsanIoInsightInfo', 'vmodl.DynamicData', 'vsan.version.version14', [('state', 'vim.host.VsanIoInsightState', 'vsan.version.version14', 0 | F_OPTIONAL), ('monitoredVMs', 'vim.VirtualMachine[]', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanHostIoInsightInfo', 'VsanHostIoInsightInfo', 'vmodl.DynamicData', 'vsan.version.version14', [('host', 'vim.HostSystem', 'vsan.version.version14', 0), ('ioinsightWorldId', 'long', 'vsan.version.version14', 0 | F_OPTIONAL), ('faultMessage', 'string', 'vsan.version.version14', 0 | F_OPTIONAL), ('ioinsightInfo', 'vim.host.VsanIoInsightInfo', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIoInsightInstanceQuerySpec', 'VsanIoInsightInstanceQuerySpec', 'vmodl.DynamicData', 'vsan.version.version14', [('state', 'vim.cluster.VsanIoInsightInstanceState', 'vsan.version.version14', 0 | F_OPTIONAL), ('entityRefId', 'string', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIoInsightInstance', 'VsanIoInsightInstance', 'vmodl.DynamicData', 'vsan.version.version14', [('runName', 'string', 'vsan.version.version14', 0), ('state', 'vim.cluster.VsanIoInsightInstanceState', 'vsan.version.version14', 0 | F_OPTIONAL), ('startTime', 'vmodl.DateTime', 'vsan.version.version14', 0 | F_OPTIONAL), ('endTime', 'vmodl.DateTime', 'vsan.version.version14', 0 | F_OPTIONAL), ('hostsIoInsightInfo', 'vim.host.VsanHostIoInsightInfo[]', 'vsan.version.version14', 0 | F_OPTIONAL), ('hostUuids', 'string[]', 'vsan.version.version14', 0 | F_OPTIONAL), ('vmUuids', 'string[]', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetAuthSpec', 'VsanIscsiTargetAuthSpec', 'vmodl.DynamicData', 'vim.version.version11', [('authType', 'vim.cluster.VsanIscsiTargetAuthType', 'vim.version.version11', 0 | F_OPTIONAL), ('userNameAttachToTarget', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('userSecretAttachToTarget', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('userNameAttachToInitiator', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('userSecretAttachToInitiator', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetServiceDefaultConfigSpec', 'VsanIscsiTargetServiceDefaultConfigSpec', 'vmodl.DynamicData', 'vim.version.version11', [('networkInterface', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('port', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('iscsiTargetAuthSpec', 'vim.cluster.VsanIscsiTargetAuthSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetBasicInfo', 'VsanIscsiTargetBasicInfo', 'vmodl.DynamicData', 'vim.version.version11', [('alias', 'string', 'vim.version.version11', 0), ('iqn', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetServiceConfig', 'VsanIscsiTargetServiceConfig', 'vmodl.DynamicData', 'vim.version.version11', [('defaultConfig', 'vim.cluster.VsanIscsiTargetServiceDefaultConfigSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('enabled', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetCommonInfo', 'VsanIscsiTargetCommonInfo', 'vim.cluster.VsanIscsiTargetBasicInfo', 'vim.version.version11', [('authSpec', 'vim.cluster.VsanIscsiTargetAuthSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('port', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('networkInterface', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('affinityLocation', 'vim.vsan.VsanSiteLocationType', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiLUNCommonInfo', 'VsanIscsiLUNCommonInfo', 'vmodl.DynamicData', 'vim.version.version11', [('lunId', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('alias', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('lunSize', 'long', 'vim.version.version11', 0), ('status', 'vim.cluster.VsanIscsiLUNStatus', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetServiceSpec', 'VsanIscsiTargetServiceSpec', 'vim.cluster.VsanIscsiTargetServiceConfig', 'vim.version.version11', [('homeObjectStoragePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTargetSpec', 'VsanIscsiTargetSpec', 'vim.cluster.VsanIscsiTargetCommonInfo', 'vim.version.version11', [('storagePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('newAlias', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiHomeObjectSpec', 'VsanIscsiHomeObjectSpec', 'vmodl.DynamicData', 'vim.version.version11', [('storagePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('defaultConfig', 'vim.cluster.VsanIscsiTargetServiceDefaultConfigSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiLUNSpec', 'VsanIscsiLUNSpec', 'vim.cluster.VsanIscsiLUNCommonInfo', 'vim.version.version11', [('storagePolicy', 'vim.vm.ProfileSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('newLunId', 'int', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiLUN', 'VsanIscsiLUN', 'vim.cluster.VsanIscsiLUNCommonInfo', 'vim.version.version11', [('targetAlias', 'string', 'vim.version.version11', 0), ('uuid', 'string', 'vim.version.version11', 0), ('actualSize', 'long', 'vim.version.version11', 0), ('objectInformation', 'vim.cluster.VsanObjectInformation', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiTarget', 'VsanIscsiTarget', 'vim.cluster.VsanIscsiTargetCommonInfo', 'vim.version.version11', [('lunCount', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('objectInformation', 'vim.cluster.VsanObjectInformation', 'vim.version.version11', 0 | F_OPTIONAL), ('ioOwnerHost', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('initiators', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('initiatorGroups', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanIscsiInitiatorGroup', 'VsanIscsiInitiatorGroup', 'vmodl.DynamicData', 'vim.version.version11', [('name', 'string', 'vim.version.version11', 0), ('initiators', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('targets', 'vim.cluster.VsanIscsiTargetBasicInfo[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanWitnessConfig', 'VsanWitnessConfig', 'vmodl.DynamicData', 'vsan.version.version12', [('host', 'vim.HostSystem', 'vsan.version.version12', 0), ('uuid', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('preferredFaultDomain', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('preferredFdUuid', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('networkAddresses', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterMetroConfig', 'VsanClusterMetroConfig', 'vmodl.DynamicData', 'vim.version.version10', [('enabled', 'boolean', 'vim.version.version10', 0), ('witnessNode', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL), ('witnessNodeUuid', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('witnessNodeIPAddresses', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFdName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFdUuid', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('metadataMode', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL), ('witnessHosts', 'vim.cluster.VsanWitnessConfig[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterConfig', 'VsanClusterConfig', 'vmodl.DynamicData', 'vim.version.version9', [('config', 'vim.vsan.cluster.ConfigInfo', 'vim.version.version9', 0), ('name', 'string', 'vim.version.version9', 0), ('hosts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('toBeDeleted', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanPerfsvcConfig', 'VsanPerfsvcConfig', 'vmodl.DynamicData', 'vsan.version.version7', [('enabled', 'boolean', 'vsan.version.version7', 0), ('profile', 'vim.vm.ProfileSpec', 'vsan.version.version7', 0 | F_OPTIONAL), ('diagnosticMode', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL), ('verboseMode', 'boolean', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.XVCDatastore', 'VsanXVCDatastore', 'vim.vsan.DatastoreSpec', 'vsan.version.version21', [('datastore', 'vim.Datastore', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.XVCDatastoreDetailedInfo', 'XVCDatastoreDetailedInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('datastores', 'vim.vsan.XVCDatastore[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('ownerCluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0), ('config', 'vim.vsan.HciMeshServerConfig', 'vsan.version.version21', 0), ('ownerVc', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.cluster.VsanClusterPersistedState', 'VsanClusterPersistedState', 'vmodl.DynamicData', 'vim.version.version9', [('generationId', 'long', 'vim.version.version9', 0), ('vcCluster', 'vim.ClusterComputeResource', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanEnabled', 'boolean', 'vim.version.version9', 0), ('vsanClusterUuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('basicConfig', 'vim.cluster.VsanClusterConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('hosts', 'vim.HostSystem[]', 'vim.version.version9', 0 | F_OPTIONAL), ('metroConfig', 'vim.cluster.VsanClusterMetroConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('perfMemberInfos', 'vim.cluster.VsanPerfMemberInfo[]', 'vim.version.version10', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('resyncIopsLimitConfig', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('iscsiEnabled', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDatastoreName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('extendedConfig', 'vim.vsan.VsanExtendedConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('datastoreConfig', 'vim.vsan.DatastoreConfig', 'vsan.version.version5', 0 | F_OPTIONAL), ('genNum', 'long', 'vsan.version.version4', 0 | F_OPTIONAL), ('perfsvcConfig', 'vim.cluster.VsanPerfsvcConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('unmapConfig', 'vim.vsan.VsanUnmapConfig', 'vsan.version.version9', 0 | F_OPTIONAL), ('vsanBaselinePreference', 'string', 'vsan.version.version10', 0 | F_OPTIONAL), ('rdmaConfig', 'vim.vsan.RdmaConfig', 'vsan.version.version16', 0 | F_OPTIONAL), ('metricsConfig', 'vim.vsan.MetricsConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServiceConfig', 'vim.vsan.FileServiceConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('dataProtectionConfig', 'vim.vsan.DataProtectionInfo', 'vsan.version.version22', 0 | F_OPTIONAL), ('dataInTransitEncryptionConfig', 'vim.vsan.DataInTransitEncryptionConfig', 'vsan.version.version15', 0 | F_OPTIONAL), ('mode', 'vim.vsan.Mode', 'vsan.version.version16', 0 | F_OPTIONAL), ('vsanPMemConfig', 'vim.vsan.VsanPMemConfig', 'vsan.version.version19', 0 | F_OPTIONAL), ('vsanEsaConfigInfo', 'vim.vsan.VsanEsaConfigInfo', 'vsan.version.version21', 0 | F_OPTIONAL), ('metadataResiliencyConfig', 'vim.vsan.MetadataResiliencyConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('xvcDatastoreInfo', 'vim.vsan.XVCDatastoreDetailedInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('powerState', 'vim.vsan.clusterPowerState', 'vsan.version.version19', 0 | F_OPTIONAL), ('vsanEsaEnabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostPersistedState', 'VimClusterVsanHostPersistedState', 'vmodl.DynamicData', 'vsan.version.version3', [('clusterUuid', 'string', 'vsan.version.version3', 0), ('passwdLastUpdate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('connectSpec', 'vim.host.ConnectSpec', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VSANStretchedClusterHostVirtualApplianceStatus', 'VSANStretchedClusterHostVirtualApplianceStatus', 'vmodl.DynamicData', 'vim.version.version11', [('vcCluster', 'vim.ClusterComputeResource', 'vim.version.version11', 0 | F_OPTIONAL), ('isVirtualApp', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('vcClusters', 'vim.ClusterComputeResource[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('isVirtualAppValid', 'boolean', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVumConfig', 'VsanVumConfig', 'vmodl.DynamicData', 'vsan.version.version10', [('baselinePreferenceType', 'vim.cluster.VsanBaselinePreferenceType', 'vsan.version.version10', 0)])
CreateDataType('vim.cluster.VsanHostDiskMapping', 'VimClusterVsanHostDiskMapping', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('cacheDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0 | F_OPTIONAL), ('capacityDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0 | F_OPTIONAL), ('type', 'vim.cluster.VsanDiskGroupCreationType', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanDiskMappingsConfigSpec', 'VimClusterVsanDiskMappingsConfigSpec', 'vmodl.DynamicData', 'vim.version.version10', [('hostDiskMappings', 'vim.cluster.VsanHostDiskMapping[]', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanFaultDomainSpec', 'VimClusterVsanFaultDomainSpec', 'vmodl.DynamicData', 'vim.version.version10', [('hosts', 'vim.HostSystem[]', 'vim.version.version10', 0), ('name', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VsanWitnessSpec', 'VimClusterVsanWitnessSpec', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('preferredFaultDomainName', 'string', 'vim.version.version10', 0), ('diskMapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0 | F_OPTIONAL), ('storagePoolSpec', 'vim.vsan.host.AddStoragePoolDiskSpec', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFaultDomainsConfigSpec', 'VimClusterVsanFaultDomainsConfigSpec', 'vmodl.DynamicData', 'vim.version.version10', [('faultDomains', 'vim.cluster.VsanFaultDomainSpec[]', 'vim.version.version10', 0), ('witness', 'vim.cluster.VsanWitnessSpec', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ReconfigSpec', 'VimVsanReconfigSpec', 'vim.SDDCBase', 'vim.version.version10', [('vsanClusterConfig', 'vim.vsan.cluster.ConfigInfo', 'vim.version.version10', 0 | F_OPTIONAL), ('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('diskMappingSpec', 'vim.cluster.VsanDiskMappingsConfigSpec', 'vim.version.version10', 0 | F_OPTIONAL), ('faultDomainsSpec', 'vim.cluster.VsanFaultDomainsConfigSpec', 'vim.version.version10', 0 | F_OPTIONAL), ('modify', 'boolean', 'vim.version.version10', 0), ('allowReducedRedundancy', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('resyncIopsLimitConfig', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('iscsiSpec', 'vim.cluster.VsanIscsiTargetServiceSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('extendedConfig', 'vim.vsan.VsanExtendedConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('datastoreConfig', 'vim.vsan.DatastoreConfig', 'vsan.version.version5', 0 | F_OPTIONAL), ('perfsvcConfig', 'vim.cluster.VsanPerfsvcConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('unmapConfig', 'vim.vsan.VsanUnmapConfig', 'vsan.version.version9', 0 | F_OPTIONAL), ('vumConfig', 'vim.vsan.VsanVumConfig', 'vsan.version.version10', 0 | F_OPTIONAL), ('metricsConfig', 'vim.vsan.MetricsConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServiceConfig', 'vim.vsan.FileServiceConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('rdmaConfig', 'vim.vsan.RdmaConfig', 'vsan.version.version16', 0 | F_OPTIONAL), ('dataInTransitEncryptionConfig', 'vim.vsan.DataInTransitEncryptionConfig', 'vsan.version.version15', 0 | F_OPTIONAL), ('dataProtectionConfig', 'vim.vsan.DataProtectionInfo', 'vsan.version.version22', 0 | F_OPTIONAL), ('mode', 'vim.vsan.Mode', 'vsan.version.version16', 0 | F_OPTIONAL), ('vsanHealthConfig', 'vim.vsan.VsanHealthConfigSpec', 'vsan.version.version16', 0 | F_OPTIONAL), ('vsanEsaConfig', 'vim.vsan.VsanEsaConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('metadataResiliencyConfig', 'vim.vsan.MetadataResiliencyConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('xvcDatastoreConfig', 'vim.vsan.XVCDatastoreConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ConfigInfoEx', 'VsanConfigInfoEx', 'vim.vsan.cluster.ConfigInfo', 'vim.version.version10', [('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('resyncIopsLimitConfig', 'vim.vsan.ResyncIopsInfo', 'vsan.version.version3', 0 | F_OPTIONAL), ('iscsiConfig', 'vim.cluster.VsanIscsiTargetServiceConfig', 'vim.version.version11', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('extendedConfig', 'vim.vsan.VsanExtendedConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('datastoreConfig', 'vim.vsan.DatastoreConfig', 'vsan.version.version5', 0 | F_OPTIONAL), ('perfsvcConfig', 'vim.cluster.VsanPerfsvcConfig', 'vsan.version.version7', 0 | F_OPTIONAL), ('unmapConfig', 'vim.vsan.VsanUnmapConfig', 'vsan.version.version9', 0 | F_OPTIONAL), ('vumConfig', 'vim.vsan.VsanVumConfig', 'vsan.version.version10', 0 | F_OPTIONAL), ('dataProtectionConfig', 'vim.vsan.DataProtectionInfo', 'vsan.version.version22', 0 | F_OPTIONAL), ('fileServiceConfig', 'vim.vsan.FileServiceConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('metricsConfig', 'vim.vsan.MetricsConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('rdmaConfig', 'vim.vsan.RdmaConfig', 'vsan.version.version16', 0 | F_OPTIONAL), ('dataInTransitEncryptionConfig', 'vim.vsan.DataInTransitEncryptionConfig', 'vsan.version.version15', 0 | F_OPTIONAL), ('vsanHealthConfig', 'vim.vsan.VsanHealthConfigSpec', 'vsan.version.version16', 0 | F_OPTIONAL), ('mode', 'vim.vsan.Mode', 'vsan.version.version16', 0 | F_OPTIONAL), ('vsanPMemConfig', 'vim.vsan.VsanPMemConfig', 'vsan.version.version19', 0 | F_OPTIONAL), ('vsanEsaConfigInfo', 'vim.vsan.VsanEsaConfigInfo', 'vsan.version.version21', 0 | F_OPTIONAL), ('metadataResiliencyConfig', 'vim.vsan.MetadataResiliencyConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('xvcDatastoreConfig', 'vim.vsan.XVCDatastoreConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.DiskMapInfoEx', 'VimVsanHostDiskMapInfoEx', 'vmodl.DynamicData', 'vim.version.version10', [('mapping', 'vim.vsan.host.DiskMapping', 'vim.version.version10', 0), ('isMounted', 'boolean', 'vim.version.version10', 0), ('unlockedEncrypted', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('isAllFlash', 'boolean', 'vim.version.version10', 0), ('isDataEfficiency', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('encryptionInfo', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vsan.version.version14', 0 | F_OPTIONAL), ('diskgroupCapability', 'vim.vsan.host.VsanDiskgroupCapability[]', 'vsan.version.version19', 0 | F_OPTIONAL), ('metaRedundancy', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanScsiDisk', 'VimVsanHostVsanScsiDisk', 'vmodl.DynamicData', 'vsan.version.version15', [('capacity', 'vim.host.DiskDimensions.Lba', 'vsan.version.version15', 0), ('usedCapacity', 'long', 'vsan.version.version15', 0 | F_OPTIONAL), ('devicePath', 'string', 'vsan.version.version15', 0), ('ssd', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('localDisk', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('scsiDiskType', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('uuid', 'string', 'vsan.version.version15', 0), ('operationalState', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('canonicalName', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('displayName', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('lunType', 'string', 'vsan.version.version15', 0), ('vendor', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('model', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('mountInfo', 'vim.host.MountInfo', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanDirectStorage', 'VimVsanHostVsanDirectStorage', 'vmodl.DynamicData', 'vsan.version.version15', [('scsiDisks', 'vim.vsan.host.VsanScsiDisk[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('tier', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanManagedPMemInfo', 'VimVsanHostVsanManagedPMemInfo', 'vmodl.DynamicData', 'vsan.version.version19', [('localPMemDatastores', 'vim.Datastore[]', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.StoragePoolDiskInfo', 'VimVsanHostStoragePoolDiskInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('disk', 'vim.host.ScsiDisk', 'vsan.version.version21', 0), ('vsanUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version21', 0 | F_OPTIONAL), ('isMounted', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('isEncrypted', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('dekId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('diskType', 'vim.vsan.host.StoragePoolDiskType', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.StoragePoolInfo', 'VimVsanHostStoragePoolInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('storagePoolDisks', 'vim.vsan.host.StoragePoolDiskInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanManagedDisksInfo', 'VimVsanHostVsanManagedDisksInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('vSANDirectDisks', 'vim.vsan.host.VsanDirectStorage[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('vSANDiskMapInfo', 'vim.vsan.host.DiskMapInfoEx[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('vSANPMemInfo', 'vim.vsan.host.VsanManagedPMemInfo', 'vsan.version.version19', 0 | F_OPTIONAL), ('storagePools', 'vim.vsan.host.StoragePoolInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanComponentAlignment', 'VimHostVsanComponentAlignment', 'vmodl.DynamicData', 'vim.version.version10', [('unalignedObjects', 'string[]', 'vim.version.version10', 0 | F_OPTIONAL), ('objectsWithUnalignedComponents', 'string[]', 'vim.version.version10', 0 | F_OPTIONAL), ('totalBytesToSync', 'long', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanRealignResult', 'VimHostVsanRealignResult', 'vmodl.DynamicData', 'vim.version.version10', [('status', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('progress', 'long', 'vim.version.version10', 0 | F_OPTIONAL), ('total', 'long', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanDiskManagementSystemCapability', 'VimVsanHostVsanDiskManagementSystemCapability', 'vmodl.DynamicData', 'vim.version.version10', [('version', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.host.TrimDiskEntry', 'VimVsanHostTrimDiskEntry', 'vmodl.DynamicData', 'vsan.version.version18', [('diskName', 'string', 'vsan.version.version18', 0), ('diskType', 'vim.vsan.host.TrimDiskType', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.TrimDiskSpec', 'VimVsanHostTrimDiskSpec', 'vmodl.DynamicData', 'vsan.version.version18', [('disks', 'vim.vsan.host.TrimDiskEntry[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.DeleteStoragePoolDiskSpec', 'VsanDeleteStoragePoolDiskSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('diskUuids', 'string[]', 'vsan.version.version21', 0), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.host.UpdateStoragePoolDiskSpec', 'VimVsanHostUpdateStoragePoolDiskSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('diskUuids', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('diskFormatVersion', 'long', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanScanObjectsIssue', 'VimVsanVsanScanObjectsIssue', 'vmodl.DynamicData', 'vim.version.version11', [('uuid', 'string', 'vim.version.version11', 0), ('issue', 'vim.vsan.VsanScanObjectsIssueType', 'vim.version.version11', 0)])
CreateDataType('vim.vsan.VsanScanObjectsResult', 'VimVsanVsanScanObjectsResult', 'vmodl.DynamicData', 'vim.version.version11', [('issues', 'vim.vsan.VsanScanObjectsIssue[]', 'vim.version.version11', 0 | F_OPTIONAL), ('fixed', 'vim.vsan.VsanScanObjectsIssue[]', 'vim.version.version11', 0 | F_OPTIONAL), ('fixable', 'vim.vsan.VsanScanObjectsIssue[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VSANCmmdsNodeInfo', 'VimHostVSANCmmdsNodeInfo', 'vmodl.DynamicData', 'vim.version.version10', [('nodeUuid', 'string', 'vim.version.version10', 0), ('isWitness', 'boolean', 'vim.version.version10', 0)])
CreateDataType('vim.host.VSANCmmdsFaultDomainInfo', 'VimHostVSANCmmdsFaultDomainInfo', 'vmodl.DynamicData', 'vim.version.version10', [('faultDomainId', 'string', 'vim.version.version10', 0), ('faultDomainName', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.host.VSANCmmdsPreferredFaultDomainInfo', 'VimHostVSANCmmdsPreferredFaultDomainInfo', 'vmodl.DynamicData', 'vim.version.version10', [('preferredFaultDomainId', 'string', 'vim.version.version10', 0), ('preferredFaultDomainName', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.host.VSANStretchedClusterHostInfo', 'VimHostVSANStretchedClusterHostInfo', 'vmodl.DynamicData', 'vim.version.version10', [('nodeInfo', 'vim.host.VSANCmmdsNodeInfo', 'vim.version.version10', 0), ('faultDomainInfo', 'vim.host.VSANCmmdsFaultDomainInfo', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFaultDomainInfo', 'vim.host.VSANCmmdsPreferredFaultDomainInfo', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VSANStretchedClusterHostCapability', 'VimHostVSANStretchedClusterHostCapability', 'vmodl.DynamicData', 'vim.version.version10', [('featureVersion', 'string', 'vim.version.version10', 0)])
CreateDataType('vim.host.VsanHostVirtualApplianceInfo', 'VsanHostVirtualApplianceInfo', 'vmodl.DynamicData', 'vim.version.version11', [('hostKey', 'vim.HostSystem', 'vim.version.version11', 0), ('isVirtualApp', 'boolean', 'vim.version.version11', 0), ('isDeployedFromOVF', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanUnicastAgentInfo', 'VsanUnicastAgentInfo', 'vmodl.DynamicData', 'vsan.version.version12', [('address', 'string', 'vsan.version.version12', 0), ('uuid', 'string', 'vsan.version.version12', 0), ('port', 'int', 'vsan.version.version12', 0 | F_OPTIONAL), ('nodeType', 'string', 'vsan.version.version12', 0), ('certThumbprint', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.UnknownScanIssue', 'VsanUnknownScanIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version11', [('uuids', 'string[]', 'vim.version.version11', 0)])
CreateDataType('vim.vsan.upgradesystem.BrokenDiskChainIssue', 'VsanBrokenDiskChainIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version11', [('uuids', 'string[]', 'vim.version.version11', 0)])
CreateDataType('vim.vsan.upgradesystem.MixedEsxVersionIssue', 'VsanMixedEsxVersionIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [])
CreateDataType('vim.vsan.upgradesystem.DisallowDataMovementIssue', 'VsanDisallowDataMovementIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vsan.version.version10', [])
CreateDataType('vim.vsan.upgradesystem.DisallowEvacuateDataIssue', 'VsanDisallowEvacuateDataIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vsan.version.version19', [('hosts', 'vim.HostSystem[]', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.upgradesystem.UnsupportedHighDiskVersionIssue', 'VsanUnsupportedHighDiskVersionIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vsan.version.version11', [('hosts', 'vim.HostSystem[]', 'vsan.version.version11', 0)])
CreateDataType('vim.vsan.upgradesystem.ObjectInaccessibleIssue', 'VsanObjectInaccessibleIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.upgradesystem.ObjectPolicyIssue', 'VsanObjectPolicyIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.upgradesystem.DiskUnhealthIssue', 'VsanDiskUnhealthIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.upgradesystem.HostPropertyRetrieveIssue', 'VsanHostPropertyRetrieveIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('hosts', 'vim.HostSystem[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.upgradesystem.HigherObjectsPresentDuringDowngradeIssue', 'VsanHigherObjectsPresentDuringDowngradeIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('uuids', 'string[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.upgradesystem.HostWithHybridDiskgroupIssue', 'VsanHostWithHybridDiskgroupIssue', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vim.version.version10', [('hosts', 'vim.HostSystem[]', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.upgradesystem.HostsCompressionOnlyNotSupported', 'VsanHostsCompressionOnlyNotSupported', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vsan.version.version14', [('hosts', 'vim.HostSystem[]', 'vsan.version.version14', 0)])
CreateDataType('vim.vsan.upgradesystem.RemoteClusterNotCompatible', 'VsanRemoteClusterNotCompatible', 'vim.VsanUpgradeSystem.PreflightCheckIssue', 'vsan.version.version15', [('compatibilityInfo', 'vmodl.KeyAnyValue[]', 'vsan.version.version15', 0)])
CreateDataType('vim.cluster.VsanDiskFormatConversionSpec', 'VsanDiskFormatConversionSpec', 'vmodl.DynamicData', 'vim.version.version10', [('dataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version10', 0 | F_OPTIONAL), ('dataEncryptionConfig', 'vim.vsan.DataEncryptionConfig', 'vsan.version.version3', 0 | F_OPTIONAL), ('skipHostRemediation', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('allowDataMovement', 'boolean', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanDiskFormatConversionCheckResult', 'VsanDiskFormatConversionCheckResult', 'vim.VsanUpgradeSystem.PreflightCheckResult', 'vim.version.version10', [('isSupported', 'boolean', 'vim.version.version10', 0), ('targetVersion', 'int', 'vim.version.version10', 0 | F_OPTIONAL), ('isDataMovementRequired', 'boolean', 'vsan.version.version10', 0 | F_OPTIONAL), ('storagePoolDisk', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanUpgradeSystemUpgradeHistoryStoragePoolOp', 'VsanUpgradeSystemUpgradeHistoryStoragePoolOp', 'vim.VsanUpgradeSystem.UpgradeHistoryItem', 'vsan.version.version21', [('operation', 'string', 'vsan.version.version21', 0), ('diskInfo', 'vim.vsan.host.StoragePoolDiskInfo', 'vsan.version.version21', 0)])
CreateDataType('vim.cluster.VsanUpgradeStatusEx', 'VsanUpgradeStatusEx', 'vim.VsanUpgradeSystem.UpgradeStatus', 'vim.version.version11', [('isPrecheck', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('precheckResult', 'vim.cluster.VsanDiskFormatConversionCheckResult', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVcLifecycleCheckSpec', 'VsanVcLifecycleCheckSpec', 'vmodl.DynamicData', 'vsan.version.version17', [('operation', 'vim.vsan.LifecycleCheckOperation', 'vsan.version.version17', 0)])
CreateDataType('vim.vsan.LifecyclePreCheckResult', 'LifecyclePreCheckResult', 'vmodl.DynamicData', 'vsan.version.version17', [('type', 'vim.vsan.LifecyclePreCheckType', 'vsan.version.version17', 0 | F_OPTIONAL), ('description', 'vmodl.LocalizableMessage', 'vsan.version.version17', 0 | F_OPTIONAL), ('status', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version17', 0), ('reason', 'vmodl.LocalizableMessage', 'vsan.version.version17', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.LifecycleWitnessDetails', 'LifecycleWitnessDetails', 'vmodl.DynamicData', 'vsan.version.version17', [('host', 'vim.HostSystem', 'vsan.version.version17', 0), ('isVirtualAppliance', 'boolean', 'vsan.version.version17', 0), ('sharedClusters', 'vim.ClusterComputeResource[]', 'vsan.version.version17', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.LifecycleFaultDomainDetails', 'LifecycleFaultDomainDetails', 'vmodl.DynamicData', 'vsan.version.version17', [('isPreferredFaultDomain', 'boolean', 'vsan.version.version17', 0 | F_OPTIONAL), ('name', 'string', 'vsan.version.version17', 0 | F_OPTIONAL), ('hosts', 'vim.HostSystem[]', 'vsan.version.version17', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.LifecycleConfigDetails', 'LifecycleConfigDetails', 'vmodl.DynamicData', 'vsan.version.version17', [('clusterType', 'vim.vsan.LifecycleClusterType', 'vsan.version.version17', 0), ('faultDomainsDetails', 'vim.vsan.LifecycleFaultDomainDetails[]', 'vsan.version.version17', 0 | F_OPTIONAL), ('witnessHostsDetails', 'vim.vsan.LifecycleWitnessDetails[]', 'vsan.version.version17', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVcLifecycleCheckResult', 'VsanVcLifecycleCheckResult', 'vmodl.DynamicData', 'vsan.version.version17', [('status', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version17', 0), ('preCheckResults', 'vim.vsan.LifecyclePreCheckResult[]', 'vsan.version.version17', 0 | F_OPTIONAL), ('configDetails', 'vim.vsan.LifecycleConfigDetails', 'vsan.version.version17', 0)])
CreateDataType('vim.vsan.ClusterConfigPrecheckItem', 'VsanClusterConfigPrecheckItem', 'vim.ClusterComputeResource.ValidationResultBase', 'vsan.version.version21', [('status', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version21', 0), ('description', 'vmodl.LocalizableMessage', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.XvcDatastoreItem', 'VsanXvcDatastoreItem', 'vmodl.DynamicData', 'vsan.version.version21', [('ownerVC', 'string', 'vsan.version.version21', 0), ('ownerDC', 'string', 'vsan.version.version21', 0), ('ownerCluster', 'string', 'vsan.version.version21', 0), ('datastoreName', 'string', 'vsan.version.version21', 0), ('datastoreMoId', 'string', 'vsan.version.version21', 0), ('containerId', 'string', 'vsan.version.version21', 0), ('capacity', 'long', 'vsan.version.version21', 0), ('freeSpace', 'long', 'vsan.version.version21', 0)])
CreateDataType('vim.cluster.VsanClusterHealthResultBase', 'VsanClusterHealthResultBase', 'vmodl.DynamicData', 'vim.version.version9', [('label', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHealthCorrelation', 'VsanHealthCorrelation', 'vmodl.DynamicData', 'vsan.version.version18', [('primaryHealthTests', 'string[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('relatedHealthTests', 'string[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('skippedHealthTests', 'string[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthAction', 'VsanClusterHealthAction', 'vmodl.DynamicData', 'vim.version.version9', [('actionId', 'vim.cluster.VsanClusterHealthActionIdEnum', 'vim.version.version9', 0), ('actionLabel', 'vmodl.LocalizableMessage', 'vim.version.version9', 0), ('actionDescription', 'vmodl.LocalizableMessage', 'vim.version.version9', 0), ('enabled', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanHistoricalHealthTest', 'VsanHistoricalHealthTest', 'vmodl.DynamicData', 'vsan.version.version16', [('timestamp', 'vmodl.DateTime', 'vsan.version.version16', 0), ('health', 'string', 'vsan.version.version16', 0), ('testDetails', 'vim.cluster.VsanClusterHealthResultBase[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('testCorrelation', 'vim.cluster.VsanHealthCorrelation', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthTest', 'VsanClusterHealthTest', 'vmodl.DynamicData', 'vim.version.version9', [('testId', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testName', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testDescription', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testShortDescription', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testHealthyEntities', 'int', 'vsan.version.version7', 0 | F_OPTIONAL), ('testAllEntities', 'int', 'vsan.version.version7', 0 | F_OPTIONAL), ('testHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('testDetails', 'vim.cluster.VsanClusterHealthResultBase[]', 'vim.version.version9', 0 | F_OPTIONAL), ('testActions', 'vim.cluster.VsanClusterHealthAction[]', 'vim.version.version9', 0 | F_OPTIONAL), ('historicalResults', 'vim.cluster.VsanHistoricalHealthTest[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('testCorrelation', 'vim.cluster.VsanHealthCorrelation', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterProactiveTestResult', 'VsanClusterProactiveTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('overallStatus', 'string', 'vim.version.version9', 0), ('overallStatusDescription', 'string', 'vim.version.version9', 0), ('timestamp', 'vmodl.DateTime', 'vim.version.version9', 0), ('healthTest', 'vim.cluster.VsanClusterHealthTest', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterNetworkPartitionInfo', 'VsanClusterNetworkPartitionInfo', 'vmodl.DynamicData', 'vim.version.version9', [('hosts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('partitionUnknown', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterNetworkHealthResult', 'VsanClusterNetworkHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostResults', 'vim.host.VsanNetworkHealthResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanVmknicPresent', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('matchingMulticastConfig', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('matchingIpSubnets', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('pingTestSuccess', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('largePingTestSuccess', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('hostLatencyCheckSuccess', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('potentialMulticastIssue', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('otherHostsInVsanCluster', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('partitions', 'vim.cluster.VsanClusterNetworkPartitionInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsWithVsanDisabled', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsDisconnected', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsCommFailure', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsInEsxMaintenanceMode', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsInVsanMaintenanceMode', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('infoAboutUnexpectedHosts', 'vim.host.VsanQueryResultHostInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('clusterInUnicastMode', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('clusterInRDMAMode', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVsanClusterPcapGroup', 'VsanVsanClusterPcapGroup', 'vmodl.DynamicData', 'vim.version.version9', [('master', 'string', 'vim.version.version9', 0), ('members', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVsanClusterPcapResult', 'VsanVsanClusterPcapResult', 'vmodl.DynamicData', 'vim.version.version9', [('pkts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('groups', 'vim.cluster.VsanVsanClusterPcapGroup[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issues', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanVsanPcapResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterWhatifHostFailuresResult', 'VsanClusterWhatifHostFailuresResult', 'vmodl.DynamicData', 'vim.version.version9', [('numFailures', 'long', 'vim.version.version9', 0), ('totalUsedCapacityB', 'long', 'vim.version.version9', 0), ('totalCapacityB', 'long', 'vim.version.version9', 0), ('totalRcReservationB', 'long', 'vim.version.version9', 0), ('totalRcSizeB', 'long', 'vim.version.version9', 0), ('usedComponents', 'long', 'vim.version.version9', 0), ('totalComponents', 'long', 'vim.version.version9', 0), ('componentLimitHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('diskFreeSpaceHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('rcFreeReservationHealth', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('slackSpaceCapRequired', 'long', 'vsan.version.version14', 0 | F_OPTIONAL), ('diskSpaceThreshold', 'vim.vsan.VsanHealthThreshold', 'vsan.version.version15', 0 | F_OPTIONAL), ('capacityReservationInfo', 'vim.vsan.CapacityReservationInfo', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterLimitHealthResult', 'VsanClusterLimitHealthResult', 'vmodl.DynamicData', 'vim.version.version9', [('issueFound', 'boolean', 'vim.version.version9', 0), ('componentLimitHealth', 'string', 'vim.version.version9', 0), ('diskFreeSpaceHealth', 'string', 'vim.version.version9', 0), ('rcFreeReservationHealth', 'string', 'vim.version.version9', 0), ('hostResults', 'vim.host.VsanLimitHealthResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('whatifHostFailures', 'vim.cluster.VsanClusterWhatifHostFailuresResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('hostsCommFailure', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterAdvCfgSyncHostResult', 'VsanClusterAdvCfgSyncHostResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('value', 'string', 'vim.version.version9', 0), ('isDefault', 'boolean', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterAdvCfgSyncResult', 'VsanClusterAdvCfgSyncResult', 'vmodl.DynamicData', 'vim.version.version9', [('inSync', 'boolean', 'vim.version.version9', 0), ('name', 'string', 'vim.version.version9', 0), ('hostValues', 'vim.cluster.VsanClusterAdvCfgSyncHostResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterVMsHealthSummaryResult', 'VsanClusterVMsHealthSummaryResult', 'vmodl.DynamicData', 'vim.version.version9', [('numVMs', 'int', 'vim.version.version9', 0), ('state', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('health', 'string', 'vim.version.version9', 0), ('vmInstanceUuids', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHostVmknicMapping', 'VsanClusterHostVmknicMapping', 'vmodl.DynamicData', 'vim.version.version9', [('host', 'string', 'vim.version.version9', 0), ('vmknic', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanHostHealthSystemVersionResult', 'VsanHostHealthSystemVersionResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('version', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthSystemVersionResult', 'VsanClusterHealthSystemVersionResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostResults', 'vim.cluster.VsanHostHealthSystemVersionResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('vcVersion', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0), ('upgradePossible', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHostClomdLivenessResult', 'VsanHostClomdLivenessResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('clomdStat', 'string', 'vim.version.version9', 0), ('error', 'vmodl.MethodFault', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterClomdLivenessResult', 'VsanClusterClomdLivenessResult', 'vmodl.DynamicData', 'vim.version.version9', [('clomdLivenessResult', 'vim.cluster.VsanHostClomdLivenessResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanHostDpdLivenessResult', 'VsanHostDpdLivenessResult', 'vmodl.DynamicData', 'vsan.version.version22', [('hostname', 'string', 'vsan.version.version22', 0), ('dpdStatus', 'string', 'vsan.version.version22', 0), ('error', 'vmodl.MethodFault', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterDpdLivenessResult', 'VsanClusterDpdLivenessResult', 'vmodl.DynamicData', 'vsan.version.version22', [('dpdLivenessResult', 'vim.cluster.VsanHostDpdLivenessResult[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vsan.version.version22', 0)])
CreateDataType('vim.cluster.VsanHostDatastoreUsageResult', 'VsanHostDatastoreUsageResult', 'vmodl.DynamicData', 'vsan.version.version22', [('hostname', 'string', 'vsan.version.version22', 0), ('configuredUsageThresholdOnHost', 'int', 'vsan.version.version22', 0 | F_OPTIONAL), ('currentUsage', 'float', 'vsan.version.version22', 0 | F_OPTIONAL), ('thresholdExceeded', 'boolean', 'vsan.version.version22', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterDatastoreUsageResult', 'VsanClusterDatastoreUsageResult', 'vmodl.DynamicData', 'vsan.version.version22', [('datastoreUsageResult', 'vim.cluster.VsanHostDatastoreUsageResult[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('clusterConfiguredUsageThreshold', 'int', 'vsan.version.version22', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vsan.version.version22', 0)])
CreateDataType('vim.cluster.VsanClusterHealthSystemObjectsRepairResult', 'VsanClusterHealthSystemObjectsRepairResult', 'vmodl.DynamicData', 'vim.version.version9', [('inRepairingQueueObjects', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('failedRepairObjects', 'vim.host.VsanFailedRepairObjectResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('issueFound', 'boolean', 'vim.version.version9', 0)])
CreateDataType('vim.host.VsanHostHealthSystemStatusResult', 'VsanHostHealthSystemStatusResult', 'vmodl.DynamicData', 'vim.version.version9', [('hostname', 'string', 'vim.version.version9', 0), ('status', 'string', 'vim.version.version9', 0), ('issues', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthSystemStatusResult', 'VsanClusterHealthSystemStatusResult', 'vmodl.DynamicData', 'vim.version.version9', [('status', 'string', 'vim.version.version9', 0), ('goalState', 'string', 'vim.version.version9', 0), ('untrackedHosts', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL), ('trackedHostsStatus', 'vim.host.VsanHostHealthSystemStatusResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHealthExtMgmtPreCheckResult', 'VsanHealthExtMgmtPreCheckResult', 'vmodl.DynamicData', 'vim.version.version9', [('overallResult', 'boolean', 'vim.version.version9', 0), ('esxVersionCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('drsCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('eamConnectionCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('installStateCheckPassed', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('results', 'vim.cluster.VsanClusterHealthTest[]', 'vim.version.version9', 0), ('vumRegistered', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterVmdkLoadTestResult', 'VsanClusterVmdkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('task', 'vim.Task', 'vim.version.version9', 0 | F_OPTIONAL), ('clusterResult', 'vim.cluster.VsanClusterProactiveTestResult', 'vim.version.version9', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanHostVmdkLoadTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterNetworkLoadTestResult', 'VsanClusterNetworkLoadTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('clusterResult', 'vim.cluster.VsanClusterProactiveTestResult', 'vim.version.version9', 0), ('hostResults', 'vim.host.VsanNetworkLoadTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterCreateVmHealthTestResult', 'VsanClusterCreateVmHealthTestResult', 'vmodl.DynamicData', 'vim.version.version9', [('clusterResult', 'vim.cluster.VsanClusterProactiveTestResult', 'vim.version.version9', 0), ('hostResults', 'vim.cluster.VsanHostCreateVmHealthTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterDataProtectionCfgSyncHostResult', 'VsanClusterDataProtectionCfgSyncHostResult', 'vmodl.DynamicData', 'vsan.version.version22', [('hostname', 'string', 'vsan.version.version22', 0), ('value', 'string', 'vsan.version.version22', 0)])
CreateDataType('vim.cluster.VsanClusterDataProtectionCfgSyncResult', 'VsanClusterDataProtectionCfgSyncResult', 'vmodl.DynamicData', 'vsan.version.version22', [('inSync', 'boolean', 'vsan.version.version22', 0), ('name', 'string', 'vsan.version.version22', 0), ('clusterValue', 'string', 'vsan.version.version22', 0), ('hostValues', 'vim.cluster.VsanClusterDataProtectionCfgSyncHostResult[]', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.VsanHostCapability', 'VimVsanHostVsanHostCapability', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('isSupported', 'boolean', 'vim.version.version10', 0), ('isLicensed', 'boolean', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.cluster.VsanManagedStorageInfo', 'VimVsanClusterVsanManagedStorageInfo', 'vmodl.DynamicData', 'vsan.version.version19', [('type', 'vim.vsan.cluster.VsanManagedStorageType', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.DiskMappingCreationSpec', 'VimVsanHostDiskMappingCreationSpec', 'vmodl.DynamicData', 'vim.version.version10', [('host', 'vim.HostSystem', 'vim.version.version10', 0), ('cacheDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0 | F_OPTIONAL), ('capacityDisks', 'vim.host.ScsiDisk[]', 'vim.version.version10', 0 | F_OPTIONAL), ('creationType', 'vim.vsan.host.DiskMappingCreationType', 'vim.version.version10', 0)])
CreateDataType('vim.vsan.host.QueryVsanDisksSpec', 'VimVsanHostQueryVsanDisksSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('diskName', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanDiskType', 'vim.vsan.host.VsanDiskType', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANWitnessHostInfo', 'VimClusterVSANWitnessHostInfo', 'vmodl.DynamicData', 'vim.version.version10', [('nodeUuid', 'string', 'vim.version.version10', 0), ('faultDomainName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFdName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFdUuid', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('unicastAgentAddr', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('host', 'vim.HostSystem', 'vim.version.version10', 0 | F_OPTIONAL), ('metadataMode', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANPreferredFaultDomainInfo', 'VimClusterVSANPreferredFaultDomainInfo', 'vmodl.DynamicData', 'vim.version.version10', [('preferredFaultDomainName', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('preferredFaultDomainId', 'string', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANStretchedClusterConfigIssueInfo', 'VimClusterVSANStretchedClusterConfigIssueInfo', 'vmodl.DynamicData', 'vim.version.version10', [('type', 'vim.cluster.VSANStretchedClusterConfigIssueEnum', 'vim.version.version10', 0), ('target', 'vim.ManagedEntity', 'vim.version.version10', 0 | F_OPTIONAL), ('summary', 'string', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VSANStretchedClusterFaultDomainConfig', 'VimClusterVSANStretchedClusterFaultDomainConfig', 'vmodl.DynamicData', 'vim.version.version10', [('firstFdName', 'string', 'vim.version.version10', 0), ('firstFdHosts', 'vim.HostSystem[]', 'vim.version.version10', 0), ('secondFdName', 'string', 'vim.version.version10', 0), ('secondFdHosts', 'vim.HostSystem[]', 'vim.version.version10', 0)])
CreateDataType('vim.cluster.VSANStretchedClusterCapability', 'VimClusterVSANStretchedClusterCapability', 'vmodl.DynamicData', 'vim.version.version10', [('hostMoId', 'string', 'vim.version.version10', 0), ('connStatus', 'string', 'vim.version.version10', 0 | F_OPTIONAL), ('isSupported', 'boolean', 'vim.version.version10', 0 | F_OPTIONAL), ('hostCapability', 'vim.host.VSANStretchedClusterHostCapability', 'vim.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.EntityCompatibilityResult', 'VSANEntityCompatibilityResult', 'vmodl.DynamicData', 'vsan.version.version15', [('entity', 'vim.ManagedEntity', 'vsan.version.version15', 0), ('compatible', 'boolean', 'vsan.version.version15', 0), ('incompatibleReasons', 'vmodl.LocalizableMessage[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('extendedAttributes', 'vmodl.KeyAnyValue[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.SharedWitnessCompatibilityResult', 'VSANSharedWitnessCompatibilityResult', 'vmodl.DynamicData', 'vsan.version.version15', [('witnessHostCompatibility', 'vim.vsan.EntityCompatibilityResult', 'vsan.version.version15', 0), ('roboClusterCompatibility', 'vim.vsan.EntityCompatibilityResult[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanStretchedClusterConfig', 'VsanStretchedClusterConfig', 'vmodl.DynamicData', 'vsan.version.version15', [('cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0), ('preferredFdName', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('faultDomainConfig', 'vim.cluster.VSANStretchedClusterFaultDomainConfig', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcStretchedClusterConfigSpec', 'VsanVcStretchedClusterConfigSpec', 'vmodl.DynamicData', 'vsan.version.version15', [('witnessHost', 'vim.HostSystem', 'vsan.version.version15', 0), ('clusters', 'vim.cluster.VsanStretchedClusterConfig[]', 'vsan.version.version15', 0), ('witnessDiskMappings', 'vim.vsan.host.DiskMapping[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('witnessStoragePoolSpecs', 'vim.vsan.host.AddStoragePoolDiskSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanRecoveryFlags', 'VimHostVsanRecoveryFlags', 'vmodl.DynamicData', 'vim.version.version11', [('includeAbsent', 'boolean', 'vim.version.version11', 0), ('includeDegraded', 'boolean', 'vim.version.version11', 0), ('includeActive', 'boolean', 'vim.version.version11', 0), ('force', 'boolean', 'vim.version.version11', 0), ('recoverAll', 'boolean', 'vim.version.version11', 0)])
CreateDataType('vim.host.VsanRecoveryObjectProps', 'VimHostVsanRecoveryObjectProps', 'vmodl.DynamicData', 'vim.version.version11', [('hosts', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('extendedAttrib', 'string', 'vim.version.version11', 0), ('size', 'long', 'vim.version.version11', 0), ('hasQuorum', 'boolean', 'vim.version.version11', 0), ('hasDataAvailability', 'boolean', 'vim.version.version11', 0), ('recoverySupported', 'boolean', 'vim.version.version11', 0), ('configRootType', 'string', 'vim.version.version11', 0)])
CreateDataType('vim.host.VsanRecoveryComponentInfo', 'VimHostVsanRecoveryComponentInfo', 'vmodl.DynamicData', 'vim.version.version11', [('offset', 'long', 'vim.version.version11', 0), ('raid0Col', 'long', 'vim.version.version11', 0 | F_OPTIONAL), ('raid0ColCount', 'long', 'vim.version.version11', 0 | F_OPTIONAL), ('uuid', 'string', 'vim.version.version11', 0), ('diskUuid', 'string', 'vim.version.version11', 0), ('host', 'string', 'vim.version.version11', 0), ('size', 'long', 'vim.version.version11', 0), ('staleCsn', 'int', 'vim.version.version11', 0 | F_OPTIONAL), ('componentState', 'int', 'vim.version.version11', 0)])
CreateDataType('vim.host.VsanRecoveryObjectInfo', 'VimHostVsanRecoveryObjectInfo', 'vmodl.DynamicData', 'vim.version.version11', [('uuid', 'string', 'vim.version.version11', 0), ('recoverable', 'boolean', 'vim.version.version11', 0), ('flags', 'vim.host.VsanRecoveryFlags', 'vim.version.version11', 0), ('errs', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('msgs', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('props', 'vim.host.VsanRecoveryObjectProps', 'vim.version.version11', 0), ('comps', 'vim.host.VsanRecoveryComponentInfo[]', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.host.VsanRecoveryStatus', 'VimHostVsanRecoveryStatus', 'vmodl.DynamicData', 'vim.version.version11', [('speed', 'long', 'vim.version.version11', 0), ('progress', 'int', 'vim.version.version11', 0), ('totalBytes', 'long', 'vim.version.version11', 0), ('completedBytes', 'long', 'vim.version.version11', 0), ('message', 'string', 'vim.version.version11', 0), ('hadError', 'boolean', 'vim.version.version11', 0)])
CreateDataType('vim.host.VsanRecoveryHostDiskInfo', 'VimHostVsanRecoveryHostDiskInfo', 'vmodl.DynamicData', 'vim.version.version11', [('hostUuid', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('diskUuid', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanNetworkConfigBaseIssue', 'VsanNetworkConfigBaseIssue', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.vsan.VsanGenericClusterBaseIssue', 'VsanGenericClusterBaseIssue', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.vsan.VsanConfigBaseIssue', 'VsanConfigBaseIssue', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.vsan.VsanBurnInTest', 'VsanBurnInTest', 'vmodl.DynamicData', 'vsan.version.version3', [('testname', 'string', 'vsan.version.version3', 0), ('workload', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('duration', 'long', 'vsan.version.version3', 0), ('result', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.cluster.VsanClusterNetworkPerfTaskSpec', 'VsanClusterNetworkPerfTaskSpec', 'vmodl.DynamicData', 'vsan.version.version15', [('Cluster', 'vim.ClusterComputeResource', 'vsan.version.version15', 0 | F_OPTIONAL), ('DurationSec', 'int', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthLinkBase', 'VsanClusterHealthLinkBase', 'vmodl.DynamicData', 'vsan.version.version18', [])
CreateDataType('vim.vsan.VsanPerfsvcHealthResult', 'VsanPerfsvcHealthResult', 'vmodl.DynamicData', 'vsan.version.version7', [('statsObjectInfo', 'vim.cluster.VsanObjectInformation', 'vsan.version.version7', 0 | F_OPTIONAL), ('statsObjectConsistent', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('statsObjectPolicyConsistent', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('datastoreCompatible', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('enoughFreeSpace', 'boolean', 'vsan.version.version7', 0 | F_OPTIONAL), ('remediateAction', 'vim.vsan.PerfsvcRemediateAction', 'vsan.version.version7', 0 | F_OPTIONAL), ('hostResults', 'vim.cluster.VsanPerfNodeInformation[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('verboseModeStatus', 'boolean', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanGenericClusterBestPracticeHealth', 'VsanGenericClusterBestPracticeHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('drsEnabled', 'boolean', 'vsan.version.version3', 0), ('haEnabled', 'boolean', 'vsan.version.version3', 0), ('issues', 'vim.vsan.VsanGenericClusterBaseIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanNetworkConfigPnicSpeedInconsistencyIssue', 'VsanNetworkConfigPnicSpeedInconsistencyIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0 | F_OPTIONAL), ('speedsMb', 'long[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigVswitchWithNoRedundancyIssue', 'VsanNetworkConfigVswitchWithNoRedundancyIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vswitchName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0 | F_OPTIONAL), ('numPnics', 'long', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigPortgroupWithNoRedundancyIssue', 'VsanNetworkConfigPortgroupWithNoRedundancyIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('portgroupName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0 | F_OPTIONAL), ('pg', 'vim.Network', 'vsan.version.version3', 0 | F_OPTIONAL), ('numPnics', 'long', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigVsanNotOnVdsIssue', 'VsanNetworkConfigVsanNotOnVdsIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vmknic', 'string', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigVdsScopeIssue', 'VsanNetworkConfigVdsScopeIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('vds', 'vim.DistributedVirtualSwitch', 'vsan.version.version3', 0), ('memberHosts', 'vim.HostSystem[]', 'vsan.version.version3', 0), ('nonMemberHosts', 'vim.HostSystem[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkVMotionVmknicNotFountIssue', 'VsanNetworkVMotionVmknicNotFountIssue', 'vim.vsan.VsanNetworkConfigBaseIssue', 'vsan.version.version3', [('hostWithoutVmotionVmknic', 'vim.HostSystem', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanNetworkConfigBestPracticeHealth', 'VsanNetworkConfigBestPracticeHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('vdsPresent', 'boolean', 'vsan.version.version3', 0), ('issues', 'vim.vsan.VsanNetworkConfigBaseIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanConfigNotAllDisksClaimedIssue', 'VsanConfigNotAllDisksClaimedIssue', 'vim.vsan.VsanConfigBaseIssue', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('disks', 'string[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanConfigCheckResult', 'VsanConfigCheckResult', 'vmodl.DynamicData', 'vsan.version.version3', [('vsanEnabled', 'boolean', 'vsan.version.version3', 0), ('issues', 'vim.vsan.VsanConfigBaseIssue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanBurnInTestCheckResult', 'VsanBurnInTestCheckResult', 'vmodl.DynamicData', 'vsan.version.version3', [('passedTests', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('notPerformedTests', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('failedTests', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanHistoricalHealthQuerySpec', 'VsanHistoricalHealthQuerySpec', 'vmodl.DynamicData', 'vsan.version.version16', [('clusters', 'vim.ClusterComputeResource[]', 'vsan.version.version16', 0), ('start', 'vmodl.DateTime', 'vsan.version.version16', 0), ('end', 'vmodl.DateTime', 'vsan.version.version16', 0 | F_OPTIONAL), ('testId', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('groupId', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultKeyValuePair', 'VsanClusterHealthResultKeyValuePair', 'vmodl.DynamicData', 'vim.version.version9', [('key', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('value', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthCheckInfo', 'VsanClusterHealthCheckInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('testId', 'string', 'vsan.version.version3', 0), ('testName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('groupId', 'string', 'vsan.version.version3', 0), ('groupName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultColumnInfo', 'VsanClusterHealthResultColumnInfo', 'vmodl.DynamicData', 'vim.version.version9', [('label', 'string', 'vim.version.version9', 0), ('type', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanClusterHealthExternalLink', 'VsanClusterHealthLink', 'vim.cluster.VsanClusterHealthLinkBase', 'vsan.version.version18', [('url', 'string', 'vsan.version.version18', 0)])
CreateDataType('vim.cluster.VsanClusterHealthInternalLink', 'VsanClusterHealthInternalLink', 'vim.cluster.VsanClusterHealthLinkBase', 'vsan.version.version21', [('screen', 'vim.cluster.VsanUiScreen', 'vsan.version.version21', 0), ('contextObject', 'vmodl.ManagedObject', 'vsan.version.version21', 0 | F_OPTIONAL), ('metadata', 'vim.KeyValue[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultRow', 'VsanClusterHealthResultRow', 'vmodl.DynamicData', 'vim.version.version9', [('values', 'string[]', 'vim.version.version9', 0), ('nestedRows', 'vim.cluster.VsanClusterHealthResultRow[]', 'vim.version.version9', 0 | F_OPTIONAL), ('links', 'vim.cluster.VsanClusterHealthLinkBase[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultTable', 'VsanClusterHealthResultTable', 'vim.cluster.VsanClusterHealthResultBase', 'vim.version.version9', [('columns', 'vim.cluster.VsanClusterHealthResultColumnInfo[]', 'vim.version.version9', 0 | F_OPTIONAL), ('rows', 'vim.cluster.VsanClusterHealthResultRow[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthResultValues', 'VsanClusterHealthResultValues', 'vim.cluster.VsanClusterHealthResultBase', 'vim.version.version9', [('values', 'string[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthGroup', 'VsanClusterHealthGroup', 'vmodl.DynamicData', 'vim.version.version9', [('groupId', 'string', 'vim.version.version9', 0), ('groupName', 'string', 'vim.version.version9', 0), ('groupHealth', 'string', 'vim.version.version9', 0), ('groupTests', 'vim.cluster.VsanClusterHealthTest[]', 'vim.version.version9', 0 | F_OPTIONAL), ('groupDetails', 'vim.cluster.VsanClusterHealthResultBase[]', 'vim.version.version9', 0 | F_OPTIONAL), ('inProgress', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterBalancePerDiskInfo', 'VsanClusterBalancePerDiskInfo', 'vmodl.DynamicData', 'vim.version.version9', [('uuid', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('fullness', 'long', 'vim.version.version9', 0), ('variance', 'long', 'vim.version.version9', 0), ('fullnessAboveThreshold', 'long', 'vim.version.version9', 0), ('dataToMoveB', 'long', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanClusterBalanceSummary', 'VsanClusterBalanceSummary', 'vmodl.DynamicData', 'vim.version.version9', [('varianceThreshold', 'long', 'vim.version.version9', 0), ('disks', 'vim.cluster.VsanClusterBalancePerDiskInfo[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterVMsHealthOverallResult', 'VsanClusterVMsHealthOverallResult', 'vmodl.DynamicData', 'vim.version.version9', [('healthStateList', 'vim.cluster.VsanClusterVMsHealthSummaryResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('overallHealthState', 'string', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVcKmipServersHealth', 'VsanVcKmipServersHealth', 'vmodl.DynamicData', 'vsan.version.version3', [('health', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsProviderId', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsHealth', 'vim.host.VsanKmsHealth[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('clientCertHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('clientCertExpireDate', 'vmodl.DateTime', 'vsan.version.version3', 0 | F_OPTIONAL), ('isAwsKms', 'boolean', 'vsan.version.version8', 0 | F_OPTIONAL), ('cmkHealth', 'string', 'vsan.version.version8', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterDitEncryptionHealthSummary', 'VsanClusterDitEncryptionHealthSummary', 'vmodl.DynamicData', 'vsan.version.version15', [('overallHealth', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version15', 0), ('enabled', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanDitEncryptionHealthSummary[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterEncryptionHealthSummary', 'VsanClusterEncryptionHealthSummary', 'vmodl.DynamicData', 'vsan.version.version3', [('overallHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('configHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('kmsHealth', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('vcKmsResult', 'vim.cluster.VsanVcKmipServersHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanEncryptionHealthSummary[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('aesniHealth', 'string', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterFileServiceHealthSummary', 'VsanClusterFileServiceHealthSummary', 'vmodl.DynamicData', 'vsan.version.version12', [('overallHealth', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('hostResults', 'vim.host.VsanFileServiceHealthSummary[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthSummary', 'VsanClusterHealthSummary', 'vmodl.DynamicData', 'vim.version.version9', [('clusterStatus', 'vim.cluster.VsanClusterHealthSystemStatusResult', 'vim.version.version9', 0 | F_OPTIONAL), ('timestamp', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('clusterVersions', 'vim.cluster.VsanClusterHealthSystemVersionResult', 'vim.version.version9', 0 | F_OPTIONAL), ('objectHealth', 'vim.host.VsanObjectOverallHealth', 'vim.version.version9', 0 | F_OPTIONAL), ('vmHealth', 'vim.cluster.VsanClusterVMsHealthOverallResult', 'vim.version.version9', 0 | F_OPTIONAL), ('networkHealth', 'vim.cluster.VsanClusterNetworkHealthResult', 'vim.version.version9', 0 | F_OPTIONAL), ('limitHealth', 'vim.cluster.VsanClusterLimitHealthResult', 'vim.version.version9', 0 | F_OPTIONAL), ('advCfgSync', 'vim.cluster.VsanClusterAdvCfgSyncResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('createVmHealth', 'vim.cluster.VsanHostCreateVmHealthTestResult[]', 'vim.version.version9', 0 | F_OPTIONAL), ('physicalDisksHealth', 'vim.host.VsanPhysicalDiskHealthSummary[]', 'vim.version.version9', 0 | F_OPTIONAL), ('encryptionHealth', 'vim.cluster.VsanClusterEncryptionHealthSummary', 'vsan.version.version3', 0 | F_OPTIONAL), ('hclInfo', 'vim.cluster.VsanClusterHclInfo', 'vim.version.version9', 0 | F_OPTIONAL), ('groups', 'vim.cluster.VsanClusterHealthGroup[]', 'vim.version.version9', 0 | F_OPTIONAL), ('overallHealth', 'string', 'vim.version.version9', 0), ('overallHealthDescription', 'string', 'vim.version.version9', 0), ('clomdLiveness', 'vim.cluster.VsanClusterClomdLivenessResult', 'vim.version.version9', 0 | F_OPTIONAL), ('diskBalance', 'vim.cluster.VsanClusterBalanceSummary', 'vim.version.version9', 0 | F_OPTIONAL), ('genericCluster', 'vim.vsan.VsanGenericClusterBestPracticeHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('networkConfig', 'vim.vsan.VsanNetworkConfigBestPracticeHealth', 'vsan.version.version3', 0 | F_OPTIONAL), ('vsanConfig', 'vim.vsan.VsanConfigCheckResult', 'vsan.version.version3', 0 | F_OPTIONAL), ('burnInTest', 'vim.vsan.VsanBurnInTestCheckResult', 'vsan.version.version3', 0 | F_OPTIONAL), ('perfsvcHealth', 'vim.vsan.VsanPerfsvcHealthResult', 'vsan.version.version7', 0 | F_OPTIONAL), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServiceHealth', 'vim.cluster.VsanClusterFileServiceHealthSummary', 'vsan.version.version12', 0 | F_OPTIONAL), ('dpdLiveness', 'vim.cluster.VsanClusterDpdLivenessResult', 'vsan.version.version22', 0 | F_OPTIONAL), ('datastoreUsage', 'vim.cluster.VsanClusterDatastoreUsageResult', 'vsan.version.version22', 0 | F_OPTIONAL), ('dataProtectionCfgSync', 'vim.cluster.VsanClusterDataProtectionCfgSyncResult[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('archivalAccessibilityStatus', 'vim.host.VsanArchivalAccessibilityResult[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('ditEncryptionHealth', 'vim.cluster.VsanClusterDitEncryptionHealthSummary', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterTelemetryProxyConfig', 'VsanClusterTelemetryProxyConfig', 'vmodl.DynamicData', 'vim.version.version9', [('host', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('port', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('user', 'string', 'vim.version.version9', 0 | F_OPTIONAL), ('password', 'string', 'vim.version.version9', 0 | F_OPTIONAL | F_SECRET), ('autoDiscovered', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanStorageWorkloadType', 'VsanStorageWorkloadType', 'vmodl.DynamicData', 'vim.version.version9', [('specs', 'vim.host.VsanVmdkLoadTestSpec[]', 'vim.version.version9', 0), ('typeId', 'string', 'vim.version.version9', 0), ('name', 'string', 'vim.version.version9', 0), ('description', 'string', 'vim.version.version9', 0), ('duration', 'long', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanAttachToSrOperation', 'VsanAttachToSrOperation', 'vmodl.DynamicData', 'vim.version.version9', [('task', 'vim.Task', 'vim.version.version9', 0 | F_OPTIONAL), ('success', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('timestamp', 'vmodl.DateTime', 'vim.version.version9', 0 | F_OPTIONAL), ('srNumber', 'string', 'vim.version.version9', 0)])
CreateDataType('vim.cluster.VsanClusterHealthConfigs', 'VsanClusterHealthConfigs', 'vmodl.DynamicData', 'vim.version.version9', [('enableVsanTelemetry', 'boolean', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanTelemetryInterval', 'int', 'vim.version.version9', 0 | F_OPTIONAL), ('vsanTelemetryProxy', 'vim.cluster.VsanClusterTelemetryProxyConfig', 'vim.version.version9', 0 | F_OPTIONAL), ('configs', 'vim.cluster.VsanClusterHealthResultKeyValuePair[]', 'vim.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanObjectExtAttrs', 'VsanClusterObjectExtAttrs', 'vmodl.DynamicData', 'vsan.version.version7', [('uuid', 'string', 'vsan.version.version7', 0), ('objectType', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('objectPath', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('groupUuid', 'string', 'vsan.version.version7', 0 | F_OPTIONAL), ('directoryName', 'string', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterHealthQuerySpec', 'VsanClusterHealthQuerySpec', 'vmodl.DynamicData', 'vsan.version.version15', [('task', 'vim.Task', 'vsan.version.version15', 0 | F_OPTIONAL), ('objectHealthVersion', 'vim.host.VsanObjectHealthVersion', 'vsan.version.version21', 0 | F_OPTIONAL), ('diskNames', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHwToVcgInfoMappingSpec', 'VsanHwToVcgInfoMappingSpec', 'vmodl.DynamicData', 'vsan.version.version18', [('entity', 'string', 'vsan.version.version18', 0), ('vsanHwToVcgInfoMappings', 'vim.host.VsanHwToVcgInfoMapping[]', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.VsanHclQuerySpec', 'VsanHclQuerySpec', 'vmodl.DynamicData', 'vsan.version.version19', [('includeOnlyVsanControllers', 'boolean', 'vsan.version.version19', 0 | F_OPTIONAL), ('cluster', 'vim.ComputeResource', 'vsan.version.version21', 0 | F_OPTIONAL), ('hosts', 'vim.HostSystem[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('vsanStoragePoolEligibleDisksOnly', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanClusterBurnInTestResultList', 'VsanClusterBurnInTestResultList', 'vmodl.DynamicData', 'vsan.version.version3', [('items', 'vim.vsan.VsanBurnInTest[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('hosts', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVibScanResult', 'VsanVibScanResult', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('vibName', 'string', 'vsan.version.version3', 0), ('vibVersion', 'string', 'vsan.version.version3', 0), ('existingVersion', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('maintenanceModeRequired', 'boolean', 'vsan.version.version3', 0), ('rebootRequired', 'boolean', 'vsan.version.version3', 0), ('meetsSystemReq', 'boolean', 'vsan.version.version3', 0), ('pkgDepsMetByHost', 'boolean', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVibInstallPreflightStatus', 'VsanVibInstallPreflightStatus', 'vmodl.DynamicData', 'vsan.version.version3', [('manualVmotionRequired', 'boolean', 'vsan.version.version3', 0), ('rollingRequired', 'boolean', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVcsaDeploymentSpec', 'VsanVcsaDeploymentSpec', 'vmodl.DynamicData', 'vim.version.version11', [('osPassword', 'string', 'vim.version.version11', 0), ('osSshEnabled', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('osTimeToolsSync', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('osNtpServers', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('ssoPassword', 'string', 'vim.version.version11', 0), ('ssoDomainName', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('ssoSiteName', 'string', 'vim.version.version11', 0), ('networkIpFamily', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('networkMode', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('networkIpAddress', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('networkPrefix', 'long', 'vim.version.version11', 0 | F_OPTIONAL), ('networkGateway', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('networkDnsServers', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('networkHostname', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('networkPorts', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcsaDeploymentProgress', 'VsanVcsaDeploymentProgress', 'vmodl.DynamicData', 'vim.version.version11', [('phase', 'vim.vsan.VsanVcsaDeploymentPhase', 'vim.version.version11', 0), ('progressPct', 'long', 'vim.version.version11', 0), ('message', 'string', 'vim.version.version11', 0), ('success', 'boolean', 'vim.version.version11', 0), ('error', 'vmodl.MethodFault', 'vim.version.version11', 0 | F_OPTIONAL), ('updateCounter', 'long', 'vim.version.version11', 0), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('vm', 'vim.VirtualMachine', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcsaDeploymentSpecValidationResult', 'VsanVcsaDeploymentSpecValidationResult', 'vmodl.DynamicData', 'vim.version.version11', [('valid', 'boolean', 'vim.version.version11', 0), ('errors', 'vmodl.MethodFault[]', 'vim.version.version11', 0 | F_OPTIONAL), ('invalidProperties', 'string[]', 'vim.version.version11', 0 | F_OPTIONAL), ('deploymentSpec', 'vim.vsan.VsanVcsaDeploymentSpec', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.host.CreateNativeKeyProviderSpec', 'VsanHostCreateNativeKeyProviderSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('provider', 'string', 'vsan.version.version21', 0), ('keyId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('keyDerivationKey', 'string', 'vsan.version.version21', 0 | F_OPTIONAL | F_SECRET), ('tpmRequired', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanPrepareVsanForVcsaSpec', 'VsanPrepareVsanForVcsaSpec', 'vmodl.DynamicData', 'vim.version.version11', [('vsanDiskMappingCreationSpec', 'vim.vsan.host.DiskMappingCreationSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version11', 0 | F_OPTIONAL), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDataEncryptionConfig', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version8', 0 | F_OPTIONAL), ('vsanAddStoragePoolDiskSpec', 'vim.vsan.host.AddStoragePoolDiskSpec', 'vsan.version.version21', 0 | F_OPTIONAL), ('createNativeKeyProviderSpec', 'vim.vsan.host.CreateNativeKeyProviderSpec', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcPostDeployConfigSpec', 'VsanVcPostDeployConfigSpec', 'vmodl.DynamicData', 'vim.version.version11', [('dcName', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('clusterName', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('firstHost', 'vim.host.ConnectSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('hostsToAdd', 'vim.host.ConnectSpec[]', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDataEfficiencyConfig', 'vim.vsan.DataEfficiencyConfig', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanLicenseKey', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('hostLicenseKey', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('vsanDataEncryptionConfig', 'vim.vsan.host.EncryptionInfo', 'vsan.version.version8', 0 | F_OPTIONAL), ('createNativeKeyProviderSpec', 'vim.vsan.host.CreateNativeKeyProviderSpec', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVcsaBootstrapOntoVsanSpec', 'VsanVcsaBootstrapOntoVsanSpec', 'vmodl.DynamicData', 'vim.version.version11', [('vsanDiskMappingCreationSpec', 'vim.vsan.host.DiskMappingCreationSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('vcConfig', 'vim.vsan.VsanVcsaDeploymentSpec', 'vim.version.version11', 0), ('portgroup', 'vim.Network', 'vim.version.version11', 0), ('vmName', 'string', 'vim.version.version11', 0), ('vsanBootstrapOnly', 'boolean', 'vim.version.version11', 0 | F_OPTIONAL), ('vcsaOvaPath', 'string', 'vim.version.version11', 0 | F_OPTIONAL), ('vcPostDeployConfig', 'vim.vsan.VsanVcPostDeployConfigSpec', 'vim.version.version11', 0 | F_OPTIONAL), ('taskId', 'string', 'vim.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVdsPgMigrationVmInfo', 'VsanVdsPgMigrationVmInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('vm', 'vim.VirtualMachine', 'vsan.version.version3', 0), ('vnicLabel', 'string[]', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVdsPgMigrationHostInfo', 'VsanVdsPgMigrationHostInfo', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0), ('hostname', 'string', 'vsan.version.version3', 0), ('vmknicDevices', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('vmVnics', 'vim.vsan.VsanVdsPgMigrationVmInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVdsPgMigrationSpec', 'VsanVdsPgMigrationSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('vssPgName', 'string', 'vsan.version.version3', 0), ('dvPgName', 'string', 'vsan.version.version3', 0), ('vdsPgSetting', 'vim.dvs.VmwareDistributedVirtualSwitch.VmwarePortConfigPolicy', 'vsan.version.version3', 0), ('vdsPgType', 'string', 'vsan.version.version3', 0), ('hosts', 'vim.vsan.VsanVdsPgMigrationHostInfo[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('collisionRename', 'boolean', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVdsMigrationPlan', 'VsanVdsMigrationPlan', 'vmodl.DynamicData', 'vsan.version.version3', [('vdsSpec', 'vim.DistributedVirtualSwitch.CreateSpec', 'vsan.version.version3', 0), ('pgs', 'vim.vsan.VsanVdsPgMigrationSpec[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('inaccessibleVms', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('infraVms', 'vim.VirtualMachine[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanVnicVdsMigrationSpec', 'VsanVnicVdsMigrationSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('key', 'int', 'vsan.version.version3', 0), ('vdsBacking', 'vim.vm.device.VirtualDevice.BackingInfo', 'vsan.version.version3', 0)])
CreateDataType('vim.vsan.VsanVmVdsMigrationSpec', 'VsanVmVdsMigrationSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('vmInstanceUuid', 'string', 'vsan.version.version3', 0), ('vnics', 'vim.vsan.VsanVnicVdsMigrationSpec[]', 'vsan.version.version3', 0)])
CreateDataType('vim.VsanResourceConstraint', 'VsanResourceConstraint', 'vmodl.DynamicData', 'vsan.version.version3', [('targetType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanDataObfuscationRule', 'VsanDataObfuscationRule', 'vmodl.DynamicData', 'vsan.version.version3', [])
CreateDataType('vim.VsanObjectTypeRule', 'VsanObjectTypeRule', 'vmodl.DynamicData', 'vsan.version.version3', [('objectType', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('attributes', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanRegexBasedRule', 'VsanRegexBasedRule', 'vmodl.DynamicData', 'vsan.version.version3', [('rules', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanPropertyConstraint', 'VsanPropertyConstraint', 'vim.VsanResourceConstraint', 'vsan.version.version3', [('propertyName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('comparator', 'vim.VsanPropertyConstraintComparatorEnum', 'vsan.version.version3', 0 | F_OPTIONAL), ('comparableValue', 'vmodl.KeyAnyValue', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanCompositeConstraint', 'VsanCompositeConstraint', 'vim.VsanResourceConstraint', 'vsan.version.version3', [('nestedConstraints', 'vim.VsanResourceConstraint[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('conjoiner', 'vim.VsanCompositeConstraintConjoinerEnum', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanComparator', 'VsanComparator', 'vmodl.DynamicData', 'vsan.version.version7', [])
CreateDataType('vim.VsanJsonComparator', 'VsanJsonComparator', 'vim.VsanComparator', 'vsan.version.version7', [('comparator', 'vim.VsanPropertyConstraintComparatorEnum', 'vsan.version.version7', 0 | F_OPTIONAL), ('comparableValue', 'vmodl.KeyAnyValue', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanNestJsonComparator', 'VsanNestJsonComparator', 'vim.VsanComparator', 'vsan.version.version7', [('nestedComparators', 'vim.VsanJsonComparator[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('conjoiner', 'vim.VsanCompositeConstraintConjoinerEnum', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanJsonFilterRule', 'VsanJsonFilterRule', 'vmodl.DynamicData', 'vsan.version.version7', [('filterComparator', 'vim.VsanComparator', 'vsan.version.version7', 0 | F_OPTIONAL), ('comparablePath', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('keysWithStrVal', 'string[]', 'vsan.version.version7', 0 | F_OPTIONAL), ('propertyName', 'string', 'vsan.version.version7', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanMassCollectorPropertyParams', 'VsanMassCollectorPropertyParams', 'vmodl.DynamicData', 'vsan.version.version3', [('propertyName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('propertyParams', 'vmodl.KeyAnyValue[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.VsanMassCollectorSpec', 'VsanMassCollectorSpec', 'vmodl.DynamicData', 'vsan.version.version3', [('objects', 'vmodl.ManagedObject[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('objectCollection', 'vim.VsanMassCollectorObjectCollectionEnum', 'vsan.version.version3', 0 | F_OPTIONAL), ('properties', 'string[]', 'vsan.version.version3', 0), ('propertiesParams', 'vim.VsanMassCollectorPropertyParams[]', 'vsan.version.version3', 0 | F_OPTIONAL), ('constraint', 'vim.VsanResourceConstraint', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanCapability', 'VsanCapability', 'vmodl.DynamicData', 'vim.version.version10', [('target', 'vmodl.ManagedObject', 'vim.version.version10', 0 | F_OPTIONAL), ('capabilities', 'string[]', 'vim.version.version10', 0 | F_OPTIONAL), ('statuses', 'string[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.EntityResourceCheckDetails', 'EntityResourceCheckDetails', 'vmodl.DynamicData', 'vsan.version.version10', [('name', 'string', 'vsan.version.version10', 0 | F_OPTIONAL), ('uuid', 'string', 'vsan.version.version10', 0 | F_OPTIONAL), ('isNew', 'boolean', 'vsan.version.version10', 0 | F_OPTIONAL), ('capacity', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('postOperationCapacity', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('usedCapacity', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('postOperationUsedCapacity', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('additionalRequiredCapacity', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('maxComponents', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('components', 'long', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DiskResourceCheckResult', 'VsanDiskResourceCheckResult', 'vim.vsan.EntityResourceCheckDetails', 'vsan.version.version10', [])
CreateDataType('vim.vsan.StoragePoolDiskResourceCheckResult', 'VsanStoragePoolDiskResourceCheckResult', 'vim.vsan.DiskResourceCheckResult', 'vsan.version.version21', [('diskType', 'vim.vsan.host.StoragePoolDiskType', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DiskGroupResourceCheckResult', 'VsanDiskGroupResourceCheckResult', 'vim.vsan.EntityResourceCheckDetails', 'vsan.version.version10', [('cacheTierDisk', 'vim.vsan.DiskResourceCheckResult', 'vsan.version.version10', 0 | F_OPTIONAL), ('capacityTierDisks', 'vim.vsan.DiskResourceCheckResult[]', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.StoragePoolResourceCheckResult', 'VsanStoragePoolResourceCheckResult', 'vim.vsan.EntityResourceCheckDetails', 'vsan.version.version21', [('disks', 'vim.vsan.StoragePoolDiskResourceCheckResult[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.HostResourceCheckResult', 'VsanHostResourceCheckResult', 'vim.vsan.EntityResourceCheckDetails', 'vsan.version.version10', [('host', 'vim.HostSystem', 'vsan.version.version10', 0 | F_OPTIONAL), ('diskGroups', 'vim.vsan.DiskGroupResourceCheckResult[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('storagePools', 'vim.vsan.StoragePoolResourceCheckResult[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FaultDomainResourceCheckResult', 'VsanFaultDomainResourceCheckResult', 'vim.vsan.EntityResourceCheckDetails', 'vsan.version.version10', [('hosts', 'vim.vsan.HostResourceCheckResult[]', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DurabilityResult', 'VsanDurabilityResult', 'vmodl.DynamicData', 'vsan.version.version21', [('isDurable', 'boolean', 'vsan.version.version21', 0), ('exceedCompLimit', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('noSpace', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('noResource', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('staleDurabilityComp', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ResourceCheckResult', 'VsanResourceCheckResult', 'vim.vsan.EntityResourceCheckDetails', 'vsan.version.version10', [('timestamp', 'vmodl.DateTime', 'vsan.version.version10', 0), ('status', 'string', 'vsan.version.version10', 0), ('messages', 'vmodl.LocalizableMessage[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('faultDomains', 'vim.vsan.FaultDomainResourceCheckResult[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('dataToMove', 'long', 'vsan.version.version10', 0 | F_OPTIONAL), ('nonCompliantObjects', 'string[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('inaccessibleObjects', 'string[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('capacityThreshold', 'vim.vsan.VsanHealthThreshold', 'vsan.version.version11', 0 | F_OPTIONAL), ('health', 'vim.cluster.VsanClusterHealthSummary', 'vsan.version.version10', 0 | F_OPTIONAL), ('dataToResync', 'long', 'vsan.version.version19', 0 | F_OPTIONAL), ('durabilityResult', 'vim.vsan.DurabilityResult', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ResourceCheckComponentResult', 'VsanResourceCheckComponentResult', 'vim.vsan.ResourceCheckResult', 'vsan.version.version17', [('type', 'vim.vsan.ResourceCheckComponentType', 'vsan.version.version17', 0)])
CreateDataType('vim.vsan.ResourceCheckVsanResult', 'VsanResourceCheckVsanResult', 'vim.vsan.ResourceCheckComponentResult', 'vsan.version.version17', [])
CreateDataType('vim.vsan.ResourceCheckDataPersistenceResult', 'VsanResourceCheckDataPersistenceResult', 'vim.vsan.ResourceCheckComponentResult', 'vsan.version.version17', [('dataToRebuild', 'long', 'vsan.version.version17', 0 | F_OPTIONAL), ('inaccessibleInstances', 'string[]', 'vsan.version.version17', 0 | F_OPTIONAL), ('reducedAvailabilityInstances', 'string[]', 'vsan.version.version17', 0 | F_OPTIONAL), ('rebuildInstances', 'string[]', 'vsan.version.version17', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ResourceCheckTaskDetails', 'VsanResourceCheckTaskDetails', 'vmodl.DynamicData', 'vsan.version.version10', [('task', 'vim.Task', 'vsan.version.version10', 0), ('host', 'vim.HostSystem', 'vsan.version.version10', 0 | F_OPTIONAL), ('hostUuid', 'string', 'vsan.version.version10', 0 | F_OPTIONAL), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.DiskDataEvacuationResourceCheckTaskDetails', 'VsanDiskDataEvacuationResourceCheckTaskDetails', 'vim.vsan.ResourceCheckTaskDetails', 'vsan.version.version14', [('diskUuid', 'string', 'vsan.version.version14', 0 | F_OPTIONAL), ('isCapacityTier', 'boolean', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ResourceCheckStatus', 'VsanResourceCheckStatus', 'vmodl.DynamicData', 'vsan.version.version10', [('status', 'vim.vsan.ResourceCheckStatusType', 'vsan.version.version10', 0), ('result', 'vim.vsan.ResourceCheckResult', 'vsan.version.version10', 0 | F_OPTIONAL), ('task', 'vim.vsan.ResourceCheckTaskDetails', 'vsan.version.version10', 0 | F_OPTIONAL), ('parentTask', 'vim.vsan.ResourceCheckTaskDetails', 'vsan.version.version10', 0 | F_OPTIONAL), ('componentResults', 'vim.vsan.ResourceCheckComponentResult[]', 'vsan.version.version17', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.ResourceCheckSpec', 'VsanResourceCheckSpec', 'vmodl.DynamicData', 'vsan.version.version10', [('operation', 'string', 'vsan.version.version10', 0), ('entities', 'string[]', 'vsan.version.version10', 0 | F_OPTIONAL), ('maintenanceSpec', 'vim.host.MaintenanceSpec', 'vsan.version.version10', 0 | F_OPTIONAL), ('parent', 'vim.Task', 'vsan.version.version10', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanDiskComplianceResourceCheck', 'VimVsanVsanDiskComplianceResourceCheck', 'vmodl.DynamicData', 'vsan.version.version3', [('deviceName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('uuid', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('capacity', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('initCapacity', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('finalCapacity', 'long', 'vsan.version.version3', 0 | F_OPTIONAL), ('isNew', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanDiskGroupComplianceResourceCheck', 'VimVsanVsanDiskGroupComplianceResourceCheck', 'vmodl.DynamicData', 'vsan.version.version3', [('ssd', 'vim.vsan.VsanDiskComplianceResourceCheck', 'vsan.version.version3', 0 | F_OPTIONAL), ('capacityDevices', 'vim.vsan.VsanDiskComplianceResourceCheck[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanHostComplianceResourceCheck', 'VimVsanVsanHostComplianceResourceCheck', 'vmodl.DynamicData', 'vsan.version.version3', [('host', 'vim.HostSystem', 'vsan.version.version3', 0 | F_OPTIONAL), ('uuid', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('isNew', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('diskGroups', 'vim.vsan.VsanDiskGroupComplianceResourceCheck[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFaultDomainComplianceResourceCheck', 'VimVsanVsanFaultDomainComplianceResourceCheck', 'vmodl.DynamicData', 'vsan.version.version3', [('fdName', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('uuid', 'string', 'vsan.version.version3', 0 | F_OPTIONAL), ('isNew', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('hosts', 'vim.vsan.VsanHostComplianceResourceCheck[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanComplianceResourceCheckReport', 'VimVsanVsanComplianceResourceCheckReport', 'vmodl.DynamicData', 'vsan.version.version3', [('isValid', 'boolean', 'vsan.version.version3', 0 | F_OPTIONAL), ('faultDomains', 'vim.vsan.VsanFaultDomainComplianceResourceCheck[]', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanComplianceResourceCheckStatus', 'VsanComplianceResourceCheckStatus', 'vmodl.DynamicData', 'vsan.version.version3', [('status', 'vim.vsan.cluster.ComplianceResourceCheckStatusType', 'vsan.version.version7', 0 | F_OPTIONAL), ('result', 'vim.vsan.VsanComplianceResourceCheckReport', 'vsan.version.version3', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MountPrecheckItem', 'VsanMountPrecheckItem', 'vmodl.DynamicData', 'vsan.version.version15', [('type', 'vim.vsan.MountPrecheckType', 'vsan.version.version15', 0), ('description', 'vmodl.LocalizableMessage', 'vsan.version.version15', 0), ('status', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version15', 0), ('reason', 'vmodl.LocalizableMessage[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MountPrecheckNetworkLatency', 'VsanMountPrecheckNetworkLatency', 'vmodl.DynamicData', 'vsan.version.version15', [('host', 'vim.HostSystem', 'vsan.version.version15', 0), ('networkLatency', 'long', 'vsan.version.version15', 0), ('status', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version15', 0)])
CreateDataType('vim.vsan.MountPrecheckNetworkConnectivity', 'VsanMountPrecheckNetworkConnectivity', 'vmodl.DynamicData', 'vsan.version.version15', [('host', 'vim.HostSystem', 'vsan.version.version15', 0), ('smallPingTestSuccessPct', 'int', 'vsan.version.version15', 0), ('largePingTestSuccessPct', 'int', 'vsan.version.version15', 0), ('status', 'vim.vsan.VsanHealthStatusType', 'vsan.version.version15', 0)])
CreateDataType('vim.vsan.MountPrecheckNetworkLatencyDetail', 'VsanMountPrecheckNetworkLatencyDetail', 'vmodl.DynamicData', 'vsan.version.version15', [('host', 'vim.HostSystem', 'vsan.version.version15', 0), ('networkLatencies', 'vim.vsan.MountPrecheckNetworkLatency[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MountPrecheckNetworkConnectivityDetail', 'VsanMountPrecheckNetworkConnectivityDetail', 'vmodl.DynamicData', 'vsan.version.version15', [('host', 'vim.HostSystem', 'vsan.version.version15', 0), ('networkConnectivity', 'vim.vsan.MountPrecheckNetworkConnectivity[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MountPrecheckNetworkLatencyResult', 'VsanMountPrecheckNetworkLatencyResult', 'vim.vsan.MountPrecheckItem', 'vsan.version.version15', [('details', 'vim.vsan.MountPrecheckNetworkLatencyDetail[]', 'vsan.version.version15', 0)])
CreateDataType('vim.vsan.MountPrecheckNetworkConnectivityResult', 'VsanMountPrecheckNetworkConnectivityResult', 'vim.vsan.MountPrecheckItem', 'vsan.version.version15', [('details', 'vim.vsan.MountPrecheckNetworkConnectivityDetail[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.MountPrecheckResult', 'VsanMountPrecheckResult', 'vmodl.DynamicData', 'vsan.version.version15', [('result', 'vim.vsan.MountPrecheckItem[]', 'vsan.version.version15', 0)])
CreateDataType('vim.vsan.XvcClientInfoSpec', 'VsanXvcClientInfoSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('datastore', 'vim.Datastore[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0), ('ownerVc', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.XvcServerUpdateResult', 'VsanXvcServerUpdateResult', 'vmodl.DynamicData', 'vsan.version.version21', [('serverClusterInfo', 'vim.vsan.XVCDatastoreDetailedInfo', 'vsan.version.version21', 0 | F_OPTIONAL), ('checkResult', 'vim.vsan.MountPrecheckResult', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVumSystemClusterConfig', 'VsanVumSystemClusterConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0), ('baselinePreferenceType', 'vim.cluster.VsanBaselinePreferenceType', 'vsan.version.version21', 0)])
CreateDataType('vim.cluster.VsanVumSystemConfig', 'VsanVumSystemConfig', 'vmodl.DynamicData', 'vsan.version.version4', [('enabled', 'boolean', 'vsan.version.version4', 0 | F_OPTIONAL), ('autoCheckInterval', 'int', 'vsan.version.version4', 0 | F_OPTIONAL), ('metadataUpdateInterval', 'int', 'vsan.version.version4', 0 | F_OPTIONAL), ('clusterConfig', 'vim.cluster.VsanVumSystemClusterConfig[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('releaseDbLastUpdate', 'vmodl.DateTime', 'vsan.version.version9', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVumSystemConfigSpec', 'VsanVumSystemConfigSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('clusterConfig', 'vim.cluster.VsanVumSystemClusterConfig[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrMountSpec', 'VsanFlrMountSpec', 'vmodl.DynamicData', 'vsan.version.version22', [])
CreateDataType('vim.cluster.VsanFlrDpMountSpec', 'VsanFlrDpMountSpec', 'vim.cluster.VsanFlrMountSpec', 'vsan.version.version22', [('cgId', 'string', 'vsan.version.version22', 0), ('cgInstanceKey', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('entities', 'vim.ManagedEntity[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('location', 'vim.cluster.VsanFlrLocation', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrManagedMountSpec', 'VsanFlrManagedMountSpec', 'vim.cluster.VsanFlrMountSpec', 'vsan.version.version22', [('snapshot', 'vim.vm.Snapshot', 'vsan.version.version22', 0)])
CreateDataType('vim.cluster.VsanFlrQueryFileSpec', 'VsanFlrQueryFileSpec', 'vmodl.DynamicData', 'vsan.version.version22', [('volumeId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('fileId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrRetrieveFileSpec', 'VsanFlrRetrieveFileSpec', 'vim.cluster.VsanFlrQueryFileSpec', 'vsan.version.version22', [])
CreateDataType('vim.cluster.VsanFlrSearchFileSpec', 'VsanFlrSearchFileSpec', 'vim.cluster.VsanFlrQueryFileSpec', 'vsan.version.version22', [('nameRegEx', 'string', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrSessionSpec', 'VsanFlrSessionSpec', 'vmodl.DynamicData', 'vsan.version.version22', [('mountSpec', 'vim.cluster.VsanFlrMountSpec[]', 'vsan.version.version22', 0 | F_OPTIONAL), ('searchSpec', 'vim.cluster.VsanFlrSearchFileSpec', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrFileEntry', 'VsanFlrFileEntry', 'vmodl.DynamicData', 'vsan.version.version22', [('volumeId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('fileId', 'string', 'vsan.version.version22', 0), ('parentId', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('directory', 'boolean', 'vsan.version.version22', 0), ('name', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('path', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('attrs', 'vim.vm.guest.FileManager.FileInfo', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrQueryFileResult', 'VsanFlrQueryFileResult', 'vmodl.DynamicData', 'vsan.version.version22', [('files', 'vim.cluster.VsanFlrFileEntry[]', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrRetrieveFileResult', 'VsanFlrRetrieveFileResult', 'vmodl.DynamicData', 'vsan.version.version22', [('url', 'string', 'vsan.version.version22', 0), ('thumbprint', 'string', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrVolume', 'VsanFlrVolume', 'vmodl.DynamicData', 'vsan.version.version22', [('id', 'string', 'vsan.version.version22', 0), ('nativeId', 'string', 'vsan.version.version22', 0), ('label', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('fileSystemType', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('mountPoint', 'string', 'vsan.version.version22', 0 | F_OPTIONAL), ('capacity', 'long', 'vsan.version.version22', 0 | F_OPTIONAL), ('freeSpace', 'long', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrQueryVolumesResult', 'VsanFlrQueryVolumesResult', 'vmodl.DynamicData', 'vsan.version.version22', [('volumes', 'vim.cluster.VsanFlrVolume[]', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanFlrHealthState', 'VsanFlrHealthState', 'vmodl.DynamicData', 'vsan.version.version22', [('status', 'string', 'vsan.version.version22', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileServiceConfigFormatSpec', 'VsanFileServiceConfigFormatSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('operationList', 'vim.vsan.FileServiceConfigOpType[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServiceOvfSpec', 'VsanFileServiceOvfSpec', 'vmodl.DynamicData', 'vsan.version.version12', [('version', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('updateTime', 'vmodl.DateTime', 'vsan.version.version12', 0 | F_OPTIONAL), ('task', 'vim.Task', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServicePreflightCheckResult', 'VsanFileServicePreflightCheckResult', 'vmodl.DynamicData', 'vsan.version.version12', [('ovfInstalled', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('fsvmVersion', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('lastUpgradeDate', 'vmodl.DateTime', 'vsan.version.version12', 0 | F_OPTIONAL), ('ovfMixedModeIssue', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('hostVersion', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('mixedModeIssue', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('networkPartitionIssue', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('vsanDatastoreIssue', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('domainConfigIssue', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServiceVersion', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('dvsConfigIssue', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('domainConfigWarning', 'string', 'vsan.version.version19', 0 | F_OPTIONAL), ('ntpConfigWarning', 'string', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServerConfigCheckResult', 'VsanFileServerConfigCheckResult', 'vmodl.DynamicData', 'vsan.version.version19', [('errorMessages', 'vmodl.LocalizableMessage[]', 'vsan.version.version19', 0 | F_OPTIONAL), ('warningMessages', 'vmodl.LocalizableMessage[]', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServiceLastFailureDomainConfigAndResult', 'VsanFileServiceLastFailureDomainConfigAndResult', 'vmodl.DynamicData', 'vsan.version.version19', [('domainConfig', 'vim.vsan.FileServiceDomainConfig', 'vsan.version.version19', 0 | F_OPTIONAL), ('result', 'string', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServiceAdvancedConfig', 'VsanFileServiceAdvancedConfig', 'vmodl.DynamicData', 'vsan.version.version15', [('ditEnabled', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('faEnabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareNetPermission', 'VsanFileShareNetPermission', 'vmodl.DynamicData', 'vsan.version.version12', [('ips', 'string', 'vsan.version.version12', 0), ('permissions', 'vim.vsan.FileShareAccessType', 'vsan.version.version12', 0 | F_OPTIONAL), ('allowRoot', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareSmbOptions', 'VsanFileShareSmbOptions', 'vmodl.DynamicData', 'vsan.version.version15', [('encryption', 'vim.vsan.FileShareSmbEncryptionType', 'vsan.version.version15', 0 | F_OPTIONAL), ('accessBasedEnumeration', 'boolean', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareQueryProperties', 'VsanFileShareQueryProperties', 'vmodl.DynamicData', 'vsan.version.version15', [('includeBasic', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('includeUsedCapacity', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('includeVsanObjectUuids', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('includeAllLabels', 'boolean', 'vsan.version.version15', 0 | F_OPTIONAL), ('labelKeys', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareQuerySpec', 'VsanFileShareQuerySpec', 'vmodl.DynamicData', 'vsan.version.version12', [('domainName', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('uuids', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('names', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('offset', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('limit', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('managedBy', 'vim.vsan.FileShareManagingEntity[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('protocols', 'vim.vsan.FileShareProtocol[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('pageNumber', 'long', 'vsan.version.version15', 0 | F_OPTIONAL), ('properties', 'vim.vsan.FileShareQueryProperties', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareAntiVirusExclusionRules', 'VsanFileShareAntiVirusExclusionRules', 'vmodl.DynamicData', 'vsan.version.version21', [('fileTypes', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareAntiVirusScanActionConfig', 'VsanFileShareAntiVirusScanActionConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('moveToQuarantineIfInfected', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('deleteFileIfInfected', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('quarantineLocation', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareAntiVirusOnDemandScanConfig', 'VsanFileShareAntiVirusOnDemandScanConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('enabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('periodicScanHours', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanActions', 'vim.vsan.FileShareAntiVirusScanActionConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('avScanExclusionRules', 'vim.vsan.FileShareAntiVirusExclusionRules', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareAntiVirusOnAccessScanConfig', 'VsanFileShareAntiVirusOnAccessScanConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('enabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('onAccessScanType', 'vim.vsan.FileShareAntiVirusOnAccessScanType', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanActions', 'vim.vsan.FileShareAntiVirusScanActionConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('avScanExclusionRules', 'vim.vsan.FileShareAntiVirusExclusionRules', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareAntiVirusScanConfig', 'VsanFileShareAntiVirusScanConfig', 'vmodl.DynamicData', 'vsan.version.version21', [('onDemandScanConfig', 'vim.vsan.FileShareAntiVirusOnDemandScanConfig', 'vsan.version.version21', 0 | F_OPTIONAL), ('onAccessScanConfig', 'vim.vsan.FileShareAntiVirusOnAccessScanConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareAntiVirusScanQuerySpec', 'VsanFileShareAntiVirusScanQuerySpec', 'vmodl.DynamicData', 'vsan.version.version21', [('domainName', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('uuids', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('names', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('offset', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('limit', 'int', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareConfig', 'VsanFileShareConfig', 'vmodl.DynamicData', 'vsan.version.version12', [('name', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('domainName', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('quota', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('softQuota', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('labels', 'vim.KeyValue[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('storagePolicy', 'vim.vm.ProfileSpec', 'vsan.version.version12', 0 | F_OPTIONAL), ('permission', 'vim.vsan.FileShareNetPermission[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('protocols', 'vim.vsan.FileShareProtocol[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('smbOptions', 'vim.vsan.FileShareSmbOptions', 'vsan.version.version15', 0 | F_OPTIONAL), ('nfsSecType', 'vim.vsan.FileShareNfsSecType', 'vsan.version.version15', 0 | F_OPTIONAL), ('affinityLocation', 'vim.vsan.VsanSiteLocationType', 'vsan.version.version16', 0 | F_OPTIONAL), ('fileIndexingEnabled', 'boolean', 'vsan.version.version21', 0 | F_OPTIONAL), ('antiVirusScanConfig', 'vim.vsan.FileShareAntiVirusScanConfig', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareRuntimeInfo', 'VsanFileShareRuntimeInfo', 'vmodl.DynamicData', 'vsan.version.version12', [('usedCapacity', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('hostname', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('address', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('vsanObjectUuids', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('accessPoints', 'vim.KeyValue[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('managedBy', 'vim.vsan.FileShareManagingEntity', 'vsan.version.version12', 0 | F_OPTIONAL), ('fileServerFQDN', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShare', 'VsanFileShare', 'vmodl.DynamicData', 'vsan.version.version12', [('uuid', 'string', 'vsan.version.version12', 0), ('config', 'vim.vsan.FileShareConfig', 'vsan.version.version12', 0 | F_OPTIONAL), ('runtime', 'vim.vsan.FileShareRuntimeInfo', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileServiceDomainQuerySpec', 'VsanFileServiceDomainQuerySpec', 'vmodl.DynamicData', 'vsan.version.version12', [('uuids', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('names', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareQueryResult', 'FileShareQueryResult', 'vmodl.DynamicData', 'vsan.version.version12', [('fileShares', 'vim.vsan.FileShare[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('nextOffset', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('totalShareCount', 'long', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareSnapshotConfig', 'VsanFileShareSnapshotConfig', 'vmodl.DynamicData', 'vsan.version.version16', [('shareUuid', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('name', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareSnapshotQuerySpec', 'VsanFileShareSnapshotQuerySpec', 'vmodl.DynamicData', 'vsan.version.version16', [('shareUuid', 'string', 'vsan.version.version16', 0), ('snapshotNames', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('startTime', 'vmodl.DateTime', 'vsan.version.version16', 0 | F_OPTIONAL), ('endTime', 'vmodl.DateTime', 'vsan.version.version16', 0 | F_OPTIONAL), ('pageSize', 'int', 'vsan.version.version16', 0 | F_OPTIONAL), ('pageNumber', 'int', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareSnapshot', 'VsanFileShareSnapshot', 'vmodl.DynamicData', 'vsan.version.version16', [('config', 'vim.vsan.FileShareSnapshotConfig', 'vsan.version.version16', 0 | F_OPTIONAL), ('creationTime', 'vmodl.DateTime', 'vsan.version.version16', 0 | F_OPTIONAL), ('usedCapacity', 'long', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileShareSnapshotQueryResult', 'VsanFileShareSnapshotQueryResult', 'vmodl.DynamicData', 'vsan.version.version16', [('snapshots', 'vim.vsan.FileShareSnapshot[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('totalCount', 'int', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServiceAntiVirusEngineInfo', 'VsanFileServiceAntiVirusEngineInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('vendorName', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('virusDefinitionVersion', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServiceAntiVirusFileScanResult', 'VsanFileServiceAntiVirusFileScanResult', 'vmodl.DynamicData', 'vsan.version.version21', [('filePath', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('threatName', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('threatType', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('threatId', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileServiceAntiVirusScanResult', 'VsanFileServiceAntiVirusScanResult', 'vmodl.DynamicData', 'vsan.version.version21', [('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanStatus', 'vim.vsan.VsanFileShareAntiVirusScanStatus', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanEngineInfo', 'vim.vsan.VsanFileServiceAntiVirusEngineInfo', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanStartTime', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanCompletionTime', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('totalFiles', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('totalScanSize', 'float', 'vsan.version.version21', 0 | F_OPTIONAL), ('numFilesScanned', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('numInfectedFiles', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('numSkippedFiles', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('progress', 'int', 'vsan.version.version21', 0 | F_OPTIONAL), ('infectedFiles', 'vim.vsan.VsanFileServiceAntiVirusFileScanResult[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.host.HostSpbmPolicyBlobInfo', 'HostSpbmPolicyBlobInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('policyBlob', 'string', 'vsan.version.version15', 0), ('namespace', 'string', 'vsan.version.version15', 0)])
CreateDataType('vim.host.HostSpbmPolicyInfo', 'HostSpbmPolicyInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('profileId', 'string', 'vsan.version.version15', 0), ('name', 'string', 'vsan.version.version15', 0), ('description', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('generationId', 'long', 'vsan.version.version15', 0), ('policyBlobInfo', 'vim.host.HostSpbmPolicyBlobInfo[]', 'vsan.version.version15', 0)])
CreateDataType('vim.host.HostSpbmDatastoreInfo', 'HostSpbmDatastoreInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('datastoreUrl', 'string', 'vsan.version.version15', 0), ('namespace', 'string', 'vsan.version.version15', 0), ('defaultProfileId', 'string', 'vsan.version.version15', 0)])
CreateDataType('vim.host.HostSpbmHashInfo', 'HostSpbmHashInfo', 'vmodl.DynamicData', 'vsan.version.version15', [('policyInfoHash', 'string', 'vsan.version.version15', 0), ('datastoreInfoHash', 'string', 'vsan.version.version15', 0)])
CreateDataType('vim.cns.VolumeId', 'CnsVolumeId', 'vmodl.DynamicData', 'vsan.version.version11', [('id', 'string', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.SnapshotId', 'CnsSnapshotId', 'vmodl.DynamicData', 'vsan.version.version12', [('id', 'string', 'vsan.version.version12', 0)])
CreateDataType('vim.fault.CnsFault', 'CnsFault', 'vim.fault.VimFault', 'vsan.version.version11', [('reason', 'string', 'vsan.version.version11', 0)])
CreateDataType('vim.fault.CnsStoreFault', 'CnsStoreFault', 'vim.fault.CnsFault', 'vsan.version.version11', [])
CreateDataType('vim.fault.CnsAlreadyRegisteredFault', 'CnsAlreadyRegisteredFault', 'vim.fault.CnsFault', 'vsan.version.version14', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version14', 0)])
CreateDataType('vim.fault.CnsNotRegisteredFault', 'CnsNotRegisteredFault', 'vim.fault.CnsFault', 'vsan.version.version19', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version19', 0)])
CreateDataType('vim.fault.CnsPlacementFault', 'CnsPlacementFault', 'vim.fault.CnsFault', 'vsan.version.version16', [])
CreateDataType('vim.fault.CnsMissingPrivilegeFault', 'CnsMissingPrivilegeFault', 'vim.fault.CnsPlacementFault', 'vsan.version.version16', [('privileges', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.fault.CnsInCompatibleFault', 'CnsInCompatibleFault', 'vim.fault.CnsPlacementFault', 'vsan.version.version16', [('errors', 'vmodl.MethodFault[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.fault.CnsRankedLowerFault', 'CnsRankedLowerFault', 'vim.fault.CnsPlacementFault', 'vsan.version.version16', [])
CreateDataType('vim.fault.CnsVolumeNotFoundFault', 'CnsVolumeNotFoundFault', 'vim.fault.CnsFault', 'vsan.version.version19', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version19', 0)])
CreateDataType('vim.fault.CnsSnapshotNotFoundFault', 'CnsSnapshotNotFoundFault', 'vim.fault.CnsFault', 'vsan.version.version19', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version19', 0 | F_OPTIONAL), ('SnapshotId', 'vim.cns.SnapshotId', 'vsan.version.version19', 0)])
CreateDataType('vim.cns.ContainerCluster', 'CnsContainerCluster', 'vmodl.DynamicData', 'vsan.version.version11', [('clusterType', 'string', 'vsan.version.version11', 0), ('clusterId', 'string', 'vsan.version.version11', 0), ('vSphereUser', 'string', 'vsan.version.version11', 0), ('clusterFlavor', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('clusterDistribution', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.EntityMetadata', 'CnsEntityMetadata', 'vmodl.DynamicData', 'vsan.version.version11', [('entityName', 'string', 'vsan.version.version11', 0), ('labels', 'vim.KeyValue[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('delete', 'boolean', 'vsan.version.version11', 0 | F_OPTIONAL), ('clusterId', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.KubernetesEntityReference', 'CnsKubernetesEntityReference', 'vmodl.DynamicData', 'vsan.version.version12', [('entityType', 'string', 'vsan.version.version12', 0), ('entityName', 'string', 'vsan.version.version12', 0), ('namespace', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('clusterId', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.KubernetesEntityMetadata', 'CnsKubernetesEntityMetadata', 'vim.cns.EntityMetadata', 'vsan.version.version11', [('entityType', 'string', 'vsan.version.version11', 0), ('namespace', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('referredEntity', 'vim.cns.KubernetesEntityReference[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeMetadata', 'CnsVolumeMetadata', 'vmodl.DynamicData', 'vsan.version.version11', [('containerCluster', 'vim.cns.ContainerCluster', 'vsan.version.version11', 0), ('entityMetadata', 'vim.cns.EntityMetadata[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('containerClusterArray', 'vim.cns.ContainerCluster[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.BackingObjectDetails', 'CnsBackingObjectDetails', 'vmodl.DynamicData', 'vsan.version.version11', [('capacityInMb', 'long', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.BlockBackingDetails', 'CnsBlockBackingDetails', 'vim.cns.BackingObjectDetails', 'vsan.version.version11', [('backingDiskId', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('backingDiskUrlPath', 'string', 'vsan.version.version14', 0 | F_OPTIONAL), ('backingDiskPath', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('backingDiskObjectId', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('usedCapacityInMb', 'long', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.FileBackingDetails', 'CnsFileBackingDetails', 'vim.cns.BackingObjectDetails', 'vsan.version.version12', [('backingFileId', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VsanFileShareBackingDetails', 'CnsVsanFileShareBackingDetails', 'vim.cns.FileBackingDetails', 'vsan.version.version12', [('name', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('accessPoints', 'vim.KeyValue[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('permission', 'vim.vsan.FileShareNetPermission[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.BaseCreateSpec', 'CnsBaseCreateSpec', 'vmodl.DynamicData', 'vsan.version.version12', [])
CreateDataType('vim.cns.FileCreateSpec', 'CnsFileCreateSpec', 'vim.cns.BaseCreateSpec', 'vsan.version.version12', [])
CreateDataType('vim.cns.VSANFileCreateSpec', 'CnsVSANFileCreateSpec', 'vim.cns.FileCreateSpec', 'vsan.version.version12', [('softQuotaInMb', 'long', 'vsan.version.version12', 0 | F_OPTIONAL), ('permission', 'vim.vsan.FileShareNetPermission[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.Volume', 'CnsVolume', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version11', 0), ('datastoreUrl', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('name', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('volumeType', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('storagePolicyId', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('metadata', 'vim.cns.VolumeMetadata', 'vsan.version.version11', 0 | F_OPTIONAL), ('backingObjectDetails', 'vim.cns.BackingObjectDetails', 'vsan.version.version11', 0 | F_OPTIONAL), ('complianceStatus', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('datastoreAccessibilityStatus', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('healthStatus', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.Snapshot', 'CnsSnapshot', 'vmodl.DynamicData', 'vsan.version.version12', [('snapshotId', 'vim.cns.SnapshotId', 'vsan.version.version12', 0 | F_OPTIONAL), ('volumeId', 'vim.cns.VolumeId', 'vsan.version.version12', 0), ('description', 'string', 'vsan.version.version12', 0), ('createTime', 'vmodl.DateTime', 'vsan.version.version12', 0), ('backingObjectId', 'string', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.SnapshotCreateSpec', 'CnsSnapshotCreateSpec', 'vmodl.DynamicData', 'vsan.version.version12', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version12', 0), ('description', 'string', 'vsan.version.version12', 0)])
CreateDataType('vim.cns.SnapshotDeleteSpec', 'CnsSnapshotDeleteSpec', 'vmodl.DynamicData', 'vsan.version.version12', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version12', 0), ('snapshotId', 'vim.cns.SnapshotId', 'vsan.version.version12', 0)])
CreateDataType('vim.cns.VolumeInfo', 'CnsVolumeInfo', 'vmodl.DynamicData', 'vsan.version.version14', [])
CreateDataType('vim.cns.BlockVolumeInfo', 'CnsBlockVolumeInfo', 'vim.cns.VolumeInfo', 'vsan.version.version14', [('vStorageObject', 'vim.vslm.VStorageObject', 'vsan.version.version14', 0)])
CreateDataType('vim.cns.AccessControlSpec', 'CnsAccessControlSpec', 'vmodl.DynamicData', 'vsan.version.version16', [])
CreateDataType('vim.cns.NFSAccessControlSpec', 'CnsNFSAccessControlSpec', 'vim.cns.AccessControlSpec', 'vsan.version.version16', [('netPermission', 'vim.vsan.FileShareNetPermission', 'vsan.version.version16', 0), ('delete', 'boolean', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeRelocateSpec', 'CnsVolumeRelocateSpec', 'vmodl.DynamicData', 'vsan.version.version19', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version19', 0), ('datastore', 'vim.Datastore', 'vsan.version.version19', 0), ('profile', 'vim.vm.ProfileSpec[]', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.BlockVolumeRelocateSpec', 'CnsBlockVolumeRelocateSpec', 'vim.cns.VolumeRelocateSpec', 'vsan.version.version19', [])
CreateDataType('vim.cns.VolumeSource', 'CnsVolumeSource', 'vmodl.DynamicData', 'vsan.version.version12', [])
CreateDataType('vim.cns.SnapshotVolumeSource', 'CnsSnapshotVolumeSource', 'vim.cns.VolumeSource', 'vsan.version.version12', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version12', 0 | F_OPTIONAL), ('snapshotId', 'vim.cns.SnapshotId', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeCreateSpec', 'CnsVolumeCreateSpec', 'vmodl.DynamicData', 'vsan.version.version11', [('name', 'string', 'vsan.version.version11', 0), ('volumeType', 'string', 'vsan.version.version11', 0), ('datastores', 'vim.Datastore[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('metadata', 'vim.cns.VolumeMetadata', 'vsan.version.version11', 0 | F_OPTIONAL), ('backingObjectDetails', 'vim.cns.BackingObjectDetails', 'vsan.version.version11', 0), ('profile', 'vim.vm.ProfileSpec[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('createSpec', 'vim.cns.BaseCreateSpec', 'vsan.version.version12', 0 | F_OPTIONAL), ('volumeSource', 'vim.cns.VolumeSource', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeOperationResult', 'CnsVolumeOperationResult', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version11', 0 | F_OPTIONAL), ('fault', 'vmodl.MethodFault', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeOperationBatchResult', 'CnsVolumeOperationBatchResult', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeResults', 'vim.cns.VolumeOperationResult[]', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.PlacementResult', 'CnsPlacementResult', 'vmodl.DynamicData', 'vsan.version.version16', [('datastore', 'vim.Datastore', 'vsan.version.version16', 0), ('placementFaults', 'vmodl.MethodFault[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeCreateResult', 'CnsVolumeCreateResult', 'vim.cns.VolumeOperationResult', 'vsan.version.version11', [('name', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('placementResults', 'vim.cns.PlacementResult[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeAttachDetachSpec', 'CnsVolumeAttachDetachSpec', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version11', 0), ('vm', 'vim.VirtualMachine', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.VolumeAttachResult', 'CnsVolumeAttachResult', 'vim.cns.VolumeOperationResult', 'vsan.version.version11', [('diskUUID', 'string', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.VolumeMetadataUpdateSpec', 'CnsVolumeMetadataUpdateSpec', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version11', 0), ('metadata', 'vim.cns.VolumeMetadata', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.VolumeExtendSpec', 'CnsVolumeExtendSpec', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version11', 0), ('capacityInMb', 'long', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.VolumeACLConfigureSpec', 'CnsVolumeACLConfigureSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version16', 0), ('accessControlSpecList', 'vim.cns.AccessControlSpec[]', 'vsan.version.version16', 0)])
CreateDataType('vim.cns.Cursor', 'CnsCursor', 'vmodl.DynamicData', 'vsan.version.version11', [('offset', 'long', 'vsan.version.version11', 0), ('limit', 'long', 'vsan.version.version11', 0), ('totalRecords', 'long', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.QuerySelection', 'CnsQuerySelection', 'vmodl.DynamicData', 'vsan.version.version11', [('names', 'string[]', 'vsan.version.version11', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.QueryFilter', 'CnsQueryFilter', 'vmodl.DynamicData', 'vsan.version.version11', [('volumeIds', 'vim.cns.VolumeId[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('names', 'string[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('containerClusterIds', 'string[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('storagePolicyId', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('datastores', 'vim.Datastore[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('labels', 'vim.KeyValue[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('complianceStatus', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('datastoreAccessibilityStatus', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('cursor', 'vim.cns.Cursor', 'vsan.version.version11', 0 | F_OPTIONAL), ('healthStatus', 'string', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.KubernetesQueryFilter', 'CnsKubernetesQueryFilter', 'vim.cns.QueryFilter', 'vsan.version.version12', [('namespaces', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('podNames', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('pvcNames', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL), ('pvNames', 'string[]', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.QueryResult', 'CnsQueryResult', 'vmodl.DynamicData', 'vsan.version.version11', [('volumes', 'vim.cns.Volume[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('cursor', 'vim.cns.Cursor', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.SearchLabelSpec', 'CnsSearchLabelSpec', 'vmodl.DynamicData', 'vsan.version.version11', [('keyPrefix', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('valuePrefix', 'string', 'vsan.version.version11', 0 | F_OPTIONAL), ('maxNumberOfResults', 'long', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.SearchLabelResult', 'CnsSearchLabelResult', 'vmodl.DynamicData', 'vsan.version.version11', [('labels', 'vim.KeyValue[]', 'vsan.version.version11', 0 | F_OPTIONAL), ('hasMoreResults', 'boolean', 'vsan.version.version11', 0)])
CreateDataType('vim.cns.SnapshotOperationResult', 'CnsSnapshotOperationResult', 'vim.cns.VolumeOperationResult', 'vsan.version.version12', [])
CreateDataType('vim.cns.SnapshotCreateResult', 'CnsSnapshotCreateResult', 'vim.cns.SnapshotOperationResult', 'vsan.version.version12', [('snapshot', 'vim.cns.Snapshot', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.SnapshotDeleteResult', 'CnsSnapshotDeleteResult', 'vim.cns.SnapshotOperationResult', 'vsan.version.version12', [('snapshotId', 'vim.cns.SnapshotId', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.QueryVolumeInfoResult', 'CnsQueryVolumeInfoResult', 'vim.cns.VolumeOperationResult', 'vsan.version.version14', [('volumeInfo', 'vim.cns.VolumeInfo', 'vsan.version.version14', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.AsyncQueryResult', 'CnsAsyncQueryResult', 'vim.cns.VolumeOperationResult', 'vsan.version.version18', [('queryResult', 'vim.cns.QueryResult', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.QueryMetricFilter', 'CnsQueryMetricFilter', 'vmodl.DynamicData', 'vsan.version.version15', [('metricType', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.SnapshotQuerySpec', 'CnsSnapshotQuerySpec', 'vmodl.DynamicData', 'vsan.version.version19', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version19', 0), ('snapshotId', 'vim.cns.SnapshotId', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.SnapshotQueryFilter', 'CnsSnapshotQueryFilter', 'vmodl.DynamicData', 'vsan.version.version19', [('snapshotQuerySpecs', 'vim.cns.SnapshotQuerySpec[]', 'vsan.version.version19', 0 | F_OPTIONAL), ('cursor', 'vim.cns.Cursor', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.SnapshotQueryResultEntry', 'CnsSnapshotQueryResultEntry', 'vmodl.DynamicData', 'vsan.version.version19', [('snapshot', 'vim.cns.Snapshot', 'vsan.version.version19', 0 | F_OPTIONAL), ('error', 'vmodl.MethodFault', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cns.SnapshotQueryResult', 'CnsSnapshotQueryResult', 'vmodl.DynamicData', 'vsan.version.version19', [('entries', 'vim.cns.SnapshotQueryResultEntry[]', 'vsan.version.version19', 0 | F_OPTIONAL), ('cursor', 'vim.cns.Cursor', 'vsan.version.version19', 0)])
CreateDataType('vim.cns.VolumePolicyReconfigSpec', 'CnsVolumePolicyReconfigSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('volumeId', 'vim.cns.VolumeId', 'vsan.version.version21', 0), ('profile', 'vim.vm.ProfileSpec[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanEpicOperationHint', 'VsanEpicOperationHint', 'vmodl.DynamicData', 'vsan.version.version15', [('operation', 'string', 'vsan.version.version15', 0), ('objectIds', 'string[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('parameters', 'vmodl.KeyAnyValue[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanEpicObjectResult', 'VsanEpicObjectResult', 'vmodl.DynamicData', 'vsan.version.version15', [('objectId', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('result', 'object', 'vsan.version.version15', 0 | F_OPTIONAL), ('fault', 'vmodl.MethodFault', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanEpicOperationResult', 'VsanEpicOperationResult', 'vmodl.DynamicData', 'vsan.version.version15', [('operation', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('objectResults', 'vim.vsan.VsanEpicObjectResult[]', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanNetworkDiagnostics', 'VsanNetworkDiagnostics', 'vmodl.DynamicData', 'vsan.version.version16', [('host', 'vim.HostSystem', 'vsan.version.version16', 0), ('eventTypeId', 'string', 'vsan.version.version16', 0), ('severity', 'string', 'vsan.version.version16', 0), ('createdTime', 'vmodl.DateTime', 'vsan.version.version16', 0), ('arguments', 'vmodl.KeyAnyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanDiagnosticsThreshold', 'VsanDiagnosticsThreshold', 'vmodl.DynamicData', 'vsan.version.version16', [('entityType', 'string', 'vsan.version.version16', 0), ('metric', 'string', 'vsan.version.version16', 0), ('yellow', 'int', 'vsan.version.version16', 0 | F_OPTIONAL), ('red', 'int', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.IODiagnosticsTarget', 'VsanIODiagnosticsTarget', 'vmodl.DynamicData', 'vsan.version.version18', [('type', 'vim.vsan.IODiagnosticsTargetType', 'vsan.version.version18', 0), ('entityId', 'string', 'vsan.version.version18', 0), ('objUuids', 'string[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.IODiagnosticsInstanceQuerySpec', 'VsanIODiagnosticsInstanceQuerySpec', 'vmodl.DynamicData', 'vsan.version.version18', [('targets', 'vim.vsan.IODiagnosticsTarget[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('startTime', 'vmodl.DateTime', 'vsan.version.version18', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.IODiagnosticsInstanceEvent', 'VsanIODiagnosticsInstanceEvent', 'vmodl.DynamicData', 'vsan.version.version18', [('eventType', 'vim.vsan.IODiagnosticsInstanceEventType', 'vsan.version.version18', 0), ('eventTime', 'vmodl.DateTime', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.IODiagnosticsInstance', 'VsanIODiagnosticsInstance', 'vmodl.DynamicData', 'vsan.version.version18', [('name', 'string', 'vsan.version.version18', 0), ('state', 'vim.vsan.IODiagnosticsInstanceState', 'vsan.version.version18', 0), ('events', 'vim.vsan.IODiagnosticsInstanceEvent[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('targets', 'vim.vsan.IODiagnosticsTarget[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('startTime', 'vmodl.DateTime', 'vsan.version.version18', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.IOLatencyMetrics', 'VsanIOLatencyMetrics', 'vmodl.DynamicData', 'vsan.version.version18', [('totalCount', 'int', 'vsan.version.version18', 0), ('averageLatency', 'float', 'vsan.version.version18', 0), ('stddevLatency', 'float', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.IOLatency', 'VsanIOLatency', 'vmodl.DynamicData', 'vsan.version.version18', [('latencyType', 'vim.vsan.IOLatencyType', 'vsan.version.version18', 0), ('sourceEntityUuid', 'string', 'vsan.version.version18', 0), ('destEntityUuid', 'string', 'vsan.version.version18', 0), ('readLatencyStats', 'vim.vsan.IOLatencyMetrics', 'vsan.version.version18', 0), ('writeLatencyStats', 'vim.vsan.IOLatencyMetrics', 'vsan.version.version18', 0), ('detailedInfo', 'vmodl.KeyAnyValue[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.IODiagnosticsObjectLayout', 'VsanIODiagnosticsObjectLayout', 'vmodl.DynamicData', 'vsan.version.version18', [('layout', 'string', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.ObjectIOStats', 'VsanObjectIOStats', 'vmodl.DynamicData', 'vsan.version.version18', [('backingObjectId', 'string', 'vsan.version.version18', 0), ('ioLatencyStats', 'vim.vsan.IOLatency[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('objectLayout', 'vim.vsan.IODiagnosticsObjectLayout', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.IODiagnosticsStats', 'VsanIODiagnosticsStats', 'vmodl.DynamicData', 'vsan.version.version18', [('objectsIOStats', 'vim.vsan.ObjectIOStats[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('startTime', 'vmodl.DateTime', 'vsan.version.version18', 0), ('endTime', 'vmodl.DateTime', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.IODiagnosticsTargetStats', 'VsanIODiagnosticsTargetStats', 'vmodl.DynamicData', 'vsan.version.version18', [('target', 'vim.vsan.IODiagnosticsTarget', 'vsan.version.version18', 0), ('objectsIODiagnosticsStats', 'vim.vsan.IODiagnosticsStats[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.IODiagnosticsFailedCheck', 'VsanIODiagnosticsFailedCheck', 'vmodl.DynamicData', 'vsan.version.version18', [('unsupportedType', 'vim.vsan.IODiagnosticsFailedCheckType', 'vsan.version.version18', 0), ('reason', 'vmodl.LocalizableMessage', 'vsan.version.version18', 0)])
CreateDataType('vim.vsan.IODiagnosticsPrecheckResult', 'VsanIODiagnosticsPrecheckResult', 'vmodl.DynamicData', 'vsan.version.version18', [('supported', 'boolean', 'vsan.version.version18', 0), ('failedChecks', 'vim.vsan.IODiagnosticsFailedCheck[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanAnalyticsEventLocation', 'VsanAnalyticsEventLocation', 'vmodl.DynamicData', 'vsan.version.version15', [('location', 'vim.vsan.VsanAnalyticsEventLocationType', 'vsan.version.version15', 0 | F_OPTIONAL), ('entityId', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('childEntitiesLocation', 'vim.vsan.VsanAnalyticsEventLocation[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('details', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanAnalyticsEvent', 'VsanAnalyticsEvent', 'vmodl.DynamicData', 'vsan.version.version15', [('eventType', 'vim.vsan.VsanAnalyticsEventType', 'vsan.version.version15', 0), ('resourceId', 'string', 'vsan.version.version15', 0 | F_OPTIONAL), ('eventTs', 'vmodl.DateTime', 'vsan.version.version15', 0 | F_OPTIONAL), ('eventLocation', 'vim.vsan.VsanAnalyticsEventLocation[]', 'vsan.version.version15', 0 | F_OPTIONAL), ('details', 'string', 'vsan.version.version15', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanCloudHealthStatus', 'VsanCloudHealthStatus', 'vmodl.DynamicData', 'vsan.version.version12', [('collectorRunning', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL), ('lastSentTimestamp', 'string', 'vsan.version.version12', 0 | F_OPTIONAL), ('internetConnectivity', 'boolean', 'vsan.version.version12', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.DpsFault', 'DpFaultDpsFault', 'vim.fault.VimFault', 'vsan.version.version16', [('reason', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.DpsRestarted', 'DpFaultDpsRestarted', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.ColdMigrationInProgress', 'DpFaultColdMigrationInProgress', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('taskRef', 'vim.Task', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.DpdThrottleLimitExceeded', 'DpFaultDpdThrottleLimitExceeded', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.SnapshotInProgress', 'DpFaultSnapshotInProgress', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('snapshotUuid', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.fault.InvalidSnapshotType', 'DpFaultInvalidSnapshotType', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.QuiesceFailure', 'DpFaultQuiesceFailure', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.InvalidDisk', 'DpFaultInvalidDisk', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.UnsupportedDisk', 'DpFaultUnsupportedDisk', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('diskKeys', 'int[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.SnapshotNotFound', 'DpFaultSnapshotNotFound', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.EnableProtectionServicesHostFailure', 'DpEnableProtectionServicesHostFailure', 'vmodl.DynamicData', 'vsan.version.version16', [('host', 'vim.HostSystem', 'vsan.version.version16', 0), ('serviceNotPresent', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('serviceFailed', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.EnableProtectionServicesFault', 'DpEnableProtectionServicesFault', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('hostFaults', 'dp.vpx.EnableProtectionServicesHostFailure[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.SyncInProgress', 'DpFaultSyncInProgress', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('syncId', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.fault.RestoreInProgress', 'DpFaultRestoreInProgress', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('restoreId', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.fault.InvalidSyncType', 'DpFaultInvalidSyncType', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.InvalidSnapshot', 'DpFaultInvalidSnapshot', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.InvalidSource', 'DpFaultInvalidSource', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.CancelSnapshotRequired', 'DpFaultCancelSnapshotRequired', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.FullSyncRequired', 'DpFaultFullSyncRequired', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.SnapshotTransportFault', 'DpFaultSnapshotTransportFault', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('transportProviderResults', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.PeAlreadyClaimed', 'DpFaultPeAlreadyClaimed', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('isProtectedByLwd', 'boolean', 'vsan.version.version18', 0), ('vendorId', 'string', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.DpsBusy', 'DpFaultDpsBusy', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.DiskClosing', 'DpFaultDiskClosing', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.PePartiallyProtected', 'DpFaultPePartiallyProtected', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.PeIncompleteRequest', 'DpFaultPeIncompleteRequest', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.OperationInterrupted', 'DpFaultOperationInterrupted', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.fault.DpdConnectionLost', 'DpFaultDpdConnectionLost', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [('hostname', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.fault.BaseSnapshotMismatch', 'DpFaultBaseSnapshotMismatch', 'dp.vpx.fault.DpsFault', 'vsan.version.version16', [])
CreateDataType('dp.vpx.ProtectedEntity', 'DpProtectedEntity', 'vmodl.DynamicData', 'vsan.version.version16', [])
CreateDataType('dp.vpx.VirtualMachineProtectedEntity', 'DpVirtualMachineProtectedEntity', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', [('vmRef', 'vim.VirtualMachine', 'vsan.version.version16', 0), ('includedDiskKeys', 'int[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.UserIdBinding', 'DpUserIdBinding', 'vmodl.DynamicData', 'vsan.version.version16', [])
CreateDataType('dp.vpx.DiskBinding', 'DpDiskBinding', 'vmodl.DynamicData', 'vsan.version.version16', [('diskKey', 'int', 'vsan.version.version16', 0), ('id', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.VirtualMachineUserIdBinding', 'DpVirtualMachineUserIdBinding', 'dp.vpx.UserIdBinding', 'vsan.version.version16', [('diskIds', 'dp.vpx.DiskBinding[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.ProtectedEntityProtectionStatus', 'DpProtectedEntityProtectionStatus', 'vmodl.DynamicData', 'vsan.version.version18', [('protectionStatus', 'dp.vpx.ProtectionStatusType', 'vsan.version.version18', 0)])
CreateDataType('dp.vpx.VendorInfo', 'DpVendorInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('name', 'string', 'vsan.version.version18', 0)])
CreateDataType('dp.vpx.VirtualDiskProtectionInfo', 'DpVirtualDiskProtectionInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('key', 'int', 'vsan.version.version18', 0), ('vendorInfo', 'dp.vpx.VendorInfo', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.VirtualMachineProtectedEntityProtectionStatus', 'DpVirtualMachineProtectedEntityProtectionStatus', 'dp.vpx.ProtectedEntityProtectionStatus', 'vsan.version.version18', [('protectedDisks', 'dp.vpx.VirtualDiskProtectionInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('unprotectedDiskKeys', 'int[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.ProtectedEntitySnapshot', 'DpProtectedEntitySnapshot', 'vmodl.DynamicData', 'vsan.version.version21', [('uuid', 'string', 'vsan.version.version21', 0)])
CreateDataType('dp.vpx.ProtectedEntityInfo', 'DpProtectedEntityInfo', 'vmodl.DynamicData', 'vsan.version.version18', [('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version18', 0), ('peProtectionStatus', 'dp.vpx.ProtectedEntityProtectionStatus', 'vsan.version.version18', 0)])
CreateDataType('dp.vpx.VirtualMachineDiskSnapshot', 'DpVirtualMachineDiskSnapshot', 'vmodl.DynamicData', 'vsan.version.version21', [('diskKey', 'int', 'vsan.version.version21', 0), ('snapshotUuid', 'string', 'vsan.version.version21', 0)])
CreateDataType('dp.vpx.VirtualMachineProtectedEntitySnapshot', 'DpVirtualMachineProtectedEntitySnapshot', 'dp.vpx.ProtectedEntitySnapshot', 'vsan.version.version21', [('diskSnapshots', 'dp.vpx.VirtualMachineDiskSnapshot[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.PeBusy', 'DpFaultPeBusy', 'dp.vpx.fault.DpsFault', 'vsan.version.version18', [])
CreateDataType('dp.vpx.fault.VendorIdInconsistent', 'DpFaultVendorIdInconsistent', 'dp.vpx.fault.DpsFault', 'vsan.version.version18', [('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version18', 0), ('protectedDisks', 'dp.vpx.VirtualDiskProtectionInfo[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.fault.MigrationInProgress', 'DpFaultMigrationInProgress', 'dp.vpx.fault.ColdMigrationInProgress', 'vsan.version.version19', [('migrationType', 'dp.vpx.MigrationType', 'vsan.version.version19', 0), ('isStorageMigration', 'boolean', 'vsan.version.version19', 0)])
CreateDataType('dp.vpx.VssBackupSpec', 'DpVssBackupSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('vssSnapshotBackupType', 'dp.vpx.VssBackupType', 'vsan.version.version21', 0), ('vssSnapshotBackupContext', 'dp.vpx.VssBackupContext', 'vsan.version.version21', 0)])
CreateDataType('dp.vpx.ProtectOpSpec', 'DpProtectOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('state', 'boolean', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.ProtectOpResult', 'DpProtectOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [])
CreateDataType('dp.vpx.QueryProtectedEntityInfoOpSpec', 'DpQueryProtectedEntityInfoOpSpec', 'vmodl.DynamicData', 'vsan.version.version18', [('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version18', 0)])
CreateDataType('dp.vpx.QueryProtectedEntityInfoOpResult', 'DpQueryProtectedEntityInfoOpResult', 'vmodl.DynamicData', 'vsan.version.version18', [('peInfo', 'dp.vpx.ProtectedEntityInfo', 'vsan.version.version18', 0)])
CreateDataType('dp.vpx.QueryMetricsOpSpec', 'DpQueryMetricsOpSpec', 'vmodl.DynamicData', 'vsan.version.version21', [])
CreateDataType('dp.vpx.SnapshotOpSpec', 'DpSnapshotOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0), ('snapshotType', 'dp.vpx.SnapshotType', 'vsan.version.version16', 0), ('baseSnapshotUuid', 'string', 'vsan.version.version16', 0 | F_OPTIONAL), ('basePeSnapshot', 'dp.vpx.ProtectedEntitySnapshot', 'vsan.version.version21', 0 | F_OPTIONAL), ('vssBackupSpec', 'dp.vpx.VssBackupSpec', 'vsan.version.version21', 0 | F_OPTIONAL), ('quiesceTimeout', 'int', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.SnapshotOpResult', 'DpSnapshotOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [('snapshotUuid', 'string', 'vsan.version.version16', 0), ('associatedFiles', 'string[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.SyncOpSpec', 'DpSyncOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0), ('transportProvider', 'string', 'vsan.version.version16', 0), ('transportProviderOptions', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('userIds', 'dp.vpx.UserIdBinding', 'vsan.version.version16', 0 | F_OPTIONAL), ('syncType', 'dp.vpx.SyncType', 'vsan.version.version16', 0), ('initiatorId', 'string', 'vsan.version.version16', 0), ('snapshotUuid', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.SyncOpResult', 'DpSyncOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [('transportProviderResults', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.CancelSnapshotOpSpec', 'DpCancelSnapshotOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0), ('snapshotUuid', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.CancelSnapshotOpResult', 'DpCancelSnapshotOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [])
CreateDataType('dp.vpx.RetireSnapshotOpSpec', 'DpRetireSnapshotOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0), ('snapshotUuid', 'string', 'vsan.version.version16', 0)])
CreateDataType('dp.vpx.RetireSnapshotOpResult', 'DpRetireSnapshotOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [])
CreateDataType('dp.vpx.PrepareRestoreOpSpec', 'DpPrepareRestoreOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0), ('transportProvider', 'string', 'vsan.version.version16', 0), ('transportProviderOptions', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('userIds', 'dp.vpx.UserIdBinding', 'vsan.version.version16', 0 | F_OPTIONAL), ('initiatorId', 'string', 'vsan.version.version16', 0), ('snapshotUuid', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.PrepareRestoreOpResult', 'DpPrepareRestoreOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [('transportProviderResults', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.CommitRestoreOpSpec', 'DpCommitRestoreOpSpec', 'vmodl.DynamicData', 'vsan.version.version16', [('vendorId', 'string', 'vsan.version.version16', 0), ('pe', 'dp.vpx.ProtectedEntity', 'vsan.version.version16', 0), ('transportProvider', 'string', 'vsan.version.version16', 0), ('transportProviderOptions', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL), ('userIds', 'dp.vpx.UserIdBinding', 'vsan.version.version16', 0 | F_OPTIONAL), ('initiatorId', 'string', 'vsan.version.version16', 0), ('snapshotUuid', 'string', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.CommitRestoreOpResult', 'DpCommitRestoreOpResult', 'vmodl.DynamicData', 'vsan.version.version16', [('transportProviderResults', 'vim.KeyValue[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('dp.vpx.QueryProtectionSupportResult', 'DpQueryProtectionSupportResult', 'vmodl.DynamicData', 'vsan.version.version16', [('protectionSupport', 'string', 'vsan.version.version16', 0), ('unsupportedHosts', 'vim.HostSystem[]', 'vsan.version.version16', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileAnalyticsReportQuerySpec', 'VsanFileAnalyticsReportQuerySpec', 'vmodl.DynamicData', 'vsan.version.version21', [('startTime', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('endTime', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('queryReportType', 'vim.vsan.VsanFileAnalyticsReportType', 'vsan.version.version21', 0), ('fileShareUuid', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileAnalyticsReportData', 'VsanFileAnalyticsReportData', 'vmodl.DynamicData', 'vsan.version.version21', [('label', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('values', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileAnalyticsReport', 'VsanFileAnalyticsReport', 'vmodl.DynamicData', 'vsan.version.version21', [('reportGroupedBy', 'string', 'vsan.version.version21', 0 | F_OPTIONAL), ('categories', 'string[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('reportData', 'vim.vsan.VsanFileAnalyticsReportData[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.VsanFileAnalyticsRecentActivity', 'VsanFileAnalyticsRecentActivity', 'vmodl.DynamicData', 'vsan.version.version21', [('fileName', 'string', 'vsan.version.version21', 0), ('fileLocation', 'string', 'vsan.version.version21', 0), ('fileShareUuid', 'string', 'vsan.version.version21', 0), ('lastOperationTime', 'vmodl.DateTime', 'vsan.version.version21', 0), ('lastOperation', 'vim.vsan.FileAnalyticsFileShareOperations', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.VsanFileAnalyticsFileShareDetails', 'VsanFileAnalyticsFileShareDetails', 'vmodl.DynamicData', 'vsan.version.version21', [('shareName', 'string', 'vsan.version.version21', 0), ('protocols', 'vim.vsan.FileShareProtocol[]', 'vsan.version.version21', 0 | F_OPTIONAL), ('currentUsage', 'long', 'vsan.version.version21', 0), ('quota', 'long', 'vsan.version.version21', 0), ('growth', 'long', 'vsan.version.version21', 0), ('accessCount', 'long', 'vsan.version.version21', 0), ('lastOperationTime', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('lastOperation', 'vim.vsan.FileAnalyticsFileShareOperations', 'vsan.version.version21', 0 | F_OPTIONAL), ('shareUuid', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileAnalyticsScanStatus', 'FileAnalyticsScanStatus', 'vmodl.DynamicData', 'vsan.version.version21', [('lastScanTime', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('scanDuration', 'string', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.vsan.FileAnalyticsTaskStatusType', 'FileAnalyticsTaskStatusType', 'vmodl.DynamicData', 'vsan.version.version21', [('taskStatus', 'vim.vsan.FileAnalyticsTaskStatus', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.PerformClusterPowerActionSpec', 'PerformClusterPowerActionSpec', 'vmodl.DynamicData', 'vsan.version.version18', [('targetPowerStatus', 'vim.cluster.ClusterPowerStatus', 'vsan.version.version18', 0), ('isOrchestration', 'boolean', 'vsan.version.version18', 0 | F_OPTIONAL), ('initialPowerStatus', 'vim.cluster.ClusterPowerStatus', 'vsan.version.version18', 0 | F_OPTIONAL), ('powerOffReason', 'string', 'vsan.version.version18', 0 | F_OPTIONAL), ('infraVMs', 'vim.VirtualMachine[]', 'vsan.version.version19', 0 | F_OPTIONAL), ('infraVMUuids', 'string[]', 'vsan.version.version19', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.ClusterPowerContext', 'ClusterPowerContext', 'vmodl.DynamicData', 'vsan.version.version18', [('currentClusterPowerStatus', 'vim.cluster.ClusterPowerStatus', 'vsan.version.version18', 0), ('orderedClusterPowerStatus', 'vim.cluster.ClusterPowerStatus[]', 'vsan.version.version18', 0 | F_OPTIONAL), ('trackingTask', 'vim.Task', 'vsan.version.version18', 0 | F_OPTIONAL), ('lastErrorMessage', 'vmodl.LocalizableMessage', 'vsan.version.version18', 0 | F_OPTIONAL), ('lastErrorMOs', 'vmodl.ManagedObject[]', 'vsan.version.version18', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanClusterSubscriptionInfo', 'VsanClusterSubscriptionInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('cluster', 'vim.ClusterComputeResource', 'vsan.version.version21', 0), ('hclInfo', 'vim.cluster.VsanClusterHclInfo', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.cluster.VsanVcVcgSubscriptionInfo', 'VsanVcVcgSubscriptionInfo', 'vmodl.DynamicData', 'vsan.version.version21', [('timestamp', 'vmodl.DateTime', 'vsan.version.version21', 0 | F_OPTIONAL), ('clusterDetails', 'vim.cluster.VsanClusterSubscriptionInfo[]', 'vsan.version.version21', 0 | F_OPTIONAL)])
CreateDataType('vim.fault.NotificationSystemFault', 'VsanNotificationSystemFault', 'vim.fault.VsanFault', 'vsan.version.version21', [])
CreateDataType('vim.vsan.ApplicationInstance', 'VsanApplicationInstance', 'vmodl.DynamicData', 'vsan.version.version21', [('id', 'string', 'vsan.version.version21', 0), ('token', 'string', 'vsan.version.version21', 0), ('encryptionPublicKey', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.ObservableSpec', 'VsanObservableSpec', 'vmodl.DynamicData', 'vsan.version.version21', [('id', 'string', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.SubscriptionStatus', 'VsanSubscriptionStatus', 'vmodl.DynamicData', 'vsan.version.version21', [('enabled', 'boolean', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.PropertyCollectorFilterObservableSpec', 'VsanPropertyCollectorFilterObservableSpec', 'vim.vsan.ObservableSpec', 'vsan.version.version21', [('propertyFilterSpec', 'vmodl.query.PropertyCollector.FilterSpec', 'vsan.version.version21', 0)])
CreateDataType('vim.vsan.ObservableSpecSubscription', 'VsanObservableSpecSubscription', 'vmodl.DynamicData', 'vsan.version.version21', [('observableSpecId', 'string', 'vsan.version.version21', 0), ('subscriptionStatus', 'vim.vsan.SubscriptionStatus', 'vsan.version.version21', 0)])
CreateEnumType('vim.vsan.VsanServiceStatus', 'VsanServiceStatus', 'vsan.version.version9', ['started' ,'stopped' ,'VsanServiceStatus_Unknown' ,])
CreateEnumType('vim.vsan.VsanConfigType', 'VsanConfigType', 'vsan.version.version21', ['vsan' ,'vsanEsa' ,'VsanConfigType_Unknown' ,])
CreateEnumType('vim.vsan.VsanDiskCompatibilityType', 'VsanDiskCompatibilityType', 'vsan.version.version21', ['diskGroup' ,'singleTier' ,'VsanDiskCompatibilityType_Unknown' ,])
CreateEnumType('vim.host.VsanControllerType', 'VsanControllerType', 'vsan.version.version18', ['NVMe' ,'SCSI' ,'VsanControllerType_Unknown' ,])
CreateEnumType('vim.host.VsanVcgSubscribeState', 'VsanVcgSubscribeState', 'vsan.version.version21', ['Subscribed' ,'Unsubscribed' ,'Subscribing' ,'Failed' ,'Loading' ,'VsanVcgSubscribeState_Unknown' ,])
CreateEnumType('vim.host.RdmaProtocol', 'RdmaProtocol', 'vsan.version.version16', ['RoCEv2' ,])
CreateEnumType('vim.vsan.VsanVibType', 'VsanVibType', 'vsan.version.version9', ['tool' ,'driver' ,'VsanVibType_Unknown' ,])
CreateEnumType('vim.vsan.VsanUpdateItemType', 'VsanUpdateItemType', 'vsan.version.version3', ['vib' ,'offlinebundle' ,'vmhbaFirmware' ,'fullStackFirmware' ,'VsanUpdateItemType_Unknown' ,])
CreateEnumType('vim.vsan.VsanUpdateItemImpactType', 'VsanUpdateItemImpactType', 'vsan.version.version9', ['reboot' ,'VsanUpdateItemImpactType_Unknown' ,])
CreateEnumType('vim.vsan.host.TrafficType', 'VimVsanHostTrafficType', 'vim.version.version11', ['vsan' ,'witness' ,'TrafficType_Unknown' ,])
CreateEnumType('vim.vsan.VsanSiteLocationType', 'VsanSiteLocationType', 'vsan.version.version15', ['None' ,'Preferred' ,'NonPreferred' ,'VsanSiteLocationType_Unknown' ,])
CreateEnumType('vim.vsan.host.StoragePoolDiskType', 'StoragePoolDiskType', 'vsan.version.version21', ['singleTier' ,'StoragePoolDiskType_Unknown' ,])
CreateEnumType('vim.vsan.host.VsanDiskType', 'VsanDiskType', 'vsan.version.version21', ['diskGroup' ,'storagePool' ,'directDisk' ,'VsanDiskType_Unknown' ,])
CreateEnumType('vim.vsan.host.EncryptionTransitionState', 'VsanEncryptionTransitionState', 'vsan.version.version15', ['settled' ,'preparing' ,'prepared' ,'EncryptionTransitionState_Unknown' ,])
CreateEnumType('vim.vsan.CapacityReservationState', 'VsanCapacityReservationState', 'vsan.version.version15', ['State_Unknown' ,'Enforced' ,'Reported' ,'Disabled' ,'Unsupported' ,])
CreateEnumType('vim.vsan.Mode', 'VsanMode', 'vsan.version.version16', ['Mode_None' ,'Mode_Compute' ,'Mode_Unknown' ,])
CreateEnumType('vim.vsan.DdpRatioType', 'VsanDdpRatioType', 'vsan.version.version21', ['None_DDP' ,'x10' ,'x5' ,'DdpType_Unknown' ,])
CreateEnumType('vim.vsan.host.StatsType', 'VsanHostStatsType', 'vsan.version.version3', ['resyncIopsInfo' ,'configGeneration' ,'supportedClusterSize' ,'repairTimerInfo' ,'componentLimitPerCluster' ,'maxWitnessClusters' ,'StatsType_Unknown' ,])
CreateEnumType('vim.vsan.VsanSyncReason', 'VsanSyncReason', 'vsan.version.version7', ['repair' ,'evacuate' ,'rebalance' ,'reconfigure' ,'dying_evacuate' ,'stale' ,'merge_concat' ,'object_format_change' ,'VsanSyncReason_Unknown' ,])
CreateEnumType('vim.vsan.VsanSyncStatus', 'VsanSyncStatus', 'vsan.version.version10', ['active' ,'queued' ,'suspended' ,'VsanSyncStatus_Unknown' ,])
CreateEnumType('vim.vsan.host.WipeDiskState', 'VsanHostWipeDiskState', 'vsan.version.version15', ['WipeDiskState_Unknown' ,'Wiping' ,'Success' ,'Failure' ,])
CreateEnumType('vim.vsan.host.WipeDiskEligible', 'VsanHostWipeDiskEligible', 'vsan.version.version15', ['WipeDiskEligible_Unknown' ,'Yes' ,'No' ,'Unknown' ,])
CreateEnumType('vim.vsan.host.ComplianceStatus', 'VsanComplianceStatus', 'vsan.version.version18', ['compliant' ,'nonCompliant' ,'unknown' ,'notApplicable' ,'outOfDate' ,'ComplianceStatus_Unknown' ,])
CreateEnumType('vim.vsan.host.EncryptionOperation', 'VsanEncryptionOperation', 'vsan.version.version21', ['enablement' ,'shallowRekey' ,'deepRekey' ,'EncryptionOperation_Unknown' ,])
CreateEnumType('vim.cluster.StorageComplianceStatus', 'VsanStorageComplianceStatus', 'vim.version.version9', ['compliant' ,'nonCompliant' ,'unknown' ,'notApplicable' ,])
CreateEnumType('vim.host.VsanObjectHealthVersion', 'VsanObjectHealthVersion', 'vsan.version.version21', ['v1' ,'v2' ,'VsanObjectHealthVersion_Unknown' ,])
CreateEnumType('vim.host.VsanObjectHealthComplianceLevel', 'VsanObjectHealthComplianceLevel', 'vsan.version.version21', ['compliant' ,'noncompliant' ,'inaccessible' ,'remoteAccessible' ,'VsanObjectHealthComplianceLevel_Unknown' ,])
CreateEnumType('vim.host.VsanObjectHealthIncomplianceReason', 'VsanObjectHealthIncomplianceReason', 'vsan.version.version21', ['reducedavailabilitywithnodurability' ,'reducedavailabilitywithdurability' ,'othernoncompliant' ,'VsanObjectHealthIncomplianceReason_Unknown' ,])
CreateEnumType('vim.host.VsanObjectHealthRebuildState', 'VsanObjectHealthRebuildState', 'vsan.version.version21', ['activerebuild' ,'pausedrebuild' ,'norebuild' ,'scheduledrebuild' ,'VsanObjectHealthRebuildState_Unknown' ,])
CreateEnumType('vim.host.VsanObjectHealthPolicyApplicationState', 'VsanObjectHealthPolicyApplicationState', 'vsan.version.version21', ['pending' ,'failed' ,'VsanObjectHealthPolicyApplicationState_Unknown' ,])
CreateEnumType('vim.host.VsanObjectHealthState', 'VsanObjectHealthState', 'vim.version.version9', ['inaccessible' ,'reducedavailabilitywithnorebuild' ,'reducedavailabilitywithnorebuilddelaytimer' ,'reducedavailabilitywithactiverebuild' ,'datamove' ,'nonavailabilityrelatedreconfig' ,'nonavailabilityrelatedincompliance' ,'healthy' ,'reducedavailabilitywithpolicypending' ,'reducedavailabilitywithpolicypendingfailed' ,'reducedavailabilitywithpausedrebuild' ,'nonavailabilityrelatedincompliancewithpolicypending' ,'nonavailabilityrelatedincompliancewithpolicypendingfailed' ,'nonavailabilityrelatedincompliancewithpausedrebuild' ,'remoteAccessible' ,'VsanObjectHealthState_Unknown' ,])
CreateEnumType('vim.host.VsanEncryptionIssue', 'VsanEncryptionIssue', 'vsan.version.version3', ['enabledwhenclusterdisabled' ,'disabledwhenclusterenabled' ,'keyencryptionkeyinconsistent' ,'dataencryptionkeyinconsistent' ,'kmsinfoinconsistent' ,'servercertificatesinconsistent' ,'clientcertificateinconsistent' ,'clientkeyinconsistent' ,'hostkeyinconsistent' ,'erasedisksbeforeuseinconsistent' ,'cmknotinenabledstate' ,'cmkcannotretrieve' ,'hostkeynotavailable' ,'keknotavailable' ,'hostencryptiondekidinconsistent' ,'objectencryptioninconsistent' ,'keyencryptionkeyverifierinconsistent' ,'dataencryptionkeyverifierinconsistent' ,'VsanEncryptionIssue_Unknown' ,])
CreateEnumType('vim.host.VsanDiskBalanceState', 'VsanDiskBalanceState', 'vsan.version.version3', ['rebalanceoff' ,'rebalanceentitydecom' ,'rebalancediskunhealthy' ,'imbalancewithintolerance' ,'reactiverebalanceinprogress' ,'reactiverebalancefailed' ,'proactiveneededbutdisabled' ,'proactiverebalanceinprogress' ,'proactiverebalancefailed' ,'proactivenotmustdo' ,'VsanDiskBalanceState_Unknown' ,])
CreateEnumType('vim.host.VsanSmartParameterType', 'VsanSmartParameterType', 'vsan.version.version3', ['smarthealthstatus' ,'smartmediawearoutindicator' ,'smartwriteerrorcount' ,'smartreaderrorcount' ,'smartpoweronhours' ,'smartpowercyclecount' ,'smartreallocatedsectorct' ,'smartrawreaderrorrate' ,'smartdrivetemperature' ,'smartdriveratedmaxtemperature' ,'smartwritesectorstotct' ,'smartreadsectorstotct' ,'smartinitialbadblockcount' ,'VsanSmartParameterType_Unknown' ,])
CreateEnumType('vim.host.VsanObjectDataProtectionHealthState', 'VsanObjectDataProtectionHealthState', 'vsan.version.version22', ['protectionok' ,'notconfigured' ,'fullsyncinprogress' ,'invalidprotectionconfiguration' ,'vmquiescingfailed' ,'unknown' ,'cgobjectnotavailable' ,'retentionfailures' ,'archivestoreinaccessible' ,'archivestorenospace' ,'archivetargetnotconfigured' ,'localstorageusageexceededthreshold' ,'cgcontainsunpromotedobjects' ,'multiplecgsforpe' ,])
CreateEnumType('vim.vsan.VsanHealthStatusType', 'VsanHealthStatusType', 'vsan.version.version11', ['unknown' ,'yellow' ,'red' ,'green' ,])
CreateEnumType('vim.vsan.VsanHealthThresholdTarget', 'VsanHealthThresholdTarget', 'vsan.version.version16', ['diskspace_vsan_datastore' ,'diskspace_vsan_direct' ,'diskspace_vsan_pmem' ,'VsanHealthThresholdTarget_Unknown' ,])
CreateEnumType('vim.host.VsanHostQueryCheckLimitsOptionType', 'VsanHostQueryCheckLimitsOptionType', 'vsan.version.version12', ['logicalCapacity' ,'logicalCapacityUsed' ,'diskTransientCapacityUsed' ,'dgTransientCapacityUsed' ,'dedupMetadata' ,'VsanHostQueryCheckLimitsOptionType_Unknown' ,])
CreateEnumType('vim.host.VsanArchivalAccessibilityHealthState', 'VsanArchivalAccessibilityHealthState', 'vsan.version.version22', ['ARCHIVE_OK' ,'ARCHIVE_READ_ERROR' ,'ARCHIVE_WRITE_ERROR' ,'ARCHIVE_UNKNOWN' ,])
CreateEnumType('vim.cluster.VsanDataProtectionTargetSiteType', 'VsanDataProtectionTargetSiteType', 'vsan.version.version22', ['localprotectiontarget' ,'archiveprotectiontarget' ,'VsanDataProtectionTargetSiteType_Unknown' ,])
CreateEnumType('vim.cluster.VsanDatastoreType', 'VsanDatastoreType', 'vsan.version.version15', ['vsan' ,'vsandirect' ,'pmem' ,'VsanDatastoreType_Unknown' ,])
CreateEnumType('vim.cluster.VsanObjectTypeEnum', 'VsanObjectTypeEnum', 'vim.version.version9', ['vmswap' ,'vdisk' ,'namespace' ,'vmem' ,'statsdb' ,'iscsiTarget' ,'iscsiLun' ,'other' ,'fileSystemOverhead' ,'dedupOverhead' ,'spaceUnderDedupConsideration' ,'checksumOverhead' ,'improvedVirtualDisk' ,'transientSpace' ,'slackSpaceCapRequiredForHost' ,'resynPauseThresholdForHost' ,'minSpaceRequiredForVsanOp' ,'hostRebuildCapacity' ,'physicalTransientSpace' ,'haMetadataObject' ,'fileServiceRoot' ,'attachedCnsVolBlock' ,'detachedCnsVolBlock' ,'attachedCnsVolFile' ,'detachedCnsVolFile' ,'cnsVolFile' ,'fileShare' ,'extension' ,'hbrDisk' ,'hbrCfg' ,'hbrPersist' ,'VsanObjectTypeEnum_Unknown' ,])
CreateEnumType('vim.cluster.VsanSpaceReportingEntityType', 'VsanSpaceReportingEntityType', 'vsan.version.version12', ['VM' ,'FileShare' ,'Host' ,'FaultDomain' ,'VsanSpaceReportingEntityType_Unknown' ,])
CreateEnumType('vim.cluster.VsanRelayoutObjectsErrorCode', 'VsanRelayoutObjectsErrorCode', 'vsan.version.version14', ['outOfResources' ,'generic' ,'VsanRelayoutObjectsErrorCode_Unknown' ,])
CreateEnumType('vim.vsan.VsanPolicyRegulationCheckOpEnum', 'VsanPolicyRegulationCheckOpEnum', 'vsan.version.version16', ['equal' ,'greater' ,'nogreater' ,'less' ,'noless' ,])
CreateEnumType('vim.cluster.VsanPerfSummaryType', 'VsanPerfSummaryType', 'vim.version.version9', ['average' ,'maximum' ,'minimum' ,'latest' ,'summation' ,'none' ,'VsanPerfSummaryType_Unknown' ,])
CreateEnumType('vim.cluster.VsanPerfStatsType', 'VsanPerfStatsType', 'vim.version.version9', ['absolute' ,'delta' ,'rate' ,'VsanPerfStatsType_Unknown' ,])
CreateEnumType('vim.cluster.VsanPerfThresholdDirectionType', 'VsanPerfThresholdDirectionType', 'vim.version.version9', ['upper' ,'lower' ,'VsanPerfThresholdDirectionType_Unknown' ,])
CreateEnumType('vim.cluster.VsanPerfDiagnosticQueryType', 'VsanPerfDiagnosticQueryType', 'vsan.version.version3', ['tput' ,'iops' ,'lat' ,'eval' ,'VsanPerfDiagnosticQueryType_Unknown' ,])
CreateEnumType('vim.cluster.VsanPerfStatsUnitType', 'VsanPerfStatsUnitType', 'vim.version.version9', ['number' ,'time_ms' ,'percentage' ,'size_bytes' ,'rate_bytes' ,'permille' ,'time_s' ,'time_us' ,'time_ns' ,'VsanPerfStatsUnitType_Unknown' ,])
CreateEnumType('vim.host.VsanIoInsightState', 'VsanIoInsightState', 'vsan.version.version14', ['running' ,'stopped' ,'notFound' ,'VsanIoInsightState_unknown' ,])
CreateEnumType('vim.cluster.VsanIoInsightInstanceState', 'VsanIoInsightInstanceState', 'vsan.version.version14', ['running' ,'completed' ,'crashed' ,'VsanIoInsightInstanceState_unknown' ,])
CreateEnumType('vim.cluster.VsanIscsiTargetAuthType', 'VsanIscsiTargetAuthType', 'vim.version.version11', ['NoAuth' ,'CHAP' ,'CHAP_Mutual' ,'VsanIscsiTargetAuthType_Unknown' ,])
CreateEnumType('vim.cluster.VsanIscsiTargetServiceProcessStatus', 'VsanIscsiTargetServiceProcessStatus', 'vim.version.version11', ['Running' ,'Stopped' ,'VsanIscsiTargetServiceProcessStatus_Unknown' ,])
CreateEnumType('vim.cluster.VsanIscsiLUNStatus', 'VsanIscsiLUNStatus', 'vim.version.version11', ['Online' ,'Offline' ,'VsanIscsiLUNStatus_Unknown' ,])
CreateEnumType('vim.vsan.clusterPowerState', 'ClusterPowerState', 'vsan.version.version19', ['poweredOn' ,'poweredOff' ,'poweringOn' ,'poweringOff' ,'ClusterPowerState_Unknown' ,])
CreateEnumType('vim.cluster.VsanBaselinePreferenceType', 'VsanBaselinePreferenceType', 'vsan.version.version10', ['latestRelease' ,'latestPatch' ,'noRecommendation' ,'VsanBaselinePreferenceType_Unknown' ,])
CreateEnumType('vim.cluster.VsanDiskGroupCreationType', 'VimClusterVsanDiskGroupCreationType', 'vim.version.version10', ['allflash' ,'hybrid' ,'vsandirect' ,'pmem' ,'VsanDiskGroupCreationType_Unknown' ,])
CreateEnumType('vim.vsan.host.VsanDiskgroupCapability', 'VsanDiskgroupCapability', 'vsan.version.version19', ['supportLargerThan16TB' ,'VsanDiskgroupCapability_Unknown' ,])
CreateEnumType('vim.vsan.host.VsanDiskTrimOption', 'VsanDiskTrimOption', 'vsan.version.version18', ['metaDataOnly' ,'fullDisk' ,'VsanDiskTrimOption_Unknown' ,])
CreateEnumType('vim.vsan.host.TrimDiskType', 'TrimDiskType', 'vsan.version.version18', ['cacheDisk' ,'capacityDisk' ,'TrimDiskType_Unknown' ,])
CreateEnumType('vim.vsan.VsanScanObjectsIssueType', 'VimVsanVsanScanObjectsIssueType', 'vim.version.version11', ['BROKEN_CHAIN' ,'LEAKED_OBJECT' ,'UNKNOWN' ,])
CreateEnumType('vim.vsan.LifecycleCheckOperation', 'VimVsanLifecycleCheckOperation', 'vsan.version.version17', ['noChecks' ,'LifecycleCheckOperation_unknown' ,])
CreateEnumType('vim.vsan.LifecyclePreCheckType', 'VimVsanLifecyclePreCheckType', 'vsan.version.version17', ['supportedWitnessVersion' ,'virtualWitnessHost' ,'sharedWitnessHost' ,'PreCheckType_unknown' ,])
CreateEnumType('vim.vsan.LifecycleClusterType', 'VimVsanLifecycleClusterType', 'vsan.version.version17', ['single' ,'stretched' ,'metadata' ,'LifecycleClusterType_unknown' ,])
CreateEnumType('vim.cluster.VsanClusterHealthActionIdEnum', 'VsanClusterHealthActionIdEnum', 'vim.version.version9', ['RepairClusterObjectsAction' ,'UploadHclDb' ,'UpdateHclDbFromInternet' ,'EnableHealthService' ,'DiskBalance' ,'StopDiskBalance' ,'RemediateDedup' ,'UpgradeVsanDiskFormat' ,'CreateDVS' ,'ConfigureHA' ,'ConfigureDRS' ,'ConfigureVSAN' ,'ClaimVSANDisks' ,'ClusterUpgrade' ,'CreateVMKnic' ,'CreateVMKnicWithVMotion' ,'RunBurnInTest' ,'EnableIscsiTargetService' ,'EnablePerformanceServiceAction' ,'RemediateClusterConfig' ,'EnableCeip' ,'LoginVumIsoDepot' ,'PurgeInaccessSwapObjs' ,'UploadReleaseCatalog' ,'ConfigureAutomaticRebalance' ,'RemediateFileService' ,'RelayoutVsanObjects' ,'RemediateFileServiceImbalance' ,'SelectNvme' ,'CreateFileServiceDomain' ,'VsanClusterHealthActionIdEnum_Unknown' ,])
CreateEnumType('vim.cluster.VsanHealthLogLevelEnum', 'VsanHealthLogLevelEnum', 'vim.version.version9', ['INFO' ,'WARNING' ,'ERROR' ,'DEBUG' ,'CRITICAL' ,'VsanHealthLogLevelEnum_Unknown' ,])
CreateEnumType('vim.vsan.host.DiskMappingCreationType', 'VimVsanHostDiskMappingCreationType', 'vim.version.version10', ['hybrid' ,'allFlash' ,'vsandirect' ,'pmem' ,'DiskMappingCreationType_Unknown' ,])
CreateEnumType('vim.vsan.cluster.VsanManagedStorageType', 'VimVsanClusterVsanManagedStorageType', 'vsan.version.version19', ['vsandirect' ,'pmem' ,'VsanManagedStorageType_Unknown' ,])
CreateEnumType('vim.cluster.VSANStretchedClusterConfigIssueEnum', 'VimClusterVSANStretchedClusterConfigIssueEnum', 'vim.version.version10', ['ClusterWithoutOneWitnessHost' ,'ClusterWithoutTwoDataFaultDomains' ,'ClusterWithMultipleUnicastAgents' ,'WitnessPreferredFaultDomainInvalid' ,'WitnessPreferredFaultDomainNotExist' ,'WitnessInsideVcCluster' ,'WitnessFaultDomainInvalid' ,'HostUnicastAgentUnset' ,'WitnessWithNoDiskMapping' ,'HostWithNoStretchedClusterSupport' ,'HostWithInvalidUnicastAgent' ,'SharedWitnessClusterDataHostNumExceed' ,'SharedWitnessComponentLimitScaledDown' ,'VSANStretchedClusterConfigIssueEnum_Unknown' ,])
CreateEnumType('vim.cluster.VsanUiScreen', 'VsanUiScreen', 'vsan.version.version21', ['VirtualObjects' ,'VsanUiScreen_Unknown' ,])
CreateEnumType('vim.vsan.PerfsvcRemediateAction', 'VsanPerfsvcRemediateAction', 'vsan.version.version7', ['enable' ,'disable' ,'update_profile' ,'no_action' ,'PerfsvcRemediateAction_Unknown' ,])
CreateEnumType('vim.vsan.VsanHealthPerspective', 'VsanHealthPerspective', 'vsan.version.version3', ['defaultView' ,'deployAssist' ,'CreateExtendClusterView' ,'beforeConfigureHost' ,'upgradePreCheck' ,'vsanUpgradePreCheck' ,'upgradeBeforeExitMM' ,'upgradeAfterExitMM' ,'vsanUpgradeBeforeExitMM' ,'vsanUpgradeAfterExitMM' ,'vmcUpgradePreChecks' ,'upgradePreCheckPman' ,'upgradeBeforeExitMMPman' ,'upgradeAfterExitMMPman' ,'inPlaceUpgradeServiceMode' ,'upgradePreCheckPmanForVMC' ,'upgradeBeforeExitMMPmanForVMC' ,'upgradeAfterExitMMPmanForVMC' ,'clusterPowerOffPrecheck' ,'VsanEsaPreChecks' ,'vcsaInstallerForVsanEsa' ,'upgradePreCheckForVCF' ,'VsanHealthPerspective_Unknown' ,])
CreateEnumType('vim.vsan.VsanVcsaDeploymentPhase', 'VimVsanVsanVcsaDeploymentPhase', 'vim.version.version11', ['initializing' ,'validation' ,'vsanbootstrap' ,'ovaunpack' ,'vcsadeploy' ,'vcconfig' ,'done' ,'failed' ,'VsanVcsaDeploymentPhase_Unknown' ,])
CreateEnumType('vim.VsanPropertyConstraintComparatorEnum', 'VsanPropertyConstraintComparatorEnum', 'vsan.version.version7', ['EQUALS' ,'GREATER' ,'SMALLER' ,'POP' ,'CONTAINS' ,'TEXTUALLY_MATCHES' ,'VsanPropertyConstraintComparatorEnum_Unknown' ,])
CreateEnumType('vim.VsanCompositeConstraintConjoinerEnum', 'VsanCompositeConstraintConjoinerEnum', 'vsan.version.version3', ['AND' ,'OR' ,'EXCEPT' ,'VsanCompositeConstraintConjoinerEnum_Unknown' ,])
CreateEnumType('vim.VsanMassCollectorObjectCollectionEnum', 'VsanMassCollectorObjectCollectionEnum', 'vsan.version.version3', ['ALL_HOSTS' ,'ALL_VSAN_ENABLED_HOSTS' ,'ALL_CLUSTERS' ,'ALL_VSAN_ENABLED_CLUSTERS' ,'VCENTER' ,'SERVICE_INSTANCE' ,'ALL_VSAN_ENABLED_HOSTS_EXCEPT_WITNESS' ,'ALL_DATASTORES' ,'ALL_VSAN_DATASTORES' ,'ALL_VMFS_DATASTORES' ,'VsanMassCollectorObjectCollectionEnum_Unknown' ,])
CreateEnumType('vim.cluster.VsanCapabilityStatus', 'VsanCapabilityStatus', 'vsan.version.version3', ['unknown' ,'oldversion' ,'disconnected' ,'calculated' ,])
CreateEnumType('vim.cluster.VsanCapabilityType', 'VsanCapabilityType', 'vim.version.version10', ['capability' ,'allflash' ,'stretchedcluster' ,'dataefficiency' ,'clusterconfig' ,'upgrade' ,'objectidentities' ,'iscsitargets' ,'witnessmanagement' ,'perfsvcverbosemode' ,'encryption' ,'decomwhatif' ,'throttleresync' ,'unicastmode' ,'device4ksupport' ,'nestedfd' ,'complianceprecheck' ,'vumintegration' ,'firmwareupdate' ,'fullStackFw' ,'configassist' ,'umap' ,'localdataprotection' ,'archivaldataprotection' ,'remotedataprotection' ,'pr1741414fixed' ,'cloudhealth' ,'perfanalysis' ,'fcd' ,'healthcheck2018q2' ,'enhancedresyncapi' ,'genericnestedfd' ,'hostaffinity' ,'perfsvcautoconfig' ,'unicasttest' ,'vsanrdma' ,'vumbaselinerecommendation' ,'supportinsight' ,'netperftest' ,'masspropertycollector' ,'whatifcapacity' ,'historicalcapacity' ,'policyassociation' ,'policyhostapi' ,'diagnosticmode' ,'purgeinaccessiblevmswapobjects' ,'recreatediskgroup' ,'repairtimerinresyncstats' ,'clusteradvancedoptions' ,'updatevumreleasecatalogoffline' ,'performanceforsupport' ,'gethcllastupdateonvc' ,'automaticrebalance' ,'verbosemodeconfiguration' ,'resyncetaimprovement' ,'fileservices' ,'fileservicekerberos' ,'fileservicesmb' ,'fileservicecrx' ,'fileservicenfsv3' ,'fileservicesc' ,'fileservicesnapshot' ,'fileserviceowe' ,'fileservicehomedir' ,'fileservice80' ,'resourceprecheck' ,'upgraderesourceprecheck' ,'vitonlineresize' ,'vitstretchedcluster' ,'largecapacitydrive' ,'nondatamovementdfc' ,'cnsvolumes' ,'filevolumes' ,'diagnosticsfeedback' ,'hostreservedcapacity' ,'vmlevelcapacity' ,'improvedcapacityscreen' ,'slackspacecapacity' ,'sharedwitness' ,'VsanCapabilityType_Unknown' ,'supportApiVersion' ,'vsanmetadatanode' ,'pmanintegration' ,'wcpappplatform' ,'diskresourceprecheck' ,'metricsconfig' ,'ioinsight' ,'apidevversionenabled' ,'nativelargeclustersupport' ,'historicalhealth' ,'dataintransitencryption' ,'perfsvctwoyaxisgraph' ,'compressiononly' ,'remotedatastore' ,'vsanmanagedvmfs' ,'capacityreservation' ,'securewipe' ,'validateconfigspec' ,'vsananalyticsevents' ,'vsandefaultgatewaysupported' ,'pspairgap' ,'vsanmanagedpmem' ,'capacityevaluationonvc' ,'readlocalitytodrs' ,'ensuredurability' ,'vsanencrkmx' ,'vsan2encr' ,'dit4sw' ,'vsanclient' ,'capacityoversubscription' ,'vsandiagnostics' ,'capacitycustomizablethresholds' ,'hcimeshpolicy' ,'topcontributors' ,'vsanfileanalytics' ,'vsandirectdiskdecom' ,'objectscrubconfig' ,'diskmgmtredesign' ,'datapersistresourcecheck' ,'vsanobjhealthv2' ,'clusterpoweraction' ,'clusterpowerselfcontain' ,'duplicatepciidfix' ,'rdmastretchedclustersupport' ,'v1metadataresiliency' ,'healthcorrelation' ,'vcgnotification' ,'volumerelocation' ,'iodiagnostics' ,'vsanrebuildtrim' ,'elasticpolicy' ,'vsanEsaConfigure' ,'hdcsintegration' ,'vsanesasingletier' ,'vsanperfhighresolution' ,'cnsreconfigpolicy' ,'vsanhostdomlatencysort' ,'sha256thumbprint' ,])
CreateEnumType('vim.vsan.ResourceCheckComponentType', 'VsanResourceCheckComponentType', 'vsan.version.version17', ['vSAN' ,'DataPersistence' ,'ResourceCheckComponentType_Unknown' ,])
CreateEnumType('vim.vsan.ResourceCheckStatusType', 'VsanResourceCheckStatusType', 'vsan.version.version10', ['resourceCheckUninitialized' ,'resourceCheckRunning' ,'resourceCheckFailed' ,'resourceCheckCancelled' ,'resourceCheckCompleted' ,'resourceCheckNoRecentValue' ,'resourceCheckNotSupported' ,'ResourceCheckStatusType_Unknown' ,])
CreateEnumType('vim.vsan.cluster.ResourceQueryType', 'VimVsanClusterResourceQueryType', 'vsan.version.version21', ['compliance' ,'decommission' ,'ResourceQueryType_Unknown' ,])
CreateEnumType('vim.vsan.cluster.ComplianceResourceCheckStatusType', 'VimVsanClusterComplianceResourceCheckStatusType', 'vsan.version.version7', ['inProgress' ,'aborted' ,'completed' ,'uninitialized' ,'ComplianceResourceCheckStatusType_Unknown' ,])
CreateEnumType('vim.vsan.MountPrecheckType', 'VimVsanMountPrecheckType', 'vsan.version.version15', ['supportedConfiguration' ,'localVsanDatastore' ,'datastoreType' ,'datacenter' ,'vsanFormatVersion' ,'serverClusterHealth' ,'datastorePolicy' ,'remoteDatastoreLimit' ,'clientClusterLimit' ,'serverClusterLimit' ,'connectivity' ,'networkLatency' ,'license' ,'precheck_unknown' ,'serverVersionForComputeMode' ,'remotevcconnection' ,'datastoreexists' ,])
CreateEnumType('vim.vsan.HciMeshClientOperation', 'VimVsanHciMeshClientOperation', 'vsan.version.version21', ['dryrun' ,'mount' ,'unmount' ,'HciMeshClientOperation_unknown' ,])
CreateEnumType('vim.cluster.VsanFlrLocation', 'VsanFlrLocation', 'vsan.version.version22', ['local' ,'archive' ,'remote' ,'VsanFlrMountSpec_Unknown' ,])
CreateEnumType('vim.vsan.FileShareManagingEntity', 'VsanFileShareManagingEntity', 'vsan.version.version12', ['cns' ,'user' ,'FileShareManagingEntity_Unknown' ,])
CreateEnumType('vim.vsan.FileServiceConfigOpType', 'VsanFileServiceConfigOpType', 'vsan.version.version16', ['CleanAffinityLocation' ,'FileServiceConfigOpType_Unknown' ,])
CreateEnumType('vim.vsan.FileServicePreflightCheckScope', 'VsanFileServicePreflightCheckScope', 'vsan.version.version19', ['basic' ,'advanced' ,'FileServicePreflightCheckScope_Unknown' ,])
CreateEnumType('vim.vsan.FileServiceVMStatus', 'VsanFileServiceVMStatus', 'vsan.version.version12', ['running' ,'upgrading' ,'FileServiceVMStatus_Unknown' ,])
CreateEnumType('vim.vsan.FileShareAccessType', 'VsanFileShareAccessType', 'vsan.version.version12', ['READ_ONLY' ,'READ_WRITE' ,'NO_ACCESS' ,'FileShareAccessType_Unknown' ,])
CreateEnumType('vim.vsan.FileShareProtocol', 'VsanFileProtocol', 'vsan.version.version15', ['NFSv3' ,'NFSv4' ,'SMB' ,'FileShareProtocol_Unknown' ,])
CreateEnumType('vim.vsan.FileShareNfsSecType', 'VsanFileShareNfsSecType', 'vsan.version.version15', ['SYS' ,'KRB5' ,'KRB5I' ,'KRB5P' ,'FileShareNfsSecType_Unknown' ,])
CreateEnumType('vim.vsan.FileShareSmbEncryptionType', 'VsanFileShareSmbEncryptionType', 'vsan.version.version15', ['disabled' ,'mandatory' ,'FileShareSmbEncryptionType_Unknown' ,])
CreateEnumType('vim.vsan.FileShareAntiVirusOnAccessScanType', 'VsanFileShareAntiVirusOnAccessScanType', 'vsan.version.version21', ['OnOpen' ,'OnClose' ,'OnRead' ,'VsanFileShareAntiVirusOnAccessScanType_Unknown' ,])
CreateEnumType('vim.vsan.VsanFileShareAntiVirusScanStatus', 'VsanFileShareAntiVirusScanStatus', 'vsan.version.version21', ['NotScannedYet' ,'InProgress' ,'Complete' ,'VsanFileShareAntiVirusScanStatus_Unknown' ,])
CreateEnumType('vim.cns.VolumeType', 'CnsVolumeType', 'vsan.version.version11', ['BLOCK' ,'FILE' ,'VolumeType_Unknown' ,])
CreateEnumType('vim.cns.ClusterType', 'CnsClusterType', 'vsan.version.version11', ['KUBERNETES' ,'ClusterType_Unknown' ,])
CreateEnumType('vim.cns.ClusterFlavor', 'CnsClusterFlavor', 'vsan.version.version12', ['VANILLA' ,'WORKLOAD' ,'GUEST_CLUSTER' ,'ClusterFlavor_Unknown' ,])
CreateEnumType('vim.cns.KubernetesEntityType', 'CnsKubernetesEntityType', 'vsan.version.version11', ['PERSISTENT_VOLUME' ,'PERSISTENT_VOLUME_CLAIM' ,'POD' ,'KubernetesEntityType_Unknown' ,])
CreateEnumType('vim.cns.QuerySelectionNameType', 'QuerySelectionNameType', 'vsan.version.version11', ['VOLUME_METADATA' ,'DATASTORE_URL' ,'POLICY_ID' ,'VOLUME_TYPE' ,'VOLUME_NAME' ,'BACKING_OBJECT_DETAILS' ,'COMPLIANCE_STATUS' ,'DATASTORE_ACCESSIBILITY_STATUS' ,'HEALTH_STATUS' ,'QuerySelectionNameType_Unknown' ,])
CreateEnumType('vim.cns.MetricType', 'MetricType', 'vsan.version.version15', ['VOLUME' ,'DATASTORE' ,'CLUSTER' ,'DISTRIBUTION' ,'STORAGE_POLICY' ,'OP_STATS' ,'SAAS_METRICS' ,'MetricType_Unknown' ,])
CreateEnumType('vim.cns.MetricFormat', 'MetricFormat', 'vsan.version.version15', ['PROMETHEUS' ,'WAVEFRONT' ,'MetricFormat_Unknown' ,])
CreateEnumType('vim.vsan.IODiagnosticsTargetType', 'VsanIODiagnosticsTargetType', 'vsan.version.version18', ['VirtualMachine' ,'VsanIODiagnosticsTargetType_Unknown' ,])
CreateEnumType('vim.vsan.IODiagnosticsInstanceState', 'VsanIODiagnosticsInstanceState', 'vsan.version.version18', ['VsanIODiagnosticsInstanceCompleted' ,'VsanIODiagnosticsInstanceRunning' ,'VsanIODiagnosticsInstanceState_Unknown' ,])
CreateEnumType('vim.vsan.IODiagnosticsInstanceEventType', 'VsanIODiagnosticsInstanceEventType', 'vsan.version.version18', ['objectOwnerTransfer' ,'primaryHostTransfer' ,'vsanmgmtdRestart' ,'objectComponentsLayoutChange' ,'VsanIODiagnosticsInstanceEventType_Unknown' ,])
CreateEnumType('vim.vsan.IOLatencyType', 'VsanIOLatencyType', 'vsan.version.version18', ['DomOwnerLatency' ,'NetworkLatency' ,'LsomLatency' ,'VsanIOLatencyType_Unknown' ,'ZdomLatency' ,'PerfDomOwnerLatency' ,'CapacityDomOwnerLatency' ,'PerfNetworkLatency' ,'CapacityNetworkLatency' ,'PerfLsomLatency' ,'CapacityLsomLatency' ,])
CreateEnumType('vim.vsan.IODiagnosticsFailedCheckType', 'VsanIODiagnosticsFailedCheckType', 'vsan.version.version18', ['perfsvcdisabled' ,'vsandisabled' ,'runninginstance' ,'stretchedcluster' ,'nestedfaultdomain' ,'computeonlycluster' ,'networkpartition' ,'vmnotpoweredon' ,'vsanobjectinremotedatastore' ,'invalidtarget' ,'invalidobjuuid' ,'invalidduration' ,'VsanIODiagnosticsFailedCheckType_Unknown' ,])
CreateEnumType('vim.vsan.VsanAnalyticsEventLocationType', 'VsanAnalyticsEventLocationType', 'vsan.version.version15', ['CLUSTER' ,'HOST' ,'DISK' ,'EVENT_LOCATION_UNKNOWN' ,])
CreateEnumType('vim.vsan.VsanAnalyticsEventType', 'VsanAnalyticsEventType', 'vsan.version.version15', ['STORAGE_OBJECT_UNAVAILABLE' ,'STORAGE_OBJECT_AVAILABLE' ,'STORAGE_OBJECT_REPL_CHANGE' ,'STORAGE_OBJECT_LOST' ,'STORAGE_OBJECT_CREATED' ,'STORAGE_OBJECT_DELETED' ,'STORAGE_DOM_OBJECT_CHANGE' ,'REPAIR_START' ,'REPAIR_END' ,'REBUILD_START' ,'REBUILD_END' ,'RESYNC_IN_PROGRESS' ,'RESYNC_END' ,'PATCH_START' ,'PATCH_END' ,'DG_DECOM_START' ,'DG_DECOM_END' ,'HOST_DECOM_START' ,'HOST_DECOM_FAIL' ,'HOST_DECOM_END' ,'CLUSTER_CREATED' ,'CLUSTER_DELETED' ,'SDDC_CREATED' ,'SDDC_DELETED' ,'HOST_CREATED' ,'HOST_DELETED' ,'CLUSTER_MEMBERSHIP_CHANGED' ,'DEVICE_FAILURE' ,'DEVICE_NORMAL' ,'DEVICE_OFFLINE' ,'DEVICE_ERROR' ,'HOST_FAILURE' ,'HOST_NORMAL' ,'EVENT_TYPE_UNKNOWN' ,])
CreateEnumType('vim.vsan.VsanAnalyticsEventSnapshotType', 'VsanAnalyticsEventSnapshotType', 'vsan.version.version15', ['OBJECT_SNAPSHOT' ,'HOST_SNAPSHOT' ,'DISK_SNAPSHOT' ,'POLICY_SNAPSHOT' ,'SNAPSHOT_TYPE_UNKNOWN' ,])
CreateEnumType('dp.vpx.SnapshotType', 'DpSnapshotType', 'vsan.version.version16', ['crashConsistent' ,'applicationConsistent' ,'vssAppConsistentFull' ,'vssAppConsistentCopy' ,'metadataOnly' ,'vssAppConsistent' ,'snapshotTypeUnknown' ,])
CreateEnumType('dp.vpx.SyncType', 'DpSyncType', 'vsan.version.version16', ['fullSync' ,'deltaSync' ,'syncTypeUnknown' ,])
CreateEnumType('dp.vpx.ProtectionSupportType', 'DpProtectionSupportType', 'vsan.version.version16', ['supported' ,'partially_supported' ,'not_supported' ,'ProtectionSupportType_unknown' ,])
CreateEnumType('dp.vpx.ProtectionStatusType', 'DpProtectionStatusType', 'vsan.version.version18', ['pe_protected' ,'pe_unprotected' ,'pe_partially_protected' ,'ProtectionStatusType_unknown' ,])
CreateEnumType('dp.vpx.MigrationType', 'DpMigrationType', 'vsan.version.version19', ['coldMigration' ,'hotMigration' ,'migrationTypeUnknown' ,])
CreateEnumType('dp.vpx.VssBackupType', 'DpVssBackupType', 'vsan.version.version21', ['vssBackupTypeFull' ,'vssBackupTypeCopy' ,'vssBackupTypeUnknown' ,])
CreateEnumType('dp.vpx.VssBackupContext', 'DpVssBackupContext', 'vsan.version.version21', ['vssBackupContextAuto' ,'vssBackupContextBackup' ,'vssBackupContextFileShareBackup' ,'vssBackupContextUnknown' ,])
CreateEnumType('vim.vsan.FileAnalyticsTaskStatus', 'FileAnalyticsTaskStatus', 'vsan.version.version21', ['scan_finished' ,'scan_error' ,'scan_started' ,'scan_in_progress' ,'scan_timeout' ,'FileAnalyticsTaskStatus_Unknown' ,])
CreateEnumType('vim.vsan.VsanFileAnalyticsReportType', 'VsanFileAnalyticsReportType', 'vsan.version.version21', ['by_file_type' ,'by_file_access' ,'by_file_age' ,'by_file_size' ,'by_fileshare_capacity' ,'by_fileshare_largest' ,'by_fileshare_quota' ,'by_fileshare_access' ,'by_fileshare_growth' ,'by_fileshare_details' ,'by_recent_activity' ,'VsanFileAnalyticsReportType_Unknown' ,])
CreateEnumType('vim.vsan.FileAnalyticsFileShareOperations', 'FileAnalyticsFileShareOperations', 'vsan.version.version21', ['Read' ,'Write' ,'Rename' ,'Delete' ,'FileAnalyticsFileShareOperations_Unknown' ,])
CreateEnumType('vim.vsan.FileAnalyticsFileShareDashboardLabels', 'FileAnalyticsFileShareDashboardLabels', 'vsan.version.version21', ['usage' ,'quota' ,'growth' ,'soft_quota' ,'usage_by_quota' ,'total_usage' ,'files_added' ,'files_deleted' ,'last_accessed_time' ,'FileAnalyticsFileShareDashboardLabels_Unknown' ,])
CreateEnumType('vim.vsan.FileAnalyticsCommonDashboardLabels', 'FileAnalyticsCommonDashboardLabels', 'vsan.version.version21', ['file_count' ,'file_size' ,'access_count' ,'fileshare_name' ,'FileAnalyticsCommonDashboardLabels_Unknown' ,])
CreateEnumType('vim.vsan.VsanFileAnalyticsFileAgeGroups', 'VsanFileAnalyticsFileAgeGroups', 'vsan.version.version21', ['created_date' ,'last_accessed_date' ,'last_modified_date' ,'VsanFileAnalyticsFileAgeGroups_Unknown' ,])
CreateEnumType('vim.vsan.VsanFileAnalyticsFileAgeRanges', 'VsanFileAnalyticsFileAgeRanges', 'vsan.version.version21', ['less_than_one_month' ,'one_month_to_three_months' ,'three_months_to_six_months' ,'six_months_to_one_year' ,'more_than_one_year' ,'VsanFileAnalyticsFileAgeRanges_Unknown' ,])
CreateEnumType('vim.vsan.VsanFileAnalyticsFileTypeLabels', 'VsanFileAnalyticsFileTypeLabels', 'vsan.version.version21', ['archives' ,'audio' ,'backup' ,'documents' ,'image' ,'installers' ,'log' ,'others' ,'scripts' ,'system_files' ,'temporary' ,'video' ,'VsanFileAnalyticsFileTypeLabels_Unknown' ,])
CreateEnumType('vim.vsan.VsanFileAnalyticsFileSizeLabels', 'VsanFileAnalyticsFileSizeLabels', 'vsan.version.version21', ['less_than_a_mb' ,'one_mb_to_ten_mb' ,'ten_mb_to_hundred_mb' ,'hundred_mb_to_one_gb' ,'more_than_one_gb' ,'VsanFileAnalyticsFileSizeLabels_Unknown' ,])
CreateEnumType('vim.cluster.ClusterPowerStatus', 'ClusterPowerStatus', 'vsan.version.version18', ['clusterPoweredOn' ,'haDisabled' ,'supportedVMsPoweredOff' ,'vcVMPoweredOff' ,'vsanMemberShipUpdateDisabled' ,'vsanDOMPauseAllCCPsSet' ,'hostsInMM' ,'hostsPoweredOff' ,'clusterPoweredOff' ,'hostsOutOfMM' ,'vsanMemberShipUpdateEnabled' ,'vsanDOMPauseAllCCPsUnset' ,'vcVMPoweredOn' ,'supportedVMsPoweredOn' ,'haEnabled' ,'infraVMsRecorded' ,'hostsInfraVMsPoweredoff' ,'hostsInfraVMsPoweredon' ,'ClusterPowerStatus_Unknown' ,])